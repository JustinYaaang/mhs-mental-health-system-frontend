{"ast":null,"code":"import _defineProperty from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/src/components/Tasks/Tasks.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; // @material-ui/icons\n\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport tasksStyle from \"assets/jss/material-dashboard-react/components/tasksStyle.jsx\";\nimport { TableHead } from \"@material-ui/core\";\nimport tableStyle from \"assets/jss/material-dashboard-react/components/tableStyle.jsx\";\n\nvar Tasks =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tasks, _React$Component);\n\n  function Tasks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tasks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tasks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: _this.props.checkedIndexes\n    };\n\n    _this.handleToggle = function (value) {\n      return function () {\n        var checked = _this.state.checked;\n        var currentIndex = checked.indexOf(value);\n\n        var newChecked = _toConsumableArray(checked);\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        _this.setState({\n          checked: newChecked\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Tasks, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          tasksIndexes = _this$props.tasksIndexes,\n          tasks = _this$props.tasks,\n          rtlActive = _this$props.rtlActive,\n          tableHead = _this$props.tableHead,\n          tableHeaderColor = _this$props.tableHeaderColor;\n      console.log(tableHeaderColor);\n      var tableCellClasses = classnames(classes.tableCell, _defineProperty({}, classes.tableCellRTL, rtlActive));\n      return React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, tableHead !== undefined ? React.createElement(TableHead, {\n        className: classes[tableHeaderColor + \"TableHeader\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        className: classes.tableHeadRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, tableHead.map(function (prop, key) {\n        return React.createElement(TableCell, {\n          className: classes.tableCell + \" \" + classes.tableHeadCell,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, prop);\n      }))) : null, React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, tasksIndexes.map(function (value) {\n        return React.createElement(TableRow, {\n          key: value,\n          className: classes.tableRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: tableCellClasses,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this2.state.checked.indexOf(value) !== -1,\n          tabIndex: -1,\n          onClick: _this2.handleToggle(value),\n          checkedIcon: React.createElement(Check, {\n            className: classes.checkedIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }),\n          icon: React.createElement(Check, {\n            className: classes.uncheckedIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }),\n          classes: {\n            checked: classes.checked,\n            root: classes.root\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        })), React.createElement(TableCell, {\n          className: tableCellClasses,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, tasks[value]), React.createElement(TableCell, {\n          className: classes.tableActions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          id: \"tooltip-top\",\n          title: \"Edit Task\",\n          placement: \"top\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Edit\",\n          className: classes.tableActionButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Edit, {\n          className: classes.tableActionButtonIcon + \" \" + classes.edit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }))), React.createElement(Tooltip, {\n          id: \"tooltip-top-start\",\n          title: \"Remove\",\n          placement: \"top\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Close\",\n          className: classes.tableActionButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(Close, {\n          className: classes.tableActionButtonIcon + \" \" + classes.close,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })))));\n      })));\n    }\n  }]);\n\n  return Tasks;\n}(React.Component);\n\nTasks.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.node),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array,\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"])\n};\nexport default withStyles(tasksStyle)(Tasks);","map":{"version":3,"sources":["/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/src/components/Tasks/Tasks.jsx"],"names":["React","PropTypes","classnames","withStyles","Checkbox","Tooltip","IconButton","Table","TableRow","TableBody","TableCell","Edit","Close","Check","tasksStyle","TableHead","tableStyle","Tasks","state","checked","props","checkedIndexes","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","setState","classes","tasksIndexes","tasks","rtlActive","tableHead","tableHeaderColor","console","log","tableCellClasses","tableCell","tableCellRTL","table","undefined","tableHeadRow","map","prop","key","tableHeadCell","tableRow","checkedIcon","uncheckedIcon","root","tableActions","tooltip","tableActionButton","tableActionButtonIcon","edit","close","Component","propTypes","object","isRequired","arrayOf","number","node","bool","array","string","oneOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// @material-ui/icons\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport tasksStyle from \"assets/jss/material-dashboard-react/components/tasksStyle.jsx\";\nimport { TableHead } from \"@material-ui/core\";\nimport tableStyle from \"assets/jss/material-dashboard-react/components/tableStyle.jsx\";\n\nclass Tasks extends React.Component {\n  state = {\n    checked: this.props.checkedIndexes\n  };\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked\n    });\n  };\n  render() {\n    const { classes, tasksIndexes, tasks, rtlActive, tableHead, tableHeaderColor } = this.props;\n    console.log(tableHeaderColor)\n    const tableCellClasses = classnames(classes.tableCell, {\n      [classes.tableCellRTL]: rtlActive\n    });\n    return (\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tasksIndexes.map(value => (\n            <TableRow key={value} className={classes.tableRow}>\n              <TableCell className={tableCellClasses}>\n                <Checkbox\n                  checked={this.state.checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  onClick={this.handleToggle(value)}\n                  checkedIcon={<Check className={classes.checkedIcon} />}\n                  icon={<Check className={classes.uncheckedIcon} />}\n                  classes={{\n                    checked: classes.checked,\n                    root: classes.root\n                  }}\n                />\n              </TableCell>\n\n              <TableCell className={tableCellClasses}>{tasks[value]}</TableCell>\n\n             \n\n              <TableCell className={classes.tableActions}>\n                <Tooltip\n                  id=\"tooltip-top\"\n                  title=\"Edit Task\"\n                  placement=\"top\"\n                  classes={{ tooltip: classes.tooltip }}\n                >\n                  <IconButton\n                    aria-label=\"Edit\"\n                    className={classes.tableActionButton}\n                  >\n                    <Edit\n                      className={\n                        classes.tableActionButtonIcon + \" \" + classes.edit\n                      }\n                    />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip\n                  id=\"tooltip-top-start\"\n                  title=\"Remove\"\n                  placement=\"top\"\n                  classes={{ tooltip: classes.tooltip }}\n                >\n                  <IconButton\n                    aria-label=\"Close\"\n                    className={classes.tableActionButton}\n                  >\n                    <Close\n                      className={\n                        classes.tableActionButtonIcon + \" \" + classes.close\n                      }\n                    />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nTasks.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.node),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array,\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ])\n};\n\nexport default withStyles(tasksStyle)(Tasks);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/src/components/Tasks/Tasks.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; // @material-ui/icons\n\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport tasksStyle from \"assets/jss/material-dashboard-react/components/tasksStyle.jsx\"; // import { TableHead } from \"@material-ui/core\";\n\nimport TableHead from \"@material-ui/core/TableHead\";\n\nvar Tasks =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tasks, _React$Component);\n\n  function Tasks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tasks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tasks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: _this.props.checkedIndexes\n    };\n\n    _this.handleToggle = function (value) {\n      return function () {\n        var checked = _this.state.checked;\n        var currentIndex = checked.indexOf(value);\n\n        var newChecked = _toConsumableArray(checked);\n\n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n\n        _this.setState({\n          checked: newChecked\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Tasks, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          tableHeaderColor = _this$props.tableHeaderColor,\n          tableHead = _this$props.tableHead,\n          tasksIndexes = _this$props.tasksIndexes,\n          tasks = _this$props.tasks,\n          rtlActive = _this$props.rtlActive;\n      console.log(tableHeaderColor);\n      var tableCellClasses = classnames(classes.tableCell, _defineProperty({}, classes.tableCellRTL, rtlActive));\n      return React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, tableHead !== undefined ? React.createElement(TableHead, {\n        className: classes[tableHeaderColor + \"TableHeader\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        className: classes.tableHeadRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, tableHead.map(function (prop, key) {\n        return React.createElement(TableCell, {\n          className: classes.tableCell + \" \" + classes.tableHeadCell,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, prop);\n      }))) : null, React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, tasks.map(function (value, index) {\n        var curTask = tasks[value];\n        return React.createElement(TableRow, {\n          key: value,\n          className: classes.tableRow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: tableCellClasses,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this2.state.checked.indexOf(value) !== -1,\n          tabIndex: -1,\n          onClick: _this2.handleToggle(value),\n          checkedIcon: React.createElement(Check, {\n            className: classes.checkedIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }),\n          icon: React.createElement(Check, {\n            className: classes.uncheckedIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }),\n          classes: {\n            checked: classes.checked,\n            root: classes.root\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        })), curTask.map(function (invalue) {\n          console.log(invalue);\n        }), React.createElement(TableCell, {\n          className: classes.tableActions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          id: \"tooltip-top\",\n          title: \"Edit Task\",\n          placement: \"top\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Edit\",\n          className: classes.tableActionButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Edit, {\n          className: classes.tableActionButtonIcon + \" \" + classes.edit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }))), React.createElement(Tooltip, {\n          id: \"tooltip-top-start\",\n          title: \"Remove\",\n          placement: \"top\",\n          classes: {\n            tooltip: classes.tooltip\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Close\",\n          className: classes.tableActionButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Close, {\n          className: classes.tableActionButtonIcon + \" \" + classes.close,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        })))));\n      })));\n    }\n  }]);\n\n  return Tasks;\n}(React.Component);\n\nTasks.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tableHeaderColor: PropTypes.oneOf([\"warning\", \"primary\", \"danger\", \"success\", \"info\", \"rose\", \"gray\"]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array\n};\nexport default withStyles(tasksStyle)(Tasks);","map":{"version":3,"sources":["/Users/moiravan/React/mhs-mental-health-system-frontend/web-frontend-template/src/components/Tasks/Tasks.jsx"],"names":["React","PropTypes","classnames","withStyles","Checkbox","Tooltip","IconButton","Table","TableRow","TableBody","TableCell","Edit","Close","Check","tasksStyle","TableHead","Tasks","state","checked","props","checkedIndexes","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","setState","classes","tableHeaderColor","tableHead","tasksIndexes","tasks","rtlActive","console","log","tableCellClasses","tableCell","tableCellRTL","table","undefined","tableHeadRow","map","prop","key","tableHeadCell","index","curTask","tableRow","checkedIcon","uncheckedIcon","root","invalue","tableActions","tooltip","tableActionButton","tableActionButtonIcon","edit","close","Component","propTypes","object","isRequired","oneOf","arrayOf","string","number","bool","array"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// @material-ui/icons\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport tasksStyle from \"assets/jss/material-dashboard-react/components/tasksStyle.jsx\";\n// import { TableHead } from \"@material-ui/core\";\nimport TableHead from \"@material-ui/core/TableHead\";\n\n\n\nclass Tasks extends React.Component {\n  state = {\n    checked: this.props.checkedIndexes\n  };\n  handleToggle = value => () => {\n    const { checked } = this.state;\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    this.setState({\n      checked: newChecked\n    });\n  };\n  render() {\n    const { classes, tableHeaderColor, tableHead,  tasksIndexes, tasks, rtlActive} = this.props;\n    console.log(tableHeaderColor)\n    const tableCellClasses = classnames(classes.tableCell, {\n      [classes.tableCellRTL]: rtlActive\n    });\n    return (\n      <Table className={classes.table}>\n        {tableHead !== undefined ? (\n          <TableHead className={classes[tableHeaderColor + \"TableHeader\"]}>\n            <TableRow className={classes.tableHeadRow}>\n              {tableHead.map((prop, key) => {\n                return (\n                  <TableCell\n                    className={classes.tableCell + \" \" + classes.tableHeadCell}\n                    key={key}\n                  >\n                    {prop}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n        ) : null}\n        <TableBody>\n          {tasks.map((value, index) => {\n            const curTask = tasks[value];\n            return (\n            <TableRow key={value} className={classes.tableRow}>\n              <TableCell className={tableCellClasses}>\n                <Checkbox\n                  checked={this.state.checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  onClick={this.handleToggle(value)}\n                  checkedIcon={<Check className={classes.checkedIcon} />}\n                  icon={<Check className={classes.uncheckedIcon} />}\n                  classes={{\n                    checked: classes.checked,\n                    root: classes.root\n                  }}\n                />\n              </TableCell>\n\n              {curTask.map(invalue => {\n                console.log(invalue);\n              })}\n\n            \n              <TableCell className={classes.tableActions}>\n                <Tooltip\n                  id=\"tooltip-top\"\n                  title=\"Edit Task\"\n                  placement=\"top\"\n                  classes={{ tooltip: classes.tooltip }}\n                >\n                  <IconButton\n                    aria-label=\"Edit\"\n                    className={classes.tableActionButton}\n                  >\n                    <Edit\n                      className={\n                        classes.tableActionButtonIcon + \" \" + classes.edit\n                      }\n                    />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip\n                  id=\"tooltip-top-start\"\n                  title=\"Remove\"\n                  placement=\"top\"\n                  classes={{ tooltip: classes.tooltip }}\n                >\n                  <IconButton\n                    aria-label=\"Close\"\n                    className={classes.tableActionButton}\n                  >\n                    <Close\n                      className={\n                        classes.tableActionButtonIcon + \" \" + classes.close\n                      }\n                    />\n                  </IconButton>\n                </Tooltip>\n              </TableCell>\n\n            </TableRow>\n          )})}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nTasks.propTypes = {\n  classes: PropTypes.object.isRequired,\n  tableHeaderColor: PropTypes.oneOf([\n    \"warning\",\n    \"primary\",\n    \"danger\",\n    \"success\",\n    \"info\",\n    \"rose\",\n    \"gray\"\n  ]),\n  tableHead: PropTypes.arrayOf(PropTypes.string),\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array\n  \n};\n\nexport default withStyles(tasksStyle)(Tasks);\n\n"]},"metadata":{},"sourceType":"module"}
// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Clinitian Form should render correctly 1`] = `
<ClinitianForm>
  <form
    class="trustform"
  >
    <label
      className="label-subtitle"
      for="label"
    >
      Please enter the details of the NHS Person
    </label>
    <div
      class="form-group"
    >
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="firstnameinput"
        name="email"
        onChange={[Function]}
        placeholder="First Name"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="lastnameinput"
        name="email"
        onChange={[Function]}
        placeholder="Last Name"
        type="email"
      />
      <br />
      <input
        id="STEP2"
        name="step"
        type="radio"
        value="STEP2"
      />
       Step 2 
      <br />
      <input
        id="STEP3"
        name="step"
        type="radio"
        value="STEP3"
      />
       Step 3
      <br />
    </div>
    <div
      class="form-group"
    >
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="emailinput"
        name="email"
        onChange={[Function]}
        placeholder="email"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="passwordinput"
        name="email"
        onChange={[Function]}
        placeholder="password"
        readOnly={true}
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="trustnameinput_postcodeinput"
        name="email"
        onChange={[Function]}
        placeholder="Trust Name"
        readOnly={true}
        type="email"
      />
    </div>
    <br />
    <label
      className="label-subtitle"
      for="label"
      id="passwordlabel"
    >
      Enter password here:
    </label>
    <div>
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="passwordchange1"
        name="email"
        onChange={[Function]}
        placeholder="Enter password"
        type="password"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="passwordchange2"
        name="email"
        onChange={[Function]}
        placeholder="Enter password again"
        type="password"
      />
    </div>
    <WithStyles(RegularButton)
      color="primary"
      id="loginbutton"
      onClick={[Function]}
      type="button"
    >
      <RegularButton
        classes={
          Object {
            "block": "RegularButton-block-15",
            "button": "RegularButton-button-1",
            "danger": "RegularButton-danger-8",
            "disabled": "RegularButton-disabled-11",
            "info": "RegularButton-info-5",
            "justIcon": "RegularButton-justIcon-17",
            "lg": "RegularButton-lg-12",
            "link": "RegularButton-link-16",
            "primary": "RegularButton-primary-4",
            "rose": "RegularButton-rose-3",
            "round": "RegularButton-round-14",
            "simple": "RegularButton-simple-9",
            "sm": "RegularButton-sm-13",
            "success": "RegularButton-success-6",
            "transparent": "RegularButton-transparent-10",
            "warning": "RegularButton-warning-7",
            "white": "RegularButton-white-2",
          }
        }
        color="primary"
        id="loginbutton"
        onClick={[Function]}
        type="button"
      >
        <WithStyles(ForwardRef(Button))
          className="RegularButton-button-1 RegularButton-primary-4"
          id="loginbutton"
          onClick={[Function]}
          type="button"
        >
          <ForwardRef(Button)
            className="RegularButton-button-1 RegularButton-primary-4"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            id="loginbutton"
            onClick={[Function]}
            type="button"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              id="loginbutton"
              onClick={[Function]}
              type="button"
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                id="loginbutton"
                onClick={[Function]}
                type="button"
              >
                <button
                  className="MuiButtonBase-root MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
                  disabled={false}
                  id="loginbutton"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="button"
                >
                  <span
                    className="MuiButton-label"
                  >
                    Save
                  </span>
                  <NoSsr>
                    <WithStyles(TouchRipple)
                      center={false}
                    >
                      <TouchRipple
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            enter={true}
                            exit={true}
                          />
                        </span>
                      </TouchRipple>
                    </WithStyles(TouchRipple)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </RegularButton>
    </WithStyles(RegularButton)>
  </form>
</ClinitianForm>
`;

exports[`Person Form should render correctly 1`] = `
<PersonForm>
  <form
    class="trustform"
  >
    <label
      className="label-subtitle"
      for="label"
    >
      Please enter the details of the NHS Person
    </label>
    <div
      class="form-group"
    >
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="firstnameinput"
        name="email"
        onChange={[Function]}
        placeholder="First Name"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="lastnameinput"
        name="email"
        onChange={[Function]}
        placeholder="Last Name"
        type="email"
      />
    </div>
    <div
      class="form-group"
    >
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="emailinput"
        name="email"
        onChange={[Function]}
        placeholder="email"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="passwordinput"
        name="email"
        onChange={[Function]}
        placeholder="password"
        readOnly={true}
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="trustnameinput_postcodeinput"
        name="email"
        onChange={[Function]}
        placeholder="Trust Name"
        readOnly={true}
        type="email"
      />
    </div>
    <br />
    <label
      className="label-subtitle"
      for="label"
      id="passwordlabel"
    >
      Enter password here:
    </label>
    <div>
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="passwordchange1"
        name="password1"
        onChange={[Function]}
        placeholder="Enter password"
        type="password"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="passwordchange2"
        name="password2"
        onChange={[Function]}
        placeholder="Enter password again"
        type="password"
      />
    </div>
    <WithStyles(RegularButton)
      color="primary"
      id="loginbutton"
      onClick={[Function]}
      type="button"
    >
      <RegularButton
        classes={
          Object {
            "block": "RegularButton-block-15",
            "button": "RegularButton-button-1",
            "danger": "RegularButton-danger-8",
            "disabled": "RegularButton-disabled-11",
            "info": "RegularButton-info-5",
            "justIcon": "RegularButton-justIcon-17",
            "lg": "RegularButton-lg-12",
            "link": "RegularButton-link-16",
            "primary": "RegularButton-primary-4",
            "rose": "RegularButton-rose-3",
            "round": "RegularButton-round-14",
            "simple": "RegularButton-simple-9",
            "sm": "RegularButton-sm-13",
            "success": "RegularButton-success-6",
            "transparent": "RegularButton-transparent-10",
            "warning": "RegularButton-warning-7",
            "white": "RegularButton-white-2",
          }
        }
        color="primary"
        id="loginbutton"
        onClick={[Function]}
        type="button"
      >
        <WithStyles(ForwardRef(Button))
          className="RegularButton-button-1 RegularButton-primary-4"
          id="loginbutton"
          onClick={[Function]}
          type="button"
        >
          <ForwardRef(Button)
            className="RegularButton-button-1 RegularButton-primary-4"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            id="loginbutton"
            onClick={[Function]}
            type="button"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              id="loginbutton"
              onClick={[Function]}
              type="button"
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                id="loginbutton"
                onClick={[Function]}
                type="button"
              >
                <button
                  className="MuiButtonBase-root MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
                  disabled={false}
                  id="loginbutton"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="button"
                >
                  <span
                    className="MuiButton-label"
                  >
                    Save
                  </span>
                  <NoSsr>
                    <WithStyles(TouchRipple)
                      center={false}
                    >
                      <TouchRipple
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            enter={true}
                            exit={true}
                          />
                        </span>
                      </TouchRipple>
                    </WithStyles(TouchRipple)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </RegularButton>
    </WithStyles(RegularButton)>
  </form>
</PersonForm>
`;

exports[`Questionnaire Admin should render correctly 1`] = `
<WithStyles(QuestionnaireAdmin)>
  <QuestionnaireAdmin
    classes={
      Object {
        "cardCategory": "QuestionnaireAdmin-cardCategory-345",
        "cardCategoryWhite": "QuestionnaireAdmin-cardCategoryWhite-346",
        "cardTitle": "QuestionnaireAdmin-cardTitle-347",
        "cardTitleWhite": "QuestionnaireAdmin-cardTitleWhite-348",
        "stats": "QuestionnaireAdmin-stats-344",
        "successText": "QuestionnaireAdmin-successText-342",
        "upArrowCardCategory": "QuestionnaireAdmin-upArrowCardCategory-343",
      }
    }
  >
    <WithStyles(GridItem)
      sm={12}
      xs={12}
    >
      <GridItem
        classes={
          Object {
            "grid": "GridItem-grid-154",
          }
        }
        sm={12}
        xs={12}
      >
        <WithStyles(ForwardRef(Grid))
          className="GridItem-grid-154"
          item={true}
          sm={12}
          xs={12}
        >
          <ForwardRef(Grid)
            className="GridItem-grid-154"
            classes={
              Object {
                "align-content-xs-center": "MuiGrid-align-content-xs-center",
                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                "align-items-xs-center": "MuiGrid-align-items-xs-center",
                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                "container": "MuiGrid-container",
                "direction-xs-column": "MuiGrid-direction-xs-column",
                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                "grid-lg-1": "MuiGrid-grid-lg-1",
                "grid-lg-10": "MuiGrid-grid-lg-10",
                "grid-lg-11": "MuiGrid-grid-lg-11",
                "grid-lg-12": "MuiGrid-grid-lg-12",
                "grid-lg-2": "MuiGrid-grid-lg-2",
                "grid-lg-3": "MuiGrid-grid-lg-3",
                "grid-lg-4": "MuiGrid-grid-lg-4",
                "grid-lg-5": "MuiGrid-grid-lg-5",
                "grid-lg-6": "MuiGrid-grid-lg-6",
                "grid-lg-7": "MuiGrid-grid-lg-7",
                "grid-lg-8": "MuiGrid-grid-lg-8",
                "grid-lg-9": "MuiGrid-grid-lg-9",
                "grid-lg-auto": "MuiGrid-grid-lg-auto",
                "grid-lg-true": "MuiGrid-grid-lg-true",
                "grid-md-1": "MuiGrid-grid-md-1",
                "grid-md-10": "MuiGrid-grid-md-10",
                "grid-md-11": "MuiGrid-grid-md-11",
                "grid-md-12": "MuiGrid-grid-md-12",
                "grid-md-2": "MuiGrid-grid-md-2",
                "grid-md-3": "MuiGrid-grid-md-3",
                "grid-md-4": "MuiGrid-grid-md-4",
                "grid-md-5": "MuiGrid-grid-md-5",
                "grid-md-6": "MuiGrid-grid-md-6",
                "grid-md-7": "MuiGrid-grid-md-7",
                "grid-md-8": "MuiGrid-grid-md-8",
                "grid-md-9": "MuiGrid-grid-md-9",
                "grid-md-auto": "MuiGrid-grid-md-auto",
                "grid-md-true": "MuiGrid-grid-md-true",
                "grid-sm-1": "MuiGrid-grid-sm-1",
                "grid-sm-10": "MuiGrid-grid-sm-10",
                "grid-sm-11": "MuiGrid-grid-sm-11",
                "grid-sm-12": "MuiGrid-grid-sm-12",
                "grid-sm-2": "MuiGrid-grid-sm-2",
                "grid-sm-3": "MuiGrid-grid-sm-3",
                "grid-sm-4": "MuiGrid-grid-sm-4",
                "grid-sm-5": "MuiGrid-grid-sm-5",
                "grid-sm-6": "MuiGrid-grid-sm-6",
                "grid-sm-7": "MuiGrid-grid-sm-7",
                "grid-sm-8": "MuiGrid-grid-sm-8",
                "grid-sm-9": "MuiGrid-grid-sm-9",
                "grid-sm-auto": "MuiGrid-grid-sm-auto",
                "grid-sm-true": "MuiGrid-grid-sm-true",
                "grid-xl-1": "MuiGrid-grid-xl-1",
                "grid-xl-10": "MuiGrid-grid-xl-10",
                "grid-xl-11": "MuiGrid-grid-xl-11",
                "grid-xl-12": "MuiGrid-grid-xl-12",
                "grid-xl-2": "MuiGrid-grid-xl-2",
                "grid-xl-3": "MuiGrid-grid-xl-3",
                "grid-xl-4": "MuiGrid-grid-xl-4",
                "grid-xl-5": "MuiGrid-grid-xl-5",
                "grid-xl-6": "MuiGrid-grid-xl-6",
                "grid-xl-7": "MuiGrid-grid-xl-7",
                "grid-xl-8": "MuiGrid-grid-xl-8",
                "grid-xl-9": "MuiGrid-grid-xl-9",
                "grid-xl-auto": "MuiGrid-grid-xl-auto",
                "grid-xl-true": "MuiGrid-grid-xl-true",
                "grid-xs-1": "MuiGrid-grid-xs-1",
                "grid-xs-10": "MuiGrid-grid-xs-10",
                "grid-xs-11": "MuiGrid-grid-xs-11",
                "grid-xs-12": "MuiGrid-grid-xs-12",
                "grid-xs-2": "MuiGrid-grid-xs-2",
                "grid-xs-3": "MuiGrid-grid-xs-3",
                "grid-xs-4": "MuiGrid-grid-xs-4",
                "grid-xs-5": "MuiGrid-grid-xs-5",
                "grid-xs-6": "MuiGrid-grid-xs-6",
                "grid-xs-7": "MuiGrid-grid-xs-7",
                "grid-xs-8": "MuiGrid-grid-xs-8",
                "grid-xs-9": "MuiGrid-grid-xs-9",
                "grid-xs-auto": "MuiGrid-grid-xs-auto",
                "grid-xs-true": "MuiGrid-grid-xs-true",
                "item": "MuiGrid-item",
                "justify-xs-center": "MuiGrid-justify-xs-center",
                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                "root": "MuiGrid-root",
                "spacing-xs-1": "MuiGrid-spacing-xs-1",
                "spacing-xs-10": "MuiGrid-spacing-xs-10",
                "spacing-xs-2": "MuiGrid-spacing-xs-2",
                "spacing-xs-3": "MuiGrid-spacing-xs-3",
                "spacing-xs-4": "MuiGrid-spacing-xs-4",
                "spacing-xs-5": "MuiGrid-spacing-xs-5",
                "spacing-xs-6": "MuiGrid-spacing-xs-6",
                "spacing-xs-7": "MuiGrid-spacing-xs-7",
                "spacing-xs-8": "MuiGrid-spacing-xs-8",
                "spacing-xs-9": "MuiGrid-spacing-xs-9",
                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                "zeroMinWidth": "MuiGrid-zeroMinWidth",
              }
            }
            item={true}
            sm={12}
            xs={12}
          >
            <div
              className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12"
            >
              <WithStyles(AnswerTabs)
                headerColor="info"
                onCreateNewClicked={[Function]}
                tabs={
                  Array [
                    Object {
                      "tabContent": <ForwardRef(WithStyles)
                        checkedIndexes={Array []}
                        onDeleteClicked={[Function]}
                        onEditClicked={[Function]}
                        tableHead={
                          Array [
                            "Name",
                            "Description",
                            "Status",
                            "Modify",
                          ]
                        }
                        tableHeaderColor="info"
                        tasks={Array []}
                      />,
                      "tabIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "displayName": "GradeIcon",
                        "muiName": "SvgIcon",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "tabName": "PUBLISHED",
                    },
                    Object {
                      "tabContent": <ForwardRef(WithStyles)
                        checkedIndexes={Array []}
                        onDeleteClicked={[Function]}
                        onEditClicked={[Function]}
                        tableHead={
                          Array [
                            "Name",
                            "Description",
                            "Status",
                            "Modify",
                          ]
                        }
                        tableHeaderColor="info"
                        tasks={Array []}
                      />,
                      "tabIcon": Object {
                        "$$typeof": Symbol(react.memo),
                        "compare": null,
                        "displayName": "CodeIcon",
                        "muiName": "SvgIcon",
                        "type": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                      },
                      "tabName": "DRAFT",
                    },
                  ]
                }
                title="Questionnaires :"
              >
                <AnswerTabs
                  classes={
                    Object {
                      "cardTitle": "AnswerTabs-cardTitle-349",
                      "cardTitleRTL": "AnswerTabs-cardTitleRTL-350",
                      "displayNone": "AnswerTabs-displayNone-351",
                      "tabRootButton": "AnswerTabs-tabRootButton-353",
                      "tabSelected": "AnswerTabs-tabSelected-354",
                      "tabWrapper": "AnswerTabs-tabWrapper-355",
                      "tabsRoot": "AnswerTabs-tabsRoot-352",
                    }
                  }
                  headerColor="info"
                  onCreateNewClicked={[Function]}
                  tabs={
                    Array [
                      Object {
                        "tabContent": <ForwardRef(WithStyles)
                          checkedIndexes={Array []}
                          onDeleteClicked={[Function]}
                          onEditClicked={[Function]}
                          tableHead={
                            Array [
                              "Name",
                              "Description",
                              "Status",
                              "Modify",
                            ]
                          }
                          tableHeaderColor="info"
                          tasks={Array []}
                        />,
                        "tabIcon": Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "displayName": "GradeIcon",
                          "muiName": "SvgIcon",
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                        },
                        "tabName": "PUBLISHED",
                      },
                      Object {
                        "tabContent": <ForwardRef(WithStyles)
                          checkedIndexes={Array []}
                          onDeleteClicked={[Function]}
                          onEditClicked={[Function]}
                          tableHead={
                            Array [
                              "Name",
                              "Description",
                              "Status",
                              "Modify",
                            ]
                          }
                          tableHeaderColor="info"
                          tasks={Array []}
                        />,
                        "tabIcon": Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "displayName": "CodeIcon",
                          "muiName": "SvgIcon",
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                        },
                        "tabName": "DRAFT",
                      },
                    ]
                  }
                  title="Questionnaires :"
                >
                  <WithStyles(Card)>
                    <Card
                      classes={
                        Object {
                          "card": "Card-card-155",
                          "cardChart": "Card-cardChart-158",
                          "cardPlain": "Card-cardPlain-156",
                          "cardProfile": "Card-cardProfile-157",
                        }
                      }
                    >
                      <div
                        className="Card-card-155"
                      >
                        <WithStyles(CardHeader)
                          color="info"
                        >
                          <CardHeader
                            classes={
                              Object {
                                "blue": "CardHeader-blue-169",
                                "cardHeader": "CardHeader-cardHeader-159",
                                "cardHeaderIcon": "CardHeader-cardHeaderIcon-162",
                                "cardHeaderPlain": "CardHeader-cardHeaderPlain-160",
                                "cardHeaderStats": "CardHeader-cardHeaderStats-161",
                                "dangerCardHeader": "CardHeader-dangerCardHeader-165",
                                "infoCardHeader": "CardHeader-infoCardHeader-166",
                                "primaryCardHeader": "CardHeader-primaryCardHeader-167",
                                "roseCardHeader": "CardHeader-roseCardHeader-168",
                                "successCardHeader": "CardHeader-successCardHeader-164",
                                "warningCardHeader": "CardHeader-warningCardHeader-163",
                              }
                            }
                            color="info"
                          >
                            <div
                              className="CardHeader-cardHeader-159 CardHeader-infoCardHeader-166"
                            >
                              <div
                                className="AnswerTabs-cardTitle-349"
                              >
                                Questionnaires :
                              </div>
                              <WithStyles(ForwardRef(Tabs))
                                classes={
                                  Object {
                                    "indicator": "AnswerTabs-displayNone-351",
                                    "root": "AnswerTabs-tabsRoot-352",
                                    "scrollButtons": "AnswerTabs-displayNone-351",
                                  }
                                }
                                onChange={[Function]}
                                scrollButtons="auto"
                                value={0}
                                variant="scrollable"
                              >
                                <ForwardRef(Tabs)
                                  classes={
                                    Object {
                                      "centered": "MuiTabs-centered",
                                      "fixed": "MuiTabs-fixed",
                                      "flexContainer": "MuiTabs-flexContainer",
                                      "indicator": "MuiTabs-indicator AnswerTabs-displayNone-351",
                                      "root": "MuiTabs-root AnswerTabs-tabsRoot-352",
                                      "scrollButtons": "MuiTabs-scrollButtons AnswerTabs-displayNone-351",
                                      "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                      "scrollable": "MuiTabs-scrollable",
                                      "scroller": "MuiTabs-scroller",
                                    }
                                  }
                                  onChange={[Function]}
                                  scrollButtons="auto"
                                  theme={
                                    Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "hover": "rgba(0, 0, 0, 0.08)",
                                          "hoverOpacity": 0.08,
                                          "selected": "rgba(0, 0, 0, 0.14)",
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.04,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.17,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.33,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "tooltip": 1500,
                                      },
                                    }
                                  }
                                  value={0}
                                  variant="scrollable"
                                >
                                  <Tabs
                                    ScrollButtonComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "Naked": Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "propTypes": Object {
                                            "className": [Function],
                                            "classes": [Function],
                                            "direction": [Function],
                                            "onClick": [Function],
                                            "visible": [Function],
                                          },
                                          "render": [Function],
                                        },
                                        "displayName": "WithStyles(ForwardRef(TabScrollButton))",
                                        "options": Object {
                                          "defaultTheme": Object {
                                            "breakpoints": Object {
                                              "between": [Function],
                                              "down": [Function],
                                              "keys": Array [
                                                "xs",
                                                "sm",
                                                "md",
                                                "lg",
                                                "xl",
                                              ],
                                              "only": [Function],
                                              "up": [Function],
                                              "values": Object {
                                                "lg": 1280,
                                                "md": 960,
                                                "sm": 600,
                                                "xl": 1920,
                                                "xs": 0,
                                              },
                                              "width": [Function],
                                            },
                                            "direction": "ltr",
                                            "mixins": Object {
                                              "gutters": [Function],
                                              "toolbar": Object {
                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                  "minHeight": 48,
                                                },
                                                "@media (min-width:600px)": Object {
                                                  "minHeight": 64,
                                                },
                                                "minHeight": 56,
                                              },
                                            },
                                            "overrides": Object {},
                                            "palette": Object {
                                              "action": Object {
                                                "active": "rgba(0, 0, 0, 0.54)",
                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                "hover": "rgba(0, 0, 0, 0.08)",
                                                "hoverOpacity": 0.08,
                                                "selected": "rgba(0, 0, 0, 0.14)",
                                              },
                                              "augmentColor": [Function],
                                              "background": Object {
                                                "default": "#fafafa",
                                                "paper": "#fff",
                                              },
                                              "common": Object {
                                                "black": "#000",
                                                "white": "#fff",
                                              },
                                              "contrastThreshold": 3,
                                              "divider": "rgba(0, 0, 0, 0.12)",
                                              "error": Object {
                                                "contrastText": "#fff",
                                                "dark": "#d32f2f",
                                                "light": "#e57373",
                                                "main": "#f44336",
                                              },
                                              "getContrastText": [Function],
                                              "grey": Object {
                                                "100": "#f5f5f5",
                                                "200": "#eeeeee",
                                                "300": "#e0e0e0",
                                                "400": "#bdbdbd",
                                                "50": "#fafafa",
                                                "500": "#9e9e9e",
                                                "600": "#757575",
                                                "700": "#616161",
                                                "800": "#424242",
                                                "900": "#212121",
                                                "A100": "#d5d5d5",
                                                "A200": "#aaaaaa",
                                                "A400": "#303030",
                                                "A700": "#616161",
                                              },
                                              "primary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#303f9f",
                                                "light": "#7986cb",
                                                "main": "#3f51b5",
                                              },
                                              "secondary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#c51162",
                                                "light": "#ff4081",
                                                "main": "#f50057",
                                              },
                                              "text": Object {
                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                              },
                                              "tonalOffset": 0.2,
                                              "type": "light",
                                            },
                                            "props": Object {},
                                            "shadows": Array [
                                              "none",
                                              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                            ],
                                            "shape": Object {
                                              "borderRadius": 4,
                                            },
                                            "spacing": [Function],
                                            "transitions": Object {
                                              "create": [Function],
                                              "duration": Object {
                                                "complex": 375,
                                                "enteringScreen": 225,
                                                "leavingScreen": 195,
                                                "short": 250,
                                                "shorter": 200,
                                                "shortest": 150,
                                                "standard": 300,
                                              },
                                              "easing": Object {
                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                              },
                                              "getAutoHeightDuration": [Function],
                                            },
                                            "typography": Object {
                                              "body1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.5,
                                              },
                                              "body2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.01071em",
                                                "lineHeight": 1.43,
                                              },
                                              "button": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.02857em",
                                                "lineHeight": 1.75,
                                                "textTransform": "uppercase",
                                              },
                                              "caption": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.03333em",
                                                "lineHeight": 1.66,
                                              },
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": 14,
                                              "fontWeightBold": 700,
                                              "fontWeightLight": 300,
                                              "fontWeightMedium": 500,
                                              "fontWeightRegular": 400,
                                              "h1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "6rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.01562em",
                                                "lineHeight": 1,
                                              },
                                              "h2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3.75rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.00833em",
                                                "lineHeight": 1,
                                              },
                                              "h3": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.04,
                                              },
                                              "h4": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.125rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00735em",
                                                "lineHeight": 1.17,
                                              },
                                              "h5": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.5rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.33,
                                              },
                                              "h6": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.25rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.0075em",
                                                "lineHeight": 1.6,
                                              },
                                              "htmlFontSize": 16,
                                              "overline": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.08333em",
                                                "lineHeight": 2.66,
                                                "textTransform": "uppercase",
                                              },
                                              "pxToRem": [Function],
                                              "round": [Function],
                                              "subtitle1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.75,
                                              },
                                              "subtitle2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.00714em",
                                                "lineHeight": 1.57,
                                              },
                                            },
                                            "zIndex": Object {
                                              "appBar": 1100,
                                              "drawer": 1200,
                                              "mobileStepper": 1000,
                                              "modal": 1300,
                                              "snackbar": 1400,
                                              "tooltip": 1500,
                                            },
                                          },
                                          "name": "PrivateTabScrollButton",
                                        },
                                        "propTypes": Object {
                                          "classes": [Function],
                                          "innerRef": [Function],
                                        },
                                        "render": [Function],
                                        "useStyles": [Function],
                                      }
                                    }
                                    centered={false}
                                    classes={
                                      Object {
                                        "centered": "MuiTabs-centered",
                                        "fixed": "MuiTabs-fixed",
                                        "flexContainer": "MuiTabs-flexContainer",
                                        "indicator": "MuiTabs-indicator AnswerTabs-displayNone-351",
                                        "root": "MuiTabs-root AnswerTabs-tabsRoot-352",
                                        "scrollButtons": "MuiTabs-scrollButtons AnswerTabs-displayNone-351",
                                        "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                        "scrollable": "MuiTabs-scrollable",
                                        "scroller": "MuiTabs-scroller",
                                      }
                                    }
                                    component="div"
                                    indicatorColor="secondary"
                                    innerRef={null}
                                    onChange={[Function]}
                                    scrollButtons="auto"
                                    textColor="inherit"
                                    theme={
                                      Object {
                                        "breakpoints": Object {
                                          "between": [Function],
                                          "down": [Function],
                                          "keys": Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ],
                                          "only": [Function],
                                          "up": [Function],
                                          "values": Object {
                                            "lg": 1280,
                                            "md": 960,
                                            "sm": 600,
                                            "xl": 1920,
                                            "xs": 0,
                                          },
                                          "width": [Function],
                                        },
                                        "direction": "ltr",
                                        "mixins": Object {
                                          "gutters": [Function],
                                          "toolbar": Object {
                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                              "minHeight": 48,
                                            },
                                            "@media (min-width:600px)": Object {
                                              "minHeight": 64,
                                            },
                                            "minHeight": 56,
                                          },
                                        },
                                        "overrides": Object {},
                                        "palette": Object {
                                          "action": Object {
                                            "active": "rgba(0, 0, 0, 0.54)",
                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                            "hover": "rgba(0, 0, 0, 0.08)",
                                            "hoverOpacity": 0.08,
                                            "selected": "rgba(0, 0, 0, 0.14)",
                                          },
                                          "augmentColor": [Function],
                                          "background": Object {
                                            "default": "#fafafa",
                                            "paper": "#fff",
                                          },
                                          "common": Object {
                                            "black": "#000",
                                            "white": "#fff",
                                          },
                                          "contrastThreshold": 3,
                                          "divider": "rgba(0, 0, 0, 0.12)",
                                          "error": Object {
                                            "contrastText": "#fff",
                                            "dark": "#d32f2f",
                                            "light": "#e57373",
                                            "main": "#f44336",
                                          },
                                          "getContrastText": [Function],
                                          "grey": Object {
                                            "100": "#f5f5f5",
                                            "200": "#eeeeee",
                                            "300": "#e0e0e0",
                                            "400": "#bdbdbd",
                                            "50": "#fafafa",
                                            "500": "#9e9e9e",
                                            "600": "#757575",
                                            "700": "#616161",
                                            "800": "#424242",
                                            "900": "#212121",
                                            "A100": "#d5d5d5",
                                            "A200": "#aaaaaa",
                                            "A400": "#303030",
                                            "A700": "#616161",
                                          },
                                          "primary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#303f9f",
                                            "light": "#7986cb",
                                            "main": "#3f51b5",
                                          },
                                          "secondary": Object {
                                            "contrastText": "#fff",
                                            "dark": "#c51162",
                                            "light": "#ff4081",
                                            "main": "#f50057",
                                          },
                                          "text": Object {
                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                            "hint": "rgba(0, 0, 0, 0.38)",
                                            "primary": "rgba(0, 0, 0, 0.87)",
                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                          },
                                          "tonalOffset": 0.2,
                                          "type": "light",
                                        },
                                        "props": Object {},
                                        "shadows": Array [
                                          "none",
                                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                        ],
                                        "shape": Object {
                                          "borderRadius": 4,
                                        },
                                        "spacing": [Function],
                                        "transitions": Object {
                                          "create": [Function],
                                          "duration": Object {
                                            "complex": 375,
                                            "enteringScreen": 225,
                                            "leavingScreen": 195,
                                            "short": 250,
                                            "shorter": 200,
                                            "shortest": 150,
                                            "standard": 300,
                                          },
                                          "easing": Object {
                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                          },
                                          "getAutoHeightDuration": [Function],
                                        },
                                        "typography": Object {
                                          "body1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.5,
                                          },
                                          "body2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.01071em",
                                            "lineHeight": 1.43,
                                          },
                                          "button": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.02857em",
                                            "lineHeight": 1.75,
                                            "textTransform": "uppercase",
                                          },
                                          "caption": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.03333em",
                                            "lineHeight": 1.66,
                                          },
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": 14,
                                          "fontWeightBold": 700,
                                          "fontWeightLight": 300,
                                          "fontWeightMedium": 500,
                                          "fontWeightRegular": 400,
                                          "h1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "6rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.01562em",
                                            "lineHeight": 1,
                                          },
                                          "h2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3.75rem",
                                            "fontWeight": 300,
                                            "letterSpacing": "-0.00833em",
                                            "lineHeight": 1,
                                          },
                                          "h3": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "3rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.04,
                                          },
                                          "h4": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "2.125rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00735em",
                                            "lineHeight": 1.17,
                                          },
                                          "h5": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.5rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0em",
                                            "lineHeight": 1.33,
                                          },
                                          "h6": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1.25rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.0075em",
                                            "lineHeight": 1.6,
                                          },
                                          "htmlFontSize": 16,
                                          "overline": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.75rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.08333em",
                                            "lineHeight": 2.66,
                                            "textTransform": "uppercase",
                                          },
                                          "pxToRem": [Function],
                                          "round": [Function],
                                          "subtitle1": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "1rem",
                                            "fontWeight": 400,
                                            "letterSpacing": "0.00938em",
                                            "lineHeight": 1.75,
                                          },
                                          "subtitle2": Object {
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": "0.875rem",
                                            "fontWeight": 500,
                                            "letterSpacing": "0.00714em",
                                            "lineHeight": 1.57,
                                          },
                                        },
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "drawer": 1200,
                                          "mobileStepper": 1000,
                                          "modal": 1300,
                                          "snackbar": 1400,
                                          "tooltip": 1500,
                                        },
                                      }
                                    }
                                    value={0}
                                    variant="scrollable"
                                  >
                                    <div
                                      className="MuiTabs-root AnswerTabs-tabsRoot-352"
                                    >
                                      <EventListener
                                        onResize={[Function]}
                                        target="window"
                                      />
                                      <div
                                        className="MuiTabs-flexContainer"
                                      >
                                        <ScrollbarSize
                                          className="MuiTabs-scrollable"
                                          onChange={[Function]}
                                        >
                                          <div
                                            className="MuiTabs-scrollable"
                                            style={
                                              Object {
                                                "height": 99,
                                                "overflow": "scroll",
                                                "position": "absolute",
                                                "top": -9999,
                                                "width": 99,
                                              }
                                            }
                                          />
                                        </ScrollbarSize>
                                        <div
                                          className="MuiTabs-scroller MuiTabs-scrollable"
                                          onScroll={[Function]}
                                          role="tablist"
                                          style={
                                            Object {
                                              "marginBottom": -0,
                                              "overflow": null,
                                            }
                                          }
                                        >
                                          <div
                                            className="MuiTabs-flexContainer"
                                          >
                                            <WithStyles(ForwardRef(Tab))
                                              classes={
                                                Object {
                                                  "root": "AnswerTabs-tabRootButton-353",
                                                  "selected": "AnswerTabs-tabSelected-354",
                                                  "wrapper": "AnswerTabs-tabWrapper-355",
                                                }
                                              }
                                              fullWidth={false}
                                              icon={<Memo />}
                                              indicator={false}
                                              key=".0:$0"
                                              label="PUBLISHED"
                                              onChange={[Function]}
                                              selected={true}
                                              textColor="inherit"
                                              value={0}
                                            >
                                              <ForwardRef(Tab)
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "fullWidth": "MuiTab-fullWidth",
                                                    "labelIcon": "MuiTab-labelIcon",
                                                    "root": "MuiTab-root AnswerTabs-tabRootButton-353",
                                                    "selected": "Mui-selected AnswerTabs-tabSelected-354",
                                                    "textColorInherit": "MuiTab-textColorInherit",
                                                    "textColorPrimary": "MuiTab-textColorPrimary",
                                                    "textColorSecondary": "MuiTab-textColorSecondary",
                                                    "wrapped": "MuiTab-wrapped",
                                                    "wrapper": "MuiTab-wrapper AnswerTabs-tabWrapper-355",
                                                  }
                                                }
                                                fullWidth={false}
                                                icon={<Memo />}
                                                indicator={false}
                                                label="PUBLISHED"
                                                onChange={[Function]}
                                                selected={true}
                                                textColor="inherit"
                                                value={0}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-selected={true}
                                                  className="MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit Mui-selected AnswerTabs-tabSelected-354 MuiTab-labelIcon"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  role="tab"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-selected={true}
                                                    className="MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit Mui-selected AnswerTabs-tabSelected-354 MuiTab-labelIcon"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    role="tab"
                                                  >
                                                    <button
                                                      aria-selected={true}
                                                      className="MuiButtonBase-root MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit Mui-selected AnswerTabs-tabSelected-354 MuiTab-labelIcon"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="tab"
                                                      tabIndex={0}
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiTab-wrapper AnswerTabs-tabWrapper-355"
                                                      >
                                                        <ForwardRef>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                role="presentation"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                                                />
                                                                <path
                                                                  d="M0 0h24v24H0z"
                                                                  fill="none"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef>
                                                        PUBLISHED
                                                      </span>
                                                      <NoSsr>
                                                        <WithStyles(TouchRipple)
                                                          center={false}
                                                        >
                                                          <TouchRipple
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                enter={true}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(Tab)>
                                            </WithStyles(ForwardRef(Tab))>
                                            <WithStyles(ForwardRef(Tab))
                                              classes={
                                                Object {
                                                  "root": "AnswerTabs-tabRootButton-353",
                                                  "selected": "AnswerTabs-tabSelected-354",
                                                  "wrapper": "AnswerTabs-tabWrapper-355",
                                                }
                                              }
                                              fullWidth={false}
                                              icon={<Memo />}
                                              indicator={false}
                                              key=".0:$1"
                                              label="DRAFT"
                                              onChange={[Function]}
                                              selected={false}
                                              textColor="inherit"
                                              value={1}
                                            >
                                              <ForwardRef(Tab)
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "fullWidth": "MuiTab-fullWidth",
                                                    "labelIcon": "MuiTab-labelIcon",
                                                    "root": "MuiTab-root AnswerTabs-tabRootButton-353",
                                                    "selected": "Mui-selected AnswerTabs-tabSelected-354",
                                                    "textColorInherit": "MuiTab-textColorInherit",
                                                    "textColorPrimary": "MuiTab-textColorPrimary",
                                                    "textColorSecondary": "MuiTab-textColorSecondary",
                                                    "wrapped": "MuiTab-wrapped",
                                                    "wrapper": "MuiTab-wrapper AnswerTabs-tabWrapper-355",
                                                  }
                                                }
                                                fullWidth={false}
                                                icon={<Memo />}
                                                indicator={false}
                                                label="DRAFT"
                                                onChange={[Function]}
                                                selected={false}
                                                textColor="inherit"
                                                value={1}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-selected={false}
                                                  className="MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit MuiTab-labelIcon"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  role="tab"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-selected={false}
                                                    className="MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit MuiTab-labelIcon"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    role="tab"
                                                  >
                                                    <button
                                                      aria-selected={false}
                                                      className="MuiButtonBase-root MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit MuiTab-labelIcon"
                                                      disabled={false}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="tab"
                                                      tabIndex={0}
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiTab-wrapper AnswerTabs-tabWrapper-355"
                                                      >
                                                        <ForwardRef>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                role="presentation"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M0 0h24v24H0V0z"
                                                                  fill="none"
                                                                />
                                                                <path
                                                                  d="M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef>
                                                        DRAFT
                                                      </span>
                                                      <NoSsr>
                                                        <WithStyles(TouchRipple)
                                                          center={false}
                                                        >
                                                          <TouchRipple
                                                            center={false}
                                                            classes={
                                                              Object {
                                                                "child": "MuiTouchRipple-child",
                                                                "childLeaving": "MuiTouchRipple-childLeaving",
                                                                "childPulsate": "MuiTouchRipple-childPulsate",
                                                                "ripple": "MuiTouchRipple-ripple",
                                                                "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                "root": "MuiTouchRipple-root",
                                                              }
                                                            }
                                                          >
                                                            <span
                                                              className="MuiTouchRipple-root"
                                                            >
                                                              <TransitionGroup
                                                                childFactory={[Function]}
                                                                component={null}
                                                                enter={true}
                                                                exit={true}
                                                              />
                                                            </span>
                                                          </TouchRipple>
                                                        </WithStyles(TouchRipple)>
                                                      </NoSsr>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(Tab)>
                                            </WithStyles(ForwardRef(Tab))>
                                            <WithStyles(RegularButton)
                                              color="info"
                                              fullWidth={false}
                                              indicator={false}
                                              key=".1"
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              round={true}
                                              selected={false}
                                              textColor="inherit"
                                              value={2}
                                            >
                                              <RegularButton
                                                classes={
                                                  Object {
                                                    "block": "RegularButton-block-15",
                                                    "button": "RegularButton-button-1",
                                                    "danger": "RegularButton-danger-8",
                                                    "disabled": "RegularButton-disabled-11",
                                                    "info": "RegularButton-info-5",
                                                    "justIcon": "RegularButton-justIcon-17",
                                                    "lg": "RegularButton-lg-12",
                                                    "link": "RegularButton-link-16",
                                                    "primary": "RegularButton-primary-4",
                                                    "rose": "RegularButton-rose-3",
                                                    "round": "RegularButton-round-14",
                                                    "simple": "RegularButton-simple-9",
                                                    "sm": "RegularButton-sm-13",
                                                    "success": "RegularButton-success-6",
                                                    "transparent": "RegularButton-transparent-10",
                                                    "warning": "RegularButton-warning-7",
                                                    "white": "RegularButton-white-2",
                                                  }
                                                }
                                                color="info"
                                                fullWidth={false}
                                                indicator={false}
                                                onChange={[Function]}
                                                onClick={[Function]}
                                                round={true}
                                                selected={false}
                                                textColor="inherit"
                                                value={2}
                                              >
                                                <WithStyles(ForwardRef(Button))
                                                  className="RegularButton-button-1 RegularButton-info-5 RegularButton-round-14"
                                                  fullWidth={false}
                                                  indicator={false}
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  selected={false}
                                                  textColor="inherit"
                                                  value={2}
                                                >
                                                  <ForwardRef(Button)
                                                    className="RegularButton-button-1 RegularButton-info-5 RegularButton-round-14"
                                                    classes={
                                                      Object {
                                                        "colorInherit": "MuiButton-colorInherit",
                                                        "contained": "MuiButton-contained",
                                                        "containedPrimary": "MuiButton-containedPrimary",
                                                        "containedSecondary": "MuiButton-containedSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "fullWidth": "MuiButton-fullWidth",
                                                        "label": "MuiButton-label",
                                                        "outlined": "MuiButton-outlined",
                                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                        "root": "MuiButton-root",
                                                        "sizeLarge": "MuiButton-sizeLarge",
                                                        "sizeSmall": "MuiButton-sizeSmall",
                                                        "text": "MuiButton-text",
                                                        "textPrimary": "MuiButton-textPrimary",
                                                        "textSecondary": "MuiButton-textSecondary",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    indicator={false}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    selected={false}
                                                    textColor="inherit"
                                                    value={2}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      className="MuiButton-root RegularButton-button-1 RegularButton-info-5 RegularButton-round-14 MuiButton-text"
                                                      component="button"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      focusVisibleClassName="Mui-focusVisible"
                                                      indicator={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      selected={false}
                                                      textColor="inherit"
                                                      type="button"
                                                      value={2}
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        className="MuiButton-root RegularButton-button-1 RegularButton-info-5 RegularButton-round-14 MuiButton-text"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        component="button"
                                                        disabled={false}
                                                        focusRipple={true}
                                                        focusVisibleClassName="Mui-focusVisible"
                                                        indicator={false}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        selected={false}
                                                        textColor="inherit"
                                                        type="button"
                                                        value={2}
                                                      >
                                                        <button
                                                          className="MuiButtonBase-root MuiButton-root RegularButton-button-1 RegularButton-info-5 RegularButton-round-14 MuiButton-text"
                                                          disabled={false}
                                                          indicator={false}
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          selected={false}
                                                          tabIndex={0}
                                                          textColor="inherit"
                                                          type="button"
                                                          value={2}
                                                        >
                                                          <span
                                                            className="MuiButton-label"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    role="presentation"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M0 0h24v24H0z"
                                                                      fill="none"
                                                                    />
                                                                    <path
                                                                      d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                             Create
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(TouchRipple)
                                                              center={false}
                                                            >
                                                              <TouchRipple
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    enter={true}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Button)>
                                                </WithStyles(ForwardRef(Button))>
                                              </RegularButton>
                                            </WithStyles(RegularButton)>
                                          </div>
                                          <WithStyles(ForwardRef(TabIndicator))
                                            className="MuiTabs-indicator AnswerTabs-displayNone-351"
                                            color="secondary"
                                            style={
                                              Object {
                                                "left": 0,
                                                "width": 0,
                                              }
                                            }
                                          >
                                            <ForwardRef(TabIndicator)
                                              className="MuiTabs-indicator AnswerTabs-displayNone-351"
                                              classes={
                                                Object {
                                                  "colorPrimary": "PrivateTabIndicator-colorPrimary-307",
                                                  "colorSecondary": "PrivateTabIndicator-colorSecondary-308",
                                                  "root": "PrivateTabIndicator-root-306",
                                                }
                                              }
                                              color="secondary"
                                              style={
                                                Object {
                                                  "left": 0,
                                                  "width": 0,
                                                }
                                              }
                                            >
                                              <span
                                                className="PrivateTabIndicator-root-306 PrivateTabIndicator-colorSecondary-308 MuiTabs-indicator AnswerTabs-displayNone-351"
                                                style={
                                                  Object {
                                                    "left": 0,
                                                    "width": 0,
                                                  }
                                                }
                                              />
                                            </ForwardRef(TabIndicator)>
                                          </WithStyles(ForwardRef(TabIndicator))>
                                        </div>
                                      </div>
                                    </div>
                                  </Tabs>
                                </ForwardRef(Tabs)>
                              </WithStyles(ForwardRef(Tabs))>
                            </div>
                          </CardHeader>
                        </WithStyles(CardHeader)>
                        <WithStyles(CardBody)>
                          <CardBody
                            classes={
                              Object {
                                "cardBody": "CardBody-cardBody-170",
                                "cardBodyPlain": "CardBody-cardBodyPlain-171",
                                "cardBodyProfile": "CardBody-cardBodyProfile-172",
                              }
                            }
                          >
                            <div
                              className="CardBody-cardBody-170"
                            >
                              <div
                                key="0"
                              >
                                <WithStyles(Tasks)
                                  checkedIndexes={Array []}
                                  onDeleteClicked={[Function]}
                                  onEditClicked={[Function]}
                                  tableHead={
                                    Array [
                                      "Name",
                                      "Description",
                                      "Status",
                                      "Modify",
                                    ]
                                  }
                                  tableHeaderColor="info"
                                  tasks={Array []}
                                >
                                  <Tasks
                                    checkedIndexes={Array []}
                                    classes={
                                      Object {
                                        "checked": "Tasks-checked-359",
                                        "checkedIcon": "Tasks-checkedIcon-360",
                                        "close": "Tasks-close-381",
                                        "dangerTableHeader": "Tasks-dangerTableHeader-367",
                                        "edit": "Tasks-edit-380",
                                        "grayTableHeader": "Tasks-grayTableHeader-371",
                                        "infoTableHeader": "Tasks-infoTableHeader-369",
                                        "labelRoot": "Tasks-labelRoot-358",
                                        "primaryTableHeader": "Tasks-primaryTableHeader-366",
                                        "radio": "Tasks-radio-362",
                                        "radioChecked": "Tasks-radioChecked-363",
                                        "radioUnchecked": "Tasks-radioUnchecked-364",
                                        "root": "Tasks-root-357",
                                        "roseTableHeader": "Tasks-roseTableHeader-370",
                                        "successTableHeader": "Tasks-successTableHeader-368",
                                        "table": "Tasks-table-372",
                                        "tableActionButton": "Tasks-tableActionButton-378",
                                        "tableActionButtonIcon": "Tasks-tableActionButtonIcon-379",
                                        "tableActions": "Tasks-tableActions-375",
                                        "tableCell": "Tasks-tableCell-376",
                                        "tableCellRTL": "Tasks-tableCellRTL-377",
                                        "tableHeadCell": "Tasks-tableHeadCell-373",
                                        "tableRow": "Tasks-tableRow-374",
                                        "tooltip": "Tasks-tooltip-356",
                                        "uncheckedIcon": "Tasks-uncheckedIcon-361",
                                        "warningTableHeader": "Tasks-warningTableHeader-365",
                                      }
                                    }
                                    onDeleteClicked={[Function]}
                                    onEditClicked={[Function]}
                                    tableHead={
                                      Array [
                                        "Name",
                                        "Description",
                                        "Status",
                                        "Modify",
                                      ]
                                    }
                                    tableHeaderColor="info"
                                    tasks={Array []}
                                  >
                                    <WithStyles(ForwardRef(Table))
                                      className="Tasks-table-372"
                                    >
                                      <ForwardRef(Table)
                                        className="Tasks-table-372"
                                        classes={
                                          Object {
                                            "root": "MuiTable-root",
                                          }
                                        }
                                      >
                                        <table
                                          className="MuiTable-root Tasks-table-372"
                                        >
                                          <WithStyles(ForwardRef(TableHead))
                                            className="Tasks-infoTableHeader-369"
                                          >
                                            <ForwardRef(TableHead)
                                              className="Tasks-infoTableHeader-369"
                                              classes={
                                                Object {
                                                  "root": "MuiTableHead-root",
                                                }
                                              }
                                            >
                                              <thead
                                                className="MuiTableHead-root Tasks-infoTableHeader-369"
                                              >
                                                <WithStyles(ForwardRef(TableRow))>
                                                  <ForwardRef(TableRow)
                                                    classes={
                                                      Object {
                                                        "footer": "MuiTableRow-footer",
                                                        "head": "MuiTableRow-head",
                                                        "hover": "MuiTableRow-hover",
                                                        "root": "MuiTableRow-root",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                  >
                                                    <tr
                                                      className="MuiTableRow-root MuiTableRow-head"
                                                    >
                                                      <WithStyles(ForwardRef(TableCell))
                                                        className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                        key="0"
                                                      >
                                                        <ForwardRef(TableCell)
                                                          className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                            }
                                                          }
                                                        >
                                                          <th
                                                            aria-sort={null}
                                                            className="MuiTableCell-root Tasks-tableCell-376 Tasks-tableHeadCell-373 MuiTableCell-head"
                                                            scope="col"
                                                          >
                                                            Name
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                      <WithStyles(ForwardRef(TableCell))
                                                        className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                        key="1"
                                                      >
                                                        <ForwardRef(TableCell)
                                                          className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                            }
                                                          }
                                                        >
                                                          <th
                                                            aria-sort={null}
                                                            className="MuiTableCell-root Tasks-tableCell-376 Tasks-tableHeadCell-373 MuiTableCell-head"
                                                            scope="col"
                                                          >
                                                            Description
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                      <WithStyles(ForwardRef(TableCell))
                                                        className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                        key="2"
                                                      >
                                                        <ForwardRef(TableCell)
                                                          className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                            }
                                                          }
                                                        >
                                                          <th
                                                            aria-sort={null}
                                                            className="MuiTableCell-root Tasks-tableCell-376 Tasks-tableHeadCell-373 MuiTableCell-head"
                                                            scope="col"
                                                          >
                                                            Status
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                      <WithStyles(ForwardRef(TableCell))
                                                        className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                        key="3"
                                                      >
                                                        <ForwardRef(TableCell)
                                                          className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                            }
                                                          }
                                                        >
                                                          <th
                                                            aria-sort={null}
                                                            className="MuiTableCell-root Tasks-tableCell-376 Tasks-tableHeadCell-373 MuiTableCell-head"
                                                            scope="col"
                                                          >
                                                            Modify
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                    </tr>
                                                  </ForwardRef(TableRow)>
                                                </WithStyles(ForwardRef(TableRow))>
                                              </thead>
                                            </ForwardRef(TableHead)>
                                          </WithStyles(ForwardRef(TableHead))>
                                          <WithStyles(ForwardRef(TableBody))>
                                            <ForwardRef(TableBody)
                                              classes={
                                                Object {
                                                  "root": "MuiTableBody-root",
                                                }
                                              }
                                            >
                                              <tbody
                                                className="MuiTableBody-root"
                                              />
                                            </ForwardRef(TableBody)>
                                          </WithStyles(ForwardRef(TableBody))>
                                        </table>
                                      </ForwardRef(Table)>
                                    </WithStyles(ForwardRef(Table))>
                                  </Tasks>
                                </WithStyles(Tasks)>
                              </div>
                            </div>
                          </CardBody>
                        </WithStyles(CardBody)>
                      </div>
                    </Card>
                  </WithStyles(Card)>
                </AnswerTabs>
              </WithStyles(AnswerTabs)>
            </div>
          </ForwardRef(Grid)>
        </WithStyles(ForwardRef(Grid))>
      </GridItem>
    </WithStyles(GridItem)>
  </QuestionnaireAdmin>
</WithStyles(QuestionnaireAdmin)>
`;

exports[`Questionnaire Result should render correctly 1`] = `
<QuestionnaireResult
  id="null"
>
  <div>
    <div
      className="SurveyResult"
    >
      <div
        className="surveyjs"
      >
        <Survey
          model={
            Object {
              "mode": "display",
              "showProgressBar": "",
            }
          }
        >
          <div
            className="sv_main sv_bootstrap_css"
          >
            <form
              onSubmit={[Function]}
            >
              <div
                className="sv_custom_header"
              />
              <div
                className="sv_container"
              >
                <div
                  className="panel-body card-block mt-4"
                  id=""
                >
                  <span>
                    There is no visible page or question in the survey.
                  </span>
                </div>
              </div>
            </form>
          </div>
        </Survey>
      </div>
    </div>
  </div>
</QuestionnaireResult>
`;

exports[`Side Question Admin should render correctly 1`] = `
<WithStyles(SideQuestionAdmin)>
  <SideQuestionAdmin
    classes={
      Object {
        "cardCategory": "SideQuestionAdmin-cardCategory-338",
        "cardCategoryWhite": "SideQuestionAdmin-cardCategoryWhite-339",
        "cardTitle": "SideQuestionAdmin-cardTitle-340",
        "cardTitleWhite": "SideQuestionAdmin-cardTitleWhite-341",
        "stats": "SideQuestionAdmin-stats-337",
        "successText": "SideQuestionAdmin-successText-335",
        "upArrowCardCategory": "SideQuestionAdmin-upArrowCardCategory-336",
      }
    }
  >
    <WithStyles(QuestionnaireAdmin)
      value={12}
    >
      <QuestionnaireAdmin
        classes={
          Object {
            "cardCategory": "QuestionnaireAdmin-cardCategory-345",
            "cardCategoryWhite": "QuestionnaireAdmin-cardCategoryWhite-346",
            "cardTitle": "QuestionnaireAdmin-cardTitle-347",
            "cardTitleWhite": "QuestionnaireAdmin-cardTitleWhite-348",
            "stats": "QuestionnaireAdmin-stats-344",
            "successText": "QuestionnaireAdmin-successText-342",
            "upArrowCardCategory": "QuestionnaireAdmin-upArrowCardCategory-343",
          }
        }
        value={12}
      >
        <WithStyles(GridItem)
          md={12}
          sm={12}
          xs={12}
        >
          <GridItem
            classes={
              Object {
                "grid": "GridItem-grid-154",
              }
            }
            md={12}
            sm={12}
            xs={12}
          >
            <WithStyles(ForwardRef(Grid))
              className="GridItem-grid-154"
              item={true}
              md={12}
              sm={12}
              xs={12}
            >
              <ForwardRef(Grid)
                className="GridItem-grid-154"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-xs-center": "MuiGrid-justify-xs-center",
                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={12}
                sm={12}
                xs={12}
              >
                <div
                  className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12"
                >
                  <WithStyles(AnswerTabs)
                    headerColor="info"
                    onCreateNewClicked={[Function]}
                    tabs={
                      Array [
                        Object {
                          "tabContent": <ForwardRef(WithStyles)
                            checkedIndexes={Array []}
                            onDeleteClicked={[Function]}
                            onEditClicked={[Function]}
                            tableHead={
                              Array [
                                "Name",
                                "Description",
                                "Status",
                                "Modify",
                              ]
                            }
                            tableHeaderColor="info"
                            tasks={Array []}
                          />,
                          "tabIcon": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "displayName": "GradeIcon",
                            "muiName": "SvgIcon",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "tabName": "PUBLISHED",
                        },
                        Object {
                          "tabContent": <ForwardRef(WithStyles)
                            checkedIndexes={Array []}
                            onDeleteClicked={[Function]}
                            onEditClicked={[Function]}
                            tableHead={
                              Array [
                                "Name",
                                "Description",
                                "Status",
                                "Modify",
                              ]
                            }
                            tableHeaderColor="info"
                            tasks={Array []}
                          />,
                          "tabIcon": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "displayName": "CodeIcon",
                            "muiName": "SvgIcon",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "tabName": "DRAFT",
                        },
                      ]
                    }
                    title="Questionnaires :"
                  >
                    <AnswerTabs
                      classes={
                        Object {
                          "cardTitle": "AnswerTabs-cardTitle-349",
                          "cardTitleRTL": "AnswerTabs-cardTitleRTL-350",
                          "displayNone": "AnswerTabs-displayNone-351",
                          "tabRootButton": "AnswerTabs-tabRootButton-353",
                          "tabSelected": "AnswerTabs-tabSelected-354",
                          "tabWrapper": "AnswerTabs-tabWrapper-355",
                          "tabsRoot": "AnswerTabs-tabsRoot-352",
                        }
                      }
                      headerColor="info"
                      onCreateNewClicked={[Function]}
                      tabs={
                        Array [
                          Object {
                            "tabContent": <ForwardRef(WithStyles)
                              checkedIndexes={Array []}
                              onDeleteClicked={[Function]}
                              onEditClicked={[Function]}
                              tableHead={
                                Array [
                                  "Name",
                                  "Description",
                                  "Status",
                                  "Modify",
                                ]
                              }
                              tableHeaderColor="info"
                              tasks={Array []}
                            />,
                            "tabIcon": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "displayName": "GradeIcon",
                              "muiName": "SvgIcon",
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "tabName": "PUBLISHED",
                          },
                          Object {
                            "tabContent": <ForwardRef(WithStyles)
                              checkedIndexes={Array []}
                              onDeleteClicked={[Function]}
                              onEditClicked={[Function]}
                              tableHead={
                                Array [
                                  "Name",
                                  "Description",
                                  "Status",
                                  "Modify",
                                ]
                              }
                              tableHeaderColor="info"
                              tasks={Array []}
                            />,
                            "tabIcon": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "displayName": "CodeIcon",
                              "muiName": "SvgIcon",
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "tabName": "DRAFT",
                          },
                        ]
                      }
                      title="Questionnaires :"
                    >
                      <WithStyles(Card)>
                        <Card
                          classes={
                            Object {
                              "card": "Card-card-155",
                              "cardChart": "Card-cardChart-158",
                              "cardPlain": "Card-cardPlain-156",
                              "cardProfile": "Card-cardProfile-157",
                            }
                          }
                        >
                          <div
                            className="Card-card-155"
                          >
                            <WithStyles(CardHeader)
                              color="info"
                            >
                              <CardHeader
                                classes={
                                  Object {
                                    "blue": "CardHeader-blue-169",
                                    "cardHeader": "CardHeader-cardHeader-159",
                                    "cardHeaderIcon": "CardHeader-cardHeaderIcon-162",
                                    "cardHeaderPlain": "CardHeader-cardHeaderPlain-160",
                                    "cardHeaderStats": "CardHeader-cardHeaderStats-161",
                                    "dangerCardHeader": "CardHeader-dangerCardHeader-165",
                                    "infoCardHeader": "CardHeader-infoCardHeader-166",
                                    "primaryCardHeader": "CardHeader-primaryCardHeader-167",
                                    "roseCardHeader": "CardHeader-roseCardHeader-168",
                                    "successCardHeader": "CardHeader-successCardHeader-164",
                                    "warningCardHeader": "CardHeader-warningCardHeader-163",
                                  }
                                }
                                color="info"
                              >
                                <div
                                  className="CardHeader-cardHeader-159 CardHeader-infoCardHeader-166"
                                >
                                  <div
                                    className="AnswerTabs-cardTitle-349"
                                  >
                                    Questionnaires :
                                  </div>
                                  <WithStyles(ForwardRef(Tabs))
                                    classes={
                                      Object {
                                        "indicator": "AnswerTabs-displayNone-351",
                                        "root": "AnswerTabs-tabsRoot-352",
                                        "scrollButtons": "AnswerTabs-displayNone-351",
                                      }
                                    }
                                    onChange={[Function]}
                                    scrollButtons="auto"
                                    value={0}
                                    variant="scrollable"
                                  >
                                    <ForwardRef(Tabs)
                                      classes={
                                        Object {
                                          "centered": "MuiTabs-centered",
                                          "fixed": "MuiTabs-fixed",
                                          "flexContainer": "MuiTabs-flexContainer",
                                          "indicator": "MuiTabs-indicator AnswerTabs-displayNone-351",
                                          "root": "MuiTabs-root AnswerTabs-tabsRoot-352",
                                          "scrollButtons": "MuiTabs-scrollButtons AnswerTabs-displayNone-351",
                                          "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                          "scrollable": "MuiTabs-scrollable",
                                          "scroller": "MuiTabs-scroller",
                                        }
                                      }
                                      onChange={[Function]}
                                      scrollButtons="auto"
                                      theme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.04,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.17,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.33,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      value={0}
                                      variant="scrollable"
                                    >
                                      <Tabs
                                        ScrollButtonComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Naked": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "className": [Function],
                                                "classes": [Function],
                                                "direction": [Function],
                                                "onClick": [Function],
                                                "visible": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "displayName": "WithStyles(ForwardRef(TabScrollButton))",
                                            "options": Object {
                                              "defaultTheme": Object {
                                                "breakpoints": Object {
                                                  "between": [Function],
                                                  "down": [Function],
                                                  "keys": Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ],
                                                  "only": [Function],
                                                  "up": [Function],
                                                  "values": Object {
                                                    "lg": 1280,
                                                    "md": 960,
                                                    "sm": 600,
                                                    "xl": 1920,
                                                    "xs": 0,
                                                  },
                                                  "width": [Function],
                                                },
                                                "direction": "ltr",
                                                "mixins": Object {
                                                  "gutters": [Function],
                                                  "toolbar": Object {
                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                      "minHeight": 48,
                                                    },
                                                    "@media (min-width:600px)": Object {
                                                      "minHeight": 64,
                                                    },
                                                    "minHeight": 56,
                                                  },
                                                },
                                                "overrides": Object {},
                                                "palette": Object {
                                                  "action": Object {
                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                    "hover": "rgba(0, 0, 0, 0.08)",
                                                    "hoverOpacity": 0.08,
                                                    "selected": "rgba(0, 0, 0, 0.14)",
                                                  },
                                                  "augmentColor": [Function],
                                                  "background": Object {
                                                    "default": "#fafafa",
                                                    "paper": "#fff",
                                                  },
                                                  "common": Object {
                                                    "black": "#000",
                                                    "white": "#fff",
                                                  },
                                                  "contrastThreshold": 3,
                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                  "error": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#d32f2f",
                                                    "light": "#e57373",
                                                    "main": "#f44336",
                                                  },
                                                  "getContrastText": [Function],
                                                  "grey": Object {
                                                    "100": "#f5f5f5",
                                                    "200": "#eeeeee",
                                                    "300": "#e0e0e0",
                                                    "400": "#bdbdbd",
                                                    "50": "#fafafa",
                                                    "500": "#9e9e9e",
                                                    "600": "#757575",
                                                    "700": "#616161",
                                                    "800": "#424242",
                                                    "900": "#212121",
                                                    "A100": "#d5d5d5",
                                                    "A200": "#aaaaaa",
                                                    "A400": "#303030",
                                                    "A700": "#616161",
                                                  },
                                                  "primary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#303f9f",
                                                    "light": "#7986cb",
                                                    "main": "#3f51b5",
                                                  },
                                                  "secondary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#c51162",
                                                    "light": "#ff4081",
                                                    "main": "#f50057",
                                                  },
                                                  "text": Object {
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "hint": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                                  },
                                                  "tonalOffset": 0.2,
                                                  "type": "light",
                                                },
                                                "props": Object {},
                                                "shadows": Array [
                                                  "none",
                                                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                ],
                                                "shape": Object {
                                                  "borderRadius": 4,
                                                },
                                                "spacing": [Function],
                                                "transitions": Object {
                                                  "create": [Function],
                                                  "duration": Object {
                                                    "complex": 375,
                                                    "enteringScreen": 225,
                                                    "leavingScreen": 195,
                                                    "short": 250,
                                                    "shorter": 200,
                                                    "shortest": 150,
                                                    "standard": 300,
                                                  },
                                                  "easing": Object {
                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                  },
                                                  "getAutoHeightDuration": [Function],
                                                },
                                                "typography": Object {
                                                  "body1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.5,
                                                  },
                                                  "body2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.01071em",
                                                    "lineHeight": 1.43,
                                                  },
                                                  "button": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.02857em",
                                                    "lineHeight": 1.75,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "caption": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.03333em",
                                                    "lineHeight": 1.66,
                                                  },
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": 14,
                                                  "fontWeightBold": 700,
                                                  "fontWeightLight": 300,
                                                  "fontWeightMedium": 500,
                                                  "fontWeightRegular": 400,
                                                  "h1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "6rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.01562em",
                                                    "lineHeight": 1,
                                                  },
                                                  "h2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3.75rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.00833em",
                                                    "lineHeight": 1,
                                                  },
                                                  "h3": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.04,
                                                  },
                                                  "h4": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "2.125rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00735em",
                                                    "lineHeight": 1.17,
                                                  },
                                                  "h5": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.5rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.33,
                                                  },
                                                  "h6": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.25rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.0075em",
                                                    "lineHeight": 1.6,
                                                  },
                                                  "htmlFontSize": 16,
                                                  "overline": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.08333em",
                                                    "lineHeight": 2.66,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "pxToRem": [Function],
                                                  "round": [Function],
                                                  "subtitle1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.75,
                                                  },
                                                  "subtitle2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.00714em",
                                                    "lineHeight": 1.57,
                                                  },
                                                },
                                                "zIndex": Object {
                                                  "appBar": 1100,
                                                  "drawer": 1200,
                                                  "mobileStepper": 1000,
                                                  "modal": 1300,
                                                  "snackbar": 1400,
                                                  "tooltip": 1500,
                                                },
                                              },
                                              "name": "PrivateTabScrollButton",
                                            },
                                            "propTypes": Object {
                                              "classes": [Function],
                                              "innerRef": [Function],
                                            },
                                            "render": [Function],
                                            "useStyles": [Function],
                                          }
                                        }
                                        centered={false}
                                        classes={
                                          Object {
                                            "centered": "MuiTabs-centered",
                                            "fixed": "MuiTabs-fixed",
                                            "flexContainer": "MuiTabs-flexContainer",
                                            "indicator": "MuiTabs-indicator AnswerTabs-displayNone-351",
                                            "root": "MuiTabs-root AnswerTabs-tabsRoot-352",
                                            "scrollButtons": "MuiTabs-scrollButtons AnswerTabs-displayNone-351",
                                            "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                            "scrollable": "MuiTabs-scrollable",
                                            "scroller": "MuiTabs-scroller",
                                          }
                                        }
                                        component="div"
                                        indicatorColor="secondary"
                                        innerRef={null}
                                        onChange={[Function]}
                                        scrollButtons="auto"
                                        textColor="inherit"
                                        theme={
                                          Object {
                                            "breakpoints": Object {
                                              "between": [Function],
                                              "down": [Function],
                                              "keys": Array [
                                                "xs",
                                                "sm",
                                                "md",
                                                "lg",
                                                "xl",
                                              ],
                                              "only": [Function],
                                              "up": [Function],
                                              "values": Object {
                                                "lg": 1280,
                                                "md": 960,
                                                "sm": 600,
                                                "xl": 1920,
                                                "xs": 0,
                                              },
                                              "width": [Function],
                                            },
                                            "direction": "ltr",
                                            "mixins": Object {
                                              "gutters": [Function],
                                              "toolbar": Object {
                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                  "minHeight": 48,
                                                },
                                                "@media (min-width:600px)": Object {
                                                  "minHeight": 64,
                                                },
                                                "minHeight": 56,
                                              },
                                            },
                                            "overrides": Object {},
                                            "palette": Object {
                                              "action": Object {
                                                "active": "rgba(0, 0, 0, 0.54)",
                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                "hover": "rgba(0, 0, 0, 0.08)",
                                                "hoverOpacity": 0.08,
                                                "selected": "rgba(0, 0, 0, 0.14)",
                                              },
                                              "augmentColor": [Function],
                                              "background": Object {
                                                "default": "#fafafa",
                                                "paper": "#fff",
                                              },
                                              "common": Object {
                                                "black": "#000",
                                                "white": "#fff",
                                              },
                                              "contrastThreshold": 3,
                                              "divider": "rgba(0, 0, 0, 0.12)",
                                              "error": Object {
                                                "contrastText": "#fff",
                                                "dark": "#d32f2f",
                                                "light": "#e57373",
                                                "main": "#f44336",
                                              },
                                              "getContrastText": [Function],
                                              "grey": Object {
                                                "100": "#f5f5f5",
                                                "200": "#eeeeee",
                                                "300": "#e0e0e0",
                                                "400": "#bdbdbd",
                                                "50": "#fafafa",
                                                "500": "#9e9e9e",
                                                "600": "#757575",
                                                "700": "#616161",
                                                "800": "#424242",
                                                "900": "#212121",
                                                "A100": "#d5d5d5",
                                                "A200": "#aaaaaa",
                                                "A400": "#303030",
                                                "A700": "#616161",
                                              },
                                              "primary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#303f9f",
                                                "light": "#7986cb",
                                                "main": "#3f51b5",
                                              },
                                              "secondary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#c51162",
                                                "light": "#ff4081",
                                                "main": "#f50057",
                                              },
                                              "text": Object {
                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                              },
                                              "tonalOffset": 0.2,
                                              "type": "light",
                                            },
                                            "props": Object {},
                                            "shadows": Array [
                                              "none",
                                              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                            ],
                                            "shape": Object {
                                              "borderRadius": 4,
                                            },
                                            "spacing": [Function],
                                            "transitions": Object {
                                              "create": [Function],
                                              "duration": Object {
                                                "complex": 375,
                                                "enteringScreen": 225,
                                                "leavingScreen": 195,
                                                "short": 250,
                                                "shorter": 200,
                                                "shortest": 150,
                                                "standard": 300,
                                              },
                                              "easing": Object {
                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                              },
                                              "getAutoHeightDuration": [Function],
                                            },
                                            "typography": Object {
                                              "body1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.5,
                                              },
                                              "body2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.01071em",
                                                "lineHeight": 1.43,
                                              },
                                              "button": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.02857em",
                                                "lineHeight": 1.75,
                                                "textTransform": "uppercase",
                                              },
                                              "caption": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.03333em",
                                                "lineHeight": 1.66,
                                              },
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": 14,
                                              "fontWeightBold": 700,
                                              "fontWeightLight": 300,
                                              "fontWeightMedium": 500,
                                              "fontWeightRegular": 400,
                                              "h1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "6rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.01562em",
                                                "lineHeight": 1,
                                              },
                                              "h2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3.75rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.00833em",
                                                "lineHeight": 1,
                                              },
                                              "h3": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.04,
                                              },
                                              "h4": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.125rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00735em",
                                                "lineHeight": 1.17,
                                              },
                                              "h5": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.5rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.33,
                                              },
                                              "h6": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.25rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.0075em",
                                                "lineHeight": 1.6,
                                              },
                                              "htmlFontSize": 16,
                                              "overline": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.08333em",
                                                "lineHeight": 2.66,
                                                "textTransform": "uppercase",
                                              },
                                              "pxToRem": [Function],
                                              "round": [Function],
                                              "subtitle1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.75,
                                              },
                                              "subtitle2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.00714em",
                                                "lineHeight": 1.57,
                                              },
                                            },
                                            "zIndex": Object {
                                              "appBar": 1100,
                                              "drawer": 1200,
                                              "mobileStepper": 1000,
                                              "modal": 1300,
                                              "snackbar": 1400,
                                              "tooltip": 1500,
                                            },
                                          }
                                        }
                                        value={0}
                                        variant="scrollable"
                                      >
                                        <div
                                          className="MuiTabs-root AnswerTabs-tabsRoot-352"
                                        >
                                          <EventListener
                                            onResize={[Function]}
                                            target="window"
                                          />
                                          <div
                                            className="MuiTabs-flexContainer"
                                          >
                                            <ScrollbarSize
                                              className="MuiTabs-scrollable"
                                              onChange={[Function]}
                                            >
                                              <div
                                                className="MuiTabs-scrollable"
                                                style={
                                                  Object {
                                                    "height": 99,
                                                    "overflow": "scroll",
                                                    "position": "absolute",
                                                    "top": -9999,
                                                    "width": 99,
                                                  }
                                                }
                                              />
                                            </ScrollbarSize>
                                            <div
                                              className="MuiTabs-scroller MuiTabs-scrollable"
                                              onScroll={[Function]}
                                              role="tablist"
                                              style={
                                                Object {
                                                  "marginBottom": -0,
                                                  "overflow": null,
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiTabs-flexContainer"
                                              >
                                                <WithStyles(ForwardRef(Tab))
                                                  classes={
                                                    Object {
                                                      "root": "AnswerTabs-tabRootButton-353",
                                                      "selected": "AnswerTabs-tabSelected-354",
                                                      "wrapper": "AnswerTabs-tabWrapper-355",
                                                    }
                                                  }
                                                  fullWidth={false}
                                                  icon={<Memo />}
                                                  indicator={false}
                                                  key=".0:$0"
                                                  label="PUBLISHED"
                                                  onChange={[Function]}
                                                  selected={true}
                                                  textColor="inherit"
                                                  value={0}
                                                >
                                                  <ForwardRef(Tab)
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "fullWidth": "MuiTab-fullWidth",
                                                        "labelIcon": "MuiTab-labelIcon",
                                                        "root": "MuiTab-root AnswerTabs-tabRootButton-353",
                                                        "selected": "Mui-selected AnswerTabs-tabSelected-354",
                                                        "textColorInherit": "MuiTab-textColorInherit",
                                                        "textColorPrimary": "MuiTab-textColorPrimary",
                                                        "textColorSecondary": "MuiTab-textColorSecondary",
                                                        "wrapped": "MuiTab-wrapped",
                                                        "wrapper": "MuiTab-wrapper AnswerTabs-tabWrapper-355",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    icon={<Memo />}
                                                    indicator={false}
                                                    label="PUBLISHED"
                                                    onChange={[Function]}
                                                    selected={true}
                                                    textColor="inherit"
                                                    value={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-selected={true}
                                                      className="MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit Mui-selected AnswerTabs-tabSelected-354 MuiTab-labelIcon"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      role="tab"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-selected={true}
                                                        className="MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit Mui-selected AnswerTabs-tabSelected-354 MuiTab-labelIcon"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onClick={[Function]}
                                                        role="tab"
                                                      >
                                                        <button
                                                          aria-selected={true}
                                                          className="MuiButtonBase-root MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit Mui-selected AnswerTabs-tabSelected-354 MuiTab-labelIcon"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role="tab"
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiTab-wrapper AnswerTabs-tabWrapper-355"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    role="presentation"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                                                    />
                                                                    <path
                                                                      d="M0 0h24v24H0z"
                                                                      fill="none"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                            PUBLISHED
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(TouchRipple)
                                                              center={false}
                                                            >
                                                              <TouchRipple
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    enter={true}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Tab)>
                                                </WithStyles(ForwardRef(Tab))>
                                                <WithStyles(ForwardRef(Tab))
                                                  classes={
                                                    Object {
                                                      "root": "AnswerTabs-tabRootButton-353",
                                                      "selected": "AnswerTabs-tabSelected-354",
                                                      "wrapper": "AnswerTabs-tabWrapper-355",
                                                    }
                                                  }
                                                  fullWidth={false}
                                                  icon={<Memo />}
                                                  indicator={false}
                                                  key=".0:$1"
                                                  label="DRAFT"
                                                  onChange={[Function]}
                                                  selected={false}
                                                  textColor="inherit"
                                                  value={1}
                                                >
                                                  <ForwardRef(Tab)
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "fullWidth": "MuiTab-fullWidth",
                                                        "labelIcon": "MuiTab-labelIcon",
                                                        "root": "MuiTab-root AnswerTabs-tabRootButton-353",
                                                        "selected": "Mui-selected AnswerTabs-tabSelected-354",
                                                        "textColorInherit": "MuiTab-textColorInherit",
                                                        "textColorPrimary": "MuiTab-textColorPrimary",
                                                        "textColorSecondary": "MuiTab-textColorSecondary",
                                                        "wrapped": "MuiTab-wrapped",
                                                        "wrapper": "MuiTab-wrapper AnswerTabs-tabWrapper-355",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    icon={<Memo />}
                                                    indicator={false}
                                                    label="DRAFT"
                                                    onChange={[Function]}
                                                    selected={false}
                                                    textColor="inherit"
                                                    value={1}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-selected={false}
                                                      className="MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit MuiTab-labelIcon"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      role="tab"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-selected={false}
                                                        className="MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit MuiTab-labelIcon"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onClick={[Function]}
                                                        role="tab"
                                                      >
                                                        <button
                                                          aria-selected={false}
                                                          className="MuiButtonBase-root MuiTab-root AnswerTabs-tabRootButton-353 MuiTab-textColorInherit MuiTab-labelIcon"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role="tab"
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiTab-wrapper AnswerTabs-tabWrapper-355"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    role="presentation"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M0 0h24v24H0V0z"
                                                                      fill="none"
                                                                    />
                                                                    <path
                                                                      d="M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                            DRAFT
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(TouchRipple)
                                                              center={false}
                                                            >
                                                              <TouchRipple
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    enter={true}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Tab)>
                                                </WithStyles(ForwardRef(Tab))>
                                                <WithStyles(RegularButton)
                                                  color="info"
                                                  fullWidth={false}
                                                  indicator={false}
                                                  key=".1"
                                                  onChange={[Function]}
                                                  onClick={[Function]}
                                                  round={true}
                                                  selected={false}
                                                  textColor="inherit"
                                                  value={2}
                                                >
                                                  <RegularButton
                                                    classes={
                                                      Object {
                                                        "block": "RegularButton-block-15",
                                                        "button": "RegularButton-button-1",
                                                        "danger": "RegularButton-danger-8",
                                                        "disabled": "RegularButton-disabled-11",
                                                        "info": "RegularButton-info-5",
                                                        "justIcon": "RegularButton-justIcon-17",
                                                        "lg": "RegularButton-lg-12",
                                                        "link": "RegularButton-link-16",
                                                        "primary": "RegularButton-primary-4",
                                                        "rose": "RegularButton-rose-3",
                                                        "round": "RegularButton-round-14",
                                                        "simple": "RegularButton-simple-9",
                                                        "sm": "RegularButton-sm-13",
                                                        "success": "RegularButton-success-6",
                                                        "transparent": "RegularButton-transparent-10",
                                                        "warning": "RegularButton-warning-7",
                                                        "white": "RegularButton-white-2",
                                                      }
                                                    }
                                                    color="info"
                                                    fullWidth={false}
                                                    indicator={false}
                                                    onChange={[Function]}
                                                    onClick={[Function]}
                                                    round={true}
                                                    selected={false}
                                                    textColor="inherit"
                                                    value={2}
                                                  >
                                                    <WithStyles(ForwardRef(Button))
                                                      className="RegularButton-button-1 RegularButton-info-5 RegularButton-round-14"
                                                      fullWidth={false}
                                                      indicator={false}
                                                      onChange={[Function]}
                                                      onClick={[Function]}
                                                      selected={false}
                                                      textColor="inherit"
                                                      value={2}
                                                    >
                                                      <ForwardRef(Button)
                                                        className="RegularButton-button-1 RegularButton-info-5 RegularButton-round-14"
                                                        classes={
                                                          Object {
                                                            "colorInherit": "MuiButton-colorInherit",
                                                            "contained": "MuiButton-contained",
                                                            "containedPrimary": "MuiButton-containedPrimary",
                                                            "containedSecondary": "MuiButton-containedSecondary",
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "fullWidth": "MuiButton-fullWidth",
                                                            "label": "MuiButton-label",
                                                            "outlined": "MuiButton-outlined",
                                                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                            "root": "MuiButton-root",
                                                            "sizeLarge": "MuiButton-sizeLarge",
                                                            "sizeSmall": "MuiButton-sizeSmall",
                                                            "text": "MuiButton-text",
                                                            "textPrimary": "MuiButton-textPrimary",
                                                            "textSecondary": "MuiButton-textSecondary",
                                                          }
                                                        }
                                                        fullWidth={false}
                                                        indicator={false}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        selected={false}
                                                        textColor="inherit"
                                                        value={2}
                                                      >
                                                        <WithStyles(ForwardRef(ButtonBase))
                                                          className="MuiButton-root RegularButton-button-1 RegularButton-info-5 RegularButton-round-14 MuiButton-text"
                                                          component="button"
                                                          disabled={false}
                                                          focusRipple={true}
                                                          focusVisibleClassName="Mui-focusVisible"
                                                          indicator={false}
                                                          onChange={[Function]}
                                                          onClick={[Function]}
                                                          selected={false}
                                                          textColor="inherit"
                                                          type="button"
                                                          value={2}
                                                        >
                                                          <ForwardRef(ButtonBase)
                                                            className="MuiButton-root RegularButton-button-1 RegularButton-info-5 RegularButton-round-14 MuiButton-text"
                                                            classes={
                                                              Object {
                                                                "disabled": "Mui-disabled",
                                                                "focusVisible": "Mui-focusVisible",
                                                                "root": "MuiButtonBase-root",
                                                              }
                                                            }
                                                            component="button"
                                                            disabled={false}
                                                            focusRipple={true}
                                                            focusVisibleClassName="Mui-focusVisible"
                                                            indicator={false}
                                                            onChange={[Function]}
                                                            onClick={[Function]}
                                                            selected={false}
                                                            textColor="inherit"
                                                            type="button"
                                                            value={2}
                                                          >
                                                            <button
                                                              className="MuiButtonBase-root MuiButton-root RegularButton-button-1 RegularButton-info-5 RegularButton-round-14 MuiButton-text"
                                                              disabled={false}
                                                              indicator={false}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              onKeyUp={[Function]}
                                                              onMouseDown={[Function]}
                                                              onMouseLeave={[Function]}
                                                              onMouseUp={[Function]}
                                                              onTouchEnd={[Function]}
                                                              onTouchMove={[Function]}
                                                              onTouchStart={[Function]}
                                                              selected={false}
                                                              tabIndex={0}
                                                              textColor="inherit"
                                                              type="button"
                                                              value={2}
                                                            >
                                                              <span
                                                                className="MuiButton-label"
                                                              >
                                                                <ForwardRef>
                                                                  <WithStyles(ForwardRef(SvgIcon))>
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        role="presentation"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M0 0h24v24H0z"
                                                                          fill="none"
                                                                        />
                                                                        <path
                                                                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef>
                                                                 Create
                                                              </span>
                                                              <NoSsr>
                                                                <WithStyles(TouchRipple)
                                                                  center={false}
                                                                >
                                                                  <TouchRipple
                                                                    center={false}
                                                                    classes={
                                                                      Object {
                                                                        "child": "MuiTouchRipple-child",
                                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                                        "ripple": "MuiTouchRipple-ripple",
                                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                        "root": "MuiTouchRipple-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      className="MuiTouchRipple-root"
                                                                    >
                                                                      <TransitionGroup
                                                                        childFactory={[Function]}
                                                                        component={null}
                                                                        enter={true}
                                                                        exit={true}
                                                                      />
                                                                    </span>
                                                                  </TouchRipple>
                                                                </WithStyles(TouchRipple)>
                                                              </NoSsr>
                                                            </button>
                                                          </ForwardRef(ButtonBase)>
                                                        </WithStyles(ForwardRef(ButtonBase))>
                                                      </ForwardRef(Button)>
                                                    </WithStyles(ForwardRef(Button))>
                                                  </RegularButton>
                                                </WithStyles(RegularButton)>
                                              </div>
                                              <WithStyles(ForwardRef(TabIndicator))
                                                className="MuiTabs-indicator AnswerTabs-displayNone-351"
                                                color="secondary"
                                                style={
                                                  Object {
                                                    "left": 0,
                                                    "width": 0,
                                                  }
                                                }
                                              >
                                                <ForwardRef(TabIndicator)
                                                  className="MuiTabs-indicator AnswerTabs-displayNone-351"
                                                  classes={
                                                    Object {
                                                      "colorPrimary": "PrivateTabIndicator-colorPrimary-307",
                                                      "colorSecondary": "PrivateTabIndicator-colorSecondary-308",
                                                      "root": "PrivateTabIndicator-root-306",
                                                    }
                                                  }
                                                  color="secondary"
                                                  style={
                                                    Object {
                                                      "left": 0,
                                                      "width": 0,
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="PrivateTabIndicator-root-306 PrivateTabIndicator-colorSecondary-308 MuiTabs-indicator AnswerTabs-displayNone-351"
                                                    style={
                                                      Object {
                                                        "left": 0,
                                                        "width": 0,
                                                      }
                                                    }
                                                  />
                                                </ForwardRef(TabIndicator)>
                                              </WithStyles(ForwardRef(TabIndicator))>
                                            </div>
                                          </div>
                                        </div>
                                      </Tabs>
                                    </ForwardRef(Tabs)>
                                  </WithStyles(ForwardRef(Tabs))>
                                </div>
                              </CardHeader>
                            </WithStyles(CardHeader)>
                            <WithStyles(CardBody)>
                              <CardBody
                                classes={
                                  Object {
                                    "cardBody": "CardBody-cardBody-170",
                                    "cardBodyPlain": "CardBody-cardBodyPlain-171",
                                    "cardBodyProfile": "CardBody-cardBodyProfile-172",
                                  }
                                }
                              >
                                <div
                                  className="CardBody-cardBody-170"
                                >
                                  <div
                                    key="0"
                                  >
                                    <WithStyles(Tasks)
                                      checkedIndexes={Array []}
                                      onDeleteClicked={[Function]}
                                      onEditClicked={[Function]}
                                      tableHead={
                                        Array [
                                          "Name",
                                          "Description",
                                          "Status",
                                          "Modify",
                                        ]
                                      }
                                      tableHeaderColor="info"
                                      tasks={Array []}
                                    >
                                      <Tasks
                                        checkedIndexes={Array []}
                                        classes={
                                          Object {
                                            "checked": "Tasks-checked-359",
                                            "checkedIcon": "Tasks-checkedIcon-360",
                                            "close": "Tasks-close-381",
                                            "dangerTableHeader": "Tasks-dangerTableHeader-367",
                                            "edit": "Tasks-edit-380",
                                            "grayTableHeader": "Tasks-grayTableHeader-371",
                                            "infoTableHeader": "Tasks-infoTableHeader-369",
                                            "labelRoot": "Tasks-labelRoot-358",
                                            "primaryTableHeader": "Tasks-primaryTableHeader-366",
                                            "radio": "Tasks-radio-362",
                                            "radioChecked": "Tasks-radioChecked-363",
                                            "radioUnchecked": "Tasks-radioUnchecked-364",
                                            "root": "Tasks-root-357",
                                            "roseTableHeader": "Tasks-roseTableHeader-370",
                                            "successTableHeader": "Tasks-successTableHeader-368",
                                            "table": "Tasks-table-372",
                                            "tableActionButton": "Tasks-tableActionButton-378",
                                            "tableActionButtonIcon": "Tasks-tableActionButtonIcon-379",
                                            "tableActions": "Tasks-tableActions-375",
                                            "tableCell": "Tasks-tableCell-376",
                                            "tableCellRTL": "Tasks-tableCellRTL-377",
                                            "tableHeadCell": "Tasks-tableHeadCell-373",
                                            "tableRow": "Tasks-tableRow-374",
                                            "tooltip": "Tasks-tooltip-356",
                                            "uncheckedIcon": "Tasks-uncheckedIcon-361",
                                            "warningTableHeader": "Tasks-warningTableHeader-365",
                                          }
                                        }
                                        onDeleteClicked={[Function]}
                                        onEditClicked={[Function]}
                                        tableHead={
                                          Array [
                                            "Name",
                                            "Description",
                                            "Status",
                                            "Modify",
                                          ]
                                        }
                                        tableHeaderColor="info"
                                        tasks={Array []}
                                      >
                                        <WithStyles(ForwardRef(Table))
                                          className="Tasks-table-372"
                                        >
                                          <ForwardRef(Table)
                                            className="Tasks-table-372"
                                            classes={
                                              Object {
                                                "root": "MuiTable-root",
                                              }
                                            }
                                          >
                                            <table
                                              className="MuiTable-root Tasks-table-372"
                                            >
                                              <WithStyles(ForwardRef(TableHead))
                                                className="Tasks-infoTableHeader-369"
                                              >
                                                <ForwardRef(TableHead)
                                                  className="Tasks-infoTableHeader-369"
                                                  classes={
                                                    Object {
                                                      "root": "MuiTableHead-root",
                                                    }
                                                  }
                                                >
                                                  <thead
                                                    className="MuiTableHead-root Tasks-infoTableHeader-369"
                                                  >
                                                    <WithStyles(ForwardRef(TableRow))>
                                                      <ForwardRef(TableRow)
                                                        classes={
                                                          Object {
                                                            "footer": "MuiTableRow-footer",
                                                            "head": "MuiTableRow-head",
                                                            "hover": "MuiTableRow-hover",
                                                            "root": "MuiTableRow-root",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                      >
                                                        <tr
                                                          className="MuiTableRow-root MuiTableRow-head"
                                                        >
                                                          <WithStyles(ForwardRef(TableCell))
                                                            className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                            key="0"
                                                          >
                                                            <ForwardRef(TableCell)
                                                              className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTableCell-alignCenter",
                                                                  "alignJustify": "MuiTableCell-alignJustify",
                                                                  "alignLeft": "MuiTableCell-alignLeft",
                                                                  "alignRight": "MuiTableCell-alignRight",
                                                                  "body": "MuiTableCell-body",
                                                                  "footer": "MuiTableCell-footer",
                                                                  "head": "MuiTableCell-head",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                  "paddingNone": "MuiTableCell-paddingNone",
                                                                  "root": "MuiTableCell-root",
                                                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                                                }
                                                              }
                                                            >
                                                              <th
                                                                aria-sort={null}
                                                                className="MuiTableCell-root Tasks-tableCell-376 Tasks-tableHeadCell-373 MuiTableCell-head"
                                                                scope="col"
                                                              >
                                                                Name
                                                              </th>
                                                            </ForwardRef(TableCell)>
                                                          </WithStyles(ForwardRef(TableCell))>
                                                          <WithStyles(ForwardRef(TableCell))
                                                            className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                            key="1"
                                                          >
                                                            <ForwardRef(TableCell)
                                                              className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTableCell-alignCenter",
                                                                  "alignJustify": "MuiTableCell-alignJustify",
                                                                  "alignLeft": "MuiTableCell-alignLeft",
                                                                  "alignRight": "MuiTableCell-alignRight",
                                                                  "body": "MuiTableCell-body",
                                                                  "footer": "MuiTableCell-footer",
                                                                  "head": "MuiTableCell-head",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                  "paddingNone": "MuiTableCell-paddingNone",
                                                                  "root": "MuiTableCell-root",
                                                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                                                }
                                                              }
                                                            >
                                                              <th
                                                                aria-sort={null}
                                                                className="MuiTableCell-root Tasks-tableCell-376 Tasks-tableHeadCell-373 MuiTableCell-head"
                                                                scope="col"
                                                              >
                                                                Description
                                                              </th>
                                                            </ForwardRef(TableCell)>
                                                          </WithStyles(ForwardRef(TableCell))>
                                                          <WithStyles(ForwardRef(TableCell))
                                                            className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                            key="2"
                                                          >
                                                            <ForwardRef(TableCell)
                                                              className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTableCell-alignCenter",
                                                                  "alignJustify": "MuiTableCell-alignJustify",
                                                                  "alignLeft": "MuiTableCell-alignLeft",
                                                                  "alignRight": "MuiTableCell-alignRight",
                                                                  "body": "MuiTableCell-body",
                                                                  "footer": "MuiTableCell-footer",
                                                                  "head": "MuiTableCell-head",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                  "paddingNone": "MuiTableCell-paddingNone",
                                                                  "root": "MuiTableCell-root",
                                                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                                                }
                                                              }
                                                            >
                                                              <th
                                                                aria-sort={null}
                                                                className="MuiTableCell-root Tasks-tableCell-376 Tasks-tableHeadCell-373 MuiTableCell-head"
                                                                scope="col"
                                                              >
                                                                Status
                                                              </th>
                                                            </ForwardRef(TableCell)>
                                                          </WithStyles(ForwardRef(TableCell))>
                                                          <WithStyles(ForwardRef(TableCell))
                                                            className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                            key="3"
                                                          >
                                                            <ForwardRef(TableCell)
                                                              className="Tasks-tableCell-376 Tasks-tableHeadCell-373"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTableCell-alignCenter",
                                                                  "alignJustify": "MuiTableCell-alignJustify",
                                                                  "alignLeft": "MuiTableCell-alignLeft",
                                                                  "alignRight": "MuiTableCell-alignRight",
                                                                  "body": "MuiTableCell-body",
                                                                  "footer": "MuiTableCell-footer",
                                                                  "head": "MuiTableCell-head",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                  "paddingNone": "MuiTableCell-paddingNone",
                                                                  "root": "MuiTableCell-root",
                                                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                                                }
                                                              }
                                                            >
                                                              <th
                                                                aria-sort={null}
                                                                className="MuiTableCell-root Tasks-tableCell-376 Tasks-tableHeadCell-373 MuiTableCell-head"
                                                                scope="col"
                                                              >
                                                                Modify
                                                              </th>
                                                            </ForwardRef(TableCell)>
                                                          </WithStyles(ForwardRef(TableCell))>
                                                        </tr>
                                                      </ForwardRef(TableRow)>
                                                    </WithStyles(ForwardRef(TableRow))>
                                                  </thead>
                                                </ForwardRef(TableHead)>
                                              </WithStyles(ForwardRef(TableHead))>
                                              <WithStyles(ForwardRef(TableBody))>
                                                <ForwardRef(TableBody)
                                                  classes={
                                                    Object {
                                                      "root": "MuiTableBody-root",
                                                    }
                                                  }
                                                >
                                                  <tbody
                                                    className="MuiTableBody-root"
                                                  />
                                                </ForwardRef(TableBody)>
                                              </WithStyles(ForwardRef(TableBody))>
                                            </table>
                                          </ForwardRef(Table)>
                                        </WithStyles(ForwardRef(Table))>
                                      </Tasks>
                                    </WithStyles(Tasks)>
                                  </div>
                                </div>
                              </CardBody>
                            </WithStyles(CardBody)>
                          </div>
                        </Card>
                      </WithStyles(Card)>
                    </AnswerTabs>
                  </WithStyles(AnswerTabs)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </GridItem>
        </WithStyles(GridItem)>
      </QuestionnaireAdmin>
    </WithStyles(QuestionnaireAdmin)>
  </SideQuestionAdmin>
</WithStyles(SideQuestionAdmin)>
`;

exports[`Side Question should render correctly 1`] = `
<WithStyles(SideQuestion)>
  <SideQuestion
    classes={
      Object {
        "cardCategory": "SideQuestion-cardCategory-260",
        "cardCategoryWhite": "SideQuestion-cardCategoryWhite-261",
        "cardTitle": "SideQuestion-cardTitle-262",
        "cardTitleWhite": "SideQuestion-cardTitleWhite-263",
        "stats": "SideQuestion-stats-259",
        "successText": "SideQuestion-successText-257",
        "upArrowCardCategory": "SideQuestion-upArrowCardCategory-258",
      }
    }
  >
    <WithStyles(Questionnaire)
      value={12}
    >
      <Questionnaire
        classes={
          Object {
            "cardCategory": "Questionnaire-cardCategory-267",
            "cardCategoryWhite": "Questionnaire-cardCategoryWhite-268",
            "cardTitle": "Questionnaire-cardTitle-269",
            "cardTitleWhite": "Questionnaire-cardTitleWhite-270",
            "stats": "Questionnaire-stats-266",
            "successText": "Questionnaire-successText-264",
            "upArrowCardCategory": "Questionnaire-upArrowCardCategory-265",
          }
        }
        value={12}
      >
        <WithStyles(GridItem)
          md={12}
          sm={12}
          xs={12}
        >
          <GridItem
            classes={
              Object {
                "grid": "GridItem-grid-154",
              }
            }
            md={12}
            sm={12}
            xs={12}
          >
            <WithStyles(ForwardRef(Grid))
              className="GridItem-grid-154"
              item={true}
              md={12}
              sm={12}
              xs={12}
            >
              <ForwardRef(Grid)
                className="GridItem-grid-154"
                classes={
                  Object {
                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                    "container": "MuiGrid-container",
                    "direction-xs-column": "MuiGrid-direction-xs-column",
                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                    "grid-lg-1": "MuiGrid-grid-lg-1",
                    "grid-lg-10": "MuiGrid-grid-lg-10",
                    "grid-lg-11": "MuiGrid-grid-lg-11",
                    "grid-lg-12": "MuiGrid-grid-lg-12",
                    "grid-lg-2": "MuiGrid-grid-lg-2",
                    "grid-lg-3": "MuiGrid-grid-lg-3",
                    "grid-lg-4": "MuiGrid-grid-lg-4",
                    "grid-lg-5": "MuiGrid-grid-lg-5",
                    "grid-lg-6": "MuiGrid-grid-lg-6",
                    "grid-lg-7": "MuiGrid-grid-lg-7",
                    "grid-lg-8": "MuiGrid-grid-lg-8",
                    "grid-lg-9": "MuiGrid-grid-lg-9",
                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                    "grid-lg-true": "MuiGrid-grid-lg-true",
                    "grid-md-1": "MuiGrid-grid-md-1",
                    "grid-md-10": "MuiGrid-grid-md-10",
                    "grid-md-11": "MuiGrid-grid-md-11",
                    "grid-md-12": "MuiGrid-grid-md-12",
                    "grid-md-2": "MuiGrid-grid-md-2",
                    "grid-md-3": "MuiGrid-grid-md-3",
                    "grid-md-4": "MuiGrid-grid-md-4",
                    "grid-md-5": "MuiGrid-grid-md-5",
                    "grid-md-6": "MuiGrid-grid-md-6",
                    "grid-md-7": "MuiGrid-grid-md-7",
                    "grid-md-8": "MuiGrid-grid-md-8",
                    "grid-md-9": "MuiGrid-grid-md-9",
                    "grid-md-auto": "MuiGrid-grid-md-auto",
                    "grid-md-true": "MuiGrid-grid-md-true",
                    "grid-sm-1": "MuiGrid-grid-sm-1",
                    "grid-sm-10": "MuiGrid-grid-sm-10",
                    "grid-sm-11": "MuiGrid-grid-sm-11",
                    "grid-sm-12": "MuiGrid-grid-sm-12",
                    "grid-sm-2": "MuiGrid-grid-sm-2",
                    "grid-sm-3": "MuiGrid-grid-sm-3",
                    "grid-sm-4": "MuiGrid-grid-sm-4",
                    "grid-sm-5": "MuiGrid-grid-sm-5",
                    "grid-sm-6": "MuiGrid-grid-sm-6",
                    "grid-sm-7": "MuiGrid-grid-sm-7",
                    "grid-sm-8": "MuiGrid-grid-sm-8",
                    "grid-sm-9": "MuiGrid-grid-sm-9",
                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                    "grid-sm-true": "MuiGrid-grid-sm-true",
                    "grid-xl-1": "MuiGrid-grid-xl-1",
                    "grid-xl-10": "MuiGrid-grid-xl-10",
                    "grid-xl-11": "MuiGrid-grid-xl-11",
                    "grid-xl-12": "MuiGrid-grid-xl-12",
                    "grid-xl-2": "MuiGrid-grid-xl-2",
                    "grid-xl-3": "MuiGrid-grid-xl-3",
                    "grid-xl-4": "MuiGrid-grid-xl-4",
                    "grid-xl-5": "MuiGrid-grid-xl-5",
                    "grid-xl-6": "MuiGrid-grid-xl-6",
                    "grid-xl-7": "MuiGrid-grid-xl-7",
                    "grid-xl-8": "MuiGrid-grid-xl-8",
                    "grid-xl-9": "MuiGrid-grid-xl-9",
                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                    "grid-xl-true": "MuiGrid-grid-xl-true",
                    "grid-xs-1": "MuiGrid-grid-xs-1",
                    "grid-xs-10": "MuiGrid-grid-xs-10",
                    "grid-xs-11": "MuiGrid-grid-xs-11",
                    "grid-xs-12": "MuiGrid-grid-xs-12",
                    "grid-xs-2": "MuiGrid-grid-xs-2",
                    "grid-xs-3": "MuiGrid-grid-xs-3",
                    "grid-xs-4": "MuiGrid-grid-xs-4",
                    "grid-xs-5": "MuiGrid-grid-xs-5",
                    "grid-xs-6": "MuiGrid-grid-xs-6",
                    "grid-xs-7": "MuiGrid-grid-xs-7",
                    "grid-xs-8": "MuiGrid-grid-xs-8",
                    "grid-xs-9": "MuiGrid-grid-xs-9",
                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                    "grid-xs-true": "MuiGrid-grid-xs-true",
                    "item": "MuiGrid-item",
                    "justify-xs-center": "MuiGrid-justify-xs-center",
                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                    "root": "MuiGrid-root",
                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                  }
                }
                item={true}
                md={12}
                sm={12}
                xs={12}
              >
                <div
                  className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12"
                >
                  <WithStyles(CustomTabs)
                    headerColor="info"
                    tabs={
                      Array [
                        Object {
                          "tabContent": <ForwardRef(WithStyles)
                            checkedIndexes={Array []}
                            onViewClicked={[Function]}
                            tableHead={
                              Array [
                                "Name",
                                "Description",
                                "Status",
                                "Modify",
                              ]
                            }
                            tableHeaderColor="info"
                            tasks={Array []}
                          />,
                          "tabIcon": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "displayName": "GradeIcon",
                            "muiName": "SvgIcon",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "tabName": "PUBLISHED",
                        },
                        Object {
                          "tabContent": <ForwardRef(WithStyles)
                            checkedIndexes={Array []}
                            onViewClicked={[Function]}
                            tableHead={
                              Array [
                                "Name",
                                "Description",
                                "Status",
                                "Modify",
                              ]
                            }
                            tableHeaderColor="info"
                            tasks={Array []}
                          />,
                          "tabIcon": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "displayName": "CodeIcon",
                            "muiName": "SvgIcon",
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "tabName": "DRAFT",
                        },
                      ]
                    }
                    title="Questionnaires :"
                  >
                    <CustomTabs
                      classes={
                        Object {
                          "cardTitle": "CustomTabs-cardTitle-271",
                          "cardTitleRTL": "CustomTabs-cardTitleRTL-272",
                          "displayNone": "CustomTabs-displayNone-273",
                          "tabRootButton": "CustomTabs-tabRootButton-275",
                          "tabSelected": "CustomTabs-tabSelected-276",
                          "tabWrapper": "CustomTabs-tabWrapper-277",
                          "tabsRoot": "CustomTabs-tabsRoot-274",
                        }
                      }
                      headerColor="info"
                      tabs={
                        Array [
                          Object {
                            "tabContent": <ForwardRef(WithStyles)
                              checkedIndexes={Array []}
                              onViewClicked={[Function]}
                              tableHead={
                                Array [
                                  "Name",
                                  "Description",
                                  "Status",
                                  "Modify",
                                ]
                              }
                              tableHeaderColor="info"
                              tasks={Array []}
                            />,
                            "tabIcon": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "displayName": "GradeIcon",
                              "muiName": "SvgIcon",
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "tabName": "PUBLISHED",
                          },
                          Object {
                            "tabContent": <ForwardRef(WithStyles)
                              checkedIndexes={Array []}
                              onViewClicked={[Function]}
                              tableHead={
                                Array [
                                  "Name",
                                  "Description",
                                  "Status",
                                  "Modify",
                                ]
                              }
                              tableHeaderColor="info"
                              tasks={Array []}
                            />,
                            "tabIcon": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "displayName": "CodeIcon",
                              "muiName": "SvgIcon",
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "tabName": "DRAFT",
                          },
                        ]
                      }
                      title="Questionnaires :"
                    >
                      <WithStyles(Card)>
                        <Card
                          classes={
                            Object {
                              "card": "Card-card-155",
                              "cardChart": "Card-cardChart-158",
                              "cardPlain": "Card-cardPlain-156",
                              "cardProfile": "Card-cardProfile-157",
                            }
                          }
                        >
                          <div
                            className="Card-card-155"
                          >
                            <WithStyles(CardHeader)
                              color="info"
                            >
                              <CardHeader
                                classes={
                                  Object {
                                    "blue": "CardHeader-blue-169",
                                    "cardHeader": "CardHeader-cardHeader-159",
                                    "cardHeaderIcon": "CardHeader-cardHeaderIcon-162",
                                    "cardHeaderPlain": "CardHeader-cardHeaderPlain-160",
                                    "cardHeaderStats": "CardHeader-cardHeaderStats-161",
                                    "dangerCardHeader": "CardHeader-dangerCardHeader-165",
                                    "infoCardHeader": "CardHeader-infoCardHeader-166",
                                    "primaryCardHeader": "CardHeader-primaryCardHeader-167",
                                    "roseCardHeader": "CardHeader-roseCardHeader-168",
                                    "successCardHeader": "CardHeader-successCardHeader-164",
                                    "warningCardHeader": "CardHeader-warningCardHeader-163",
                                  }
                                }
                                color="info"
                              >
                                <div
                                  className="CardHeader-cardHeader-159 CardHeader-infoCardHeader-166"
                                >
                                  <div
                                    className="CustomTabs-cardTitle-271"
                                  >
                                    Questionnaires :
                                  </div>
                                  <WithStyles(ForwardRef(Tabs))
                                    classes={
                                      Object {
                                        "indicator": "CustomTabs-displayNone-273",
                                        "root": "CustomTabs-tabsRoot-274",
                                        "scrollButtons": "CustomTabs-displayNone-273",
                                      }
                                    }
                                    onChange={[Function]}
                                    scrollButtons="auto"
                                    value={0}
                                    variant="scrollable"
                                  >
                                    <ForwardRef(Tabs)
                                      classes={
                                        Object {
                                          "centered": "MuiTabs-centered",
                                          "fixed": "MuiTabs-fixed",
                                          "flexContainer": "MuiTabs-flexContainer",
                                          "indicator": "MuiTabs-indicator CustomTabs-displayNone-273",
                                          "root": "MuiTabs-root CustomTabs-tabsRoot-274",
                                          "scrollButtons": "MuiTabs-scrollButtons CustomTabs-displayNone-273",
                                          "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                          "scrollable": "MuiTabs-scrollable",
                                          "scroller": "MuiTabs-scroller",
                                        }
                                      }
                                      onChange={[Function]}
                                      scrollButtons="auto"
                                      theme={
                                        Object {
                                          "breakpoints": Object {
                                            "between": [Function],
                                            "down": [Function],
                                            "keys": Array [
                                              "xs",
                                              "sm",
                                              "md",
                                              "lg",
                                              "xl",
                                            ],
                                            "only": [Function],
                                            "up": [Function],
                                            "values": Object {
                                              "lg": 1280,
                                              "md": 960,
                                              "sm": 600,
                                              "xl": 1920,
                                              "xs": 0,
                                            },
                                            "width": [Function],
                                          },
                                          "direction": "ltr",
                                          "mixins": Object {
                                            "gutters": [Function],
                                            "toolbar": Object {
                                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                                "minHeight": 48,
                                              },
                                              "@media (min-width:600px)": Object {
                                                "minHeight": 64,
                                              },
                                              "minHeight": 56,
                                            },
                                          },
                                          "overrides": Object {},
                                          "palette": Object {
                                            "action": Object {
                                              "active": "rgba(0, 0, 0, 0.54)",
                                              "disabled": "rgba(0, 0, 0, 0.26)",
                                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                              "hover": "rgba(0, 0, 0, 0.08)",
                                              "hoverOpacity": 0.08,
                                              "selected": "rgba(0, 0, 0, 0.14)",
                                            },
                                            "augmentColor": [Function],
                                            "background": Object {
                                              "default": "#fafafa",
                                              "paper": "#fff",
                                            },
                                            "common": Object {
                                              "black": "#000",
                                              "white": "#fff",
                                            },
                                            "contrastThreshold": 3,
                                            "divider": "rgba(0, 0, 0, 0.12)",
                                            "error": Object {
                                              "contrastText": "#fff",
                                              "dark": "#d32f2f",
                                              "light": "#e57373",
                                              "main": "#f44336",
                                            },
                                            "getContrastText": [Function],
                                            "grey": Object {
                                              "100": "#f5f5f5",
                                              "200": "#eeeeee",
                                              "300": "#e0e0e0",
                                              "400": "#bdbdbd",
                                              "50": "#fafafa",
                                              "500": "#9e9e9e",
                                              "600": "#757575",
                                              "700": "#616161",
                                              "800": "#424242",
                                              "900": "#212121",
                                              "A100": "#d5d5d5",
                                              "A200": "#aaaaaa",
                                              "A400": "#303030",
                                              "A700": "#616161",
                                            },
                                            "primary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#303f9f",
                                              "light": "#7986cb",
                                              "main": "#3f51b5",
                                            },
                                            "secondary": Object {
                                              "contrastText": "#fff",
                                              "dark": "#c51162",
                                              "light": "#ff4081",
                                              "main": "#f50057",
                                            },
                                            "text": Object {
                                              "disabled": "rgba(0, 0, 0, 0.38)",
                                              "hint": "rgba(0, 0, 0, 0.38)",
                                              "primary": "rgba(0, 0, 0, 0.87)",
                                              "secondary": "rgba(0, 0, 0, 0.54)",
                                            },
                                            "tonalOffset": 0.2,
                                            "type": "light",
                                          },
                                          "props": Object {},
                                          "shadows": Array [
                                            "none",
                                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                          ],
                                          "shape": Object {
                                            "borderRadius": 4,
                                          },
                                          "spacing": [Function],
                                          "transitions": Object {
                                            "create": [Function],
                                            "duration": Object {
                                              "complex": 375,
                                              "enteringScreen": 225,
                                              "leavingScreen": 195,
                                              "short": 250,
                                              "shorter": 200,
                                              "shortest": 150,
                                              "standard": 300,
                                            },
                                            "easing": Object {
                                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                            },
                                            "getAutoHeightDuration": [Function],
                                          },
                                          "typography": Object {
                                            "body1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.5,
                                            },
                                            "body2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.01071em",
                                              "lineHeight": 1.43,
                                            },
                                            "button": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.02857em",
                                              "lineHeight": 1.75,
                                              "textTransform": "uppercase",
                                            },
                                            "caption": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.03333em",
                                              "lineHeight": 1.66,
                                            },
                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                            "fontSize": 14,
                                            "fontWeightBold": 700,
                                            "fontWeightLight": 300,
                                            "fontWeightMedium": 500,
                                            "fontWeightRegular": 400,
                                            "h1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "6rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.01562em",
                                              "lineHeight": 1,
                                            },
                                            "h2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3.75rem",
                                              "fontWeight": 300,
                                              "letterSpacing": "-0.00833em",
                                              "lineHeight": 1,
                                            },
                                            "h3": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "3rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.04,
                                            },
                                            "h4": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "2.125rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00735em",
                                              "lineHeight": 1.17,
                                            },
                                            "h5": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.5rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0em",
                                              "lineHeight": 1.33,
                                            },
                                            "h6": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1.25rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.0075em",
                                              "lineHeight": 1.6,
                                            },
                                            "htmlFontSize": 16,
                                            "overline": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.75rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.08333em",
                                              "lineHeight": 2.66,
                                              "textTransform": "uppercase",
                                            },
                                            "pxToRem": [Function],
                                            "round": [Function],
                                            "subtitle1": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "1rem",
                                              "fontWeight": 400,
                                              "letterSpacing": "0.00938em",
                                              "lineHeight": 1.75,
                                            },
                                            "subtitle2": Object {
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": "0.875rem",
                                              "fontWeight": 500,
                                              "letterSpacing": "0.00714em",
                                              "lineHeight": 1.57,
                                            },
                                          },
                                          "zIndex": Object {
                                            "appBar": 1100,
                                            "drawer": 1200,
                                            "mobileStepper": 1000,
                                            "modal": 1300,
                                            "snackbar": 1400,
                                            "tooltip": 1500,
                                          },
                                        }
                                      }
                                      value={0}
                                      variant="scrollable"
                                    >
                                      <Tabs
                                        ScrollButtonComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "Naked": Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "propTypes": Object {
                                                "className": [Function],
                                                "classes": [Function],
                                                "direction": [Function],
                                                "onClick": [Function],
                                                "visible": [Function],
                                              },
                                              "render": [Function],
                                            },
                                            "displayName": "WithStyles(ForwardRef(TabScrollButton))",
                                            "options": Object {
                                              "defaultTheme": Object {
                                                "breakpoints": Object {
                                                  "between": [Function],
                                                  "down": [Function],
                                                  "keys": Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ],
                                                  "only": [Function],
                                                  "up": [Function],
                                                  "values": Object {
                                                    "lg": 1280,
                                                    "md": 960,
                                                    "sm": 600,
                                                    "xl": 1920,
                                                    "xs": 0,
                                                  },
                                                  "width": [Function],
                                                },
                                                "direction": "ltr",
                                                "mixins": Object {
                                                  "gutters": [Function],
                                                  "toolbar": Object {
                                                    "@media (min-width:0px) and (orientation: landscape)": Object {
                                                      "minHeight": 48,
                                                    },
                                                    "@media (min-width:600px)": Object {
                                                      "minHeight": 64,
                                                    },
                                                    "minHeight": 56,
                                                  },
                                                },
                                                "overrides": Object {},
                                                "palette": Object {
                                                  "action": Object {
                                                    "active": "rgba(0, 0, 0, 0.54)",
                                                    "disabled": "rgba(0, 0, 0, 0.26)",
                                                    "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                    "hover": "rgba(0, 0, 0, 0.08)",
                                                    "hoverOpacity": 0.08,
                                                    "selected": "rgba(0, 0, 0, 0.14)",
                                                  },
                                                  "augmentColor": [Function],
                                                  "background": Object {
                                                    "default": "#fafafa",
                                                    "paper": "#fff",
                                                  },
                                                  "common": Object {
                                                    "black": "#000",
                                                    "white": "#fff",
                                                  },
                                                  "contrastThreshold": 3,
                                                  "divider": "rgba(0, 0, 0, 0.12)",
                                                  "error": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#d32f2f",
                                                    "light": "#e57373",
                                                    "main": "#f44336",
                                                  },
                                                  "getContrastText": [Function],
                                                  "grey": Object {
                                                    "100": "#f5f5f5",
                                                    "200": "#eeeeee",
                                                    "300": "#e0e0e0",
                                                    "400": "#bdbdbd",
                                                    "50": "#fafafa",
                                                    "500": "#9e9e9e",
                                                    "600": "#757575",
                                                    "700": "#616161",
                                                    "800": "#424242",
                                                    "900": "#212121",
                                                    "A100": "#d5d5d5",
                                                    "A200": "#aaaaaa",
                                                    "A400": "#303030",
                                                    "A700": "#616161",
                                                  },
                                                  "primary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#303f9f",
                                                    "light": "#7986cb",
                                                    "main": "#3f51b5",
                                                  },
                                                  "secondary": Object {
                                                    "contrastText": "#fff",
                                                    "dark": "#c51162",
                                                    "light": "#ff4081",
                                                    "main": "#f50057",
                                                  },
                                                  "text": Object {
                                                    "disabled": "rgba(0, 0, 0, 0.38)",
                                                    "hint": "rgba(0, 0, 0, 0.38)",
                                                    "primary": "rgba(0, 0, 0, 0.87)",
                                                    "secondary": "rgba(0, 0, 0, 0.54)",
                                                  },
                                                  "tonalOffset": 0.2,
                                                  "type": "light",
                                                },
                                                "props": Object {},
                                                "shadows": Array [
                                                  "none",
                                                  "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                  "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                  "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                  "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                  "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                  "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                  "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                  "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                  "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                  "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                  "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                  "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                  "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                  "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                  "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                  "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                  "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                  "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                ],
                                                "shape": Object {
                                                  "borderRadius": 4,
                                                },
                                                "spacing": [Function],
                                                "transitions": Object {
                                                  "create": [Function],
                                                  "duration": Object {
                                                    "complex": 375,
                                                    "enteringScreen": 225,
                                                    "leavingScreen": 195,
                                                    "short": 250,
                                                    "shorter": 200,
                                                    "shortest": 150,
                                                    "standard": 300,
                                                  },
                                                  "easing": Object {
                                                    "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                    "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                    "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                    "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                  },
                                                  "getAutoHeightDuration": [Function],
                                                },
                                                "typography": Object {
                                                  "body1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.5,
                                                  },
                                                  "body2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.01071em",
                                                    "lineHeight": 1.43,
                                                  },
                                                  "button": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.02857em",
                                                    "lineHeight": 1.75,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "caption": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.03333em",
                                                    "lineHeight": 1.66,
                                                  },
                                                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                  "fontSize": 14,
                                                  "fontWeightBold": 700,
                                                  "fontWeightLight": 300,
                                                  "fontWeightMedium": 500,
                                                  "fontWeightRegular": 400,
                                                  "h1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "6rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.01562em",
                                                    "lineHeight": 1,
                                                  },
                                                  "h2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3.75rem",
                                                    "fontWeight": 300,
                                                    "letterSpacing": "-0.00833em",
                                                    "lineHeight": 1,
                                                  },
                                                  "h3": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "3rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.04,
                                                  },
                                                  "h4": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "2.125rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00735em",
                                                    "lineHeight": 1.17,
                                                  },
                                                  "h5": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.5rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0em",
                                                    "lineHeight": 1.33,
                                                  },
                                                  "h6": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1.25rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.0075em",
                                                    "lineHeight": 1.6,
                                                  },
                                                  "htmlFontSize": 16,
                                                  "overline": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.75rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.08333em",
                                                    "lineHeight": 2.66,
                                                    "textTransform": "uppercase",
                                                  },
                                                  "pxToRem": [Function],
                                                  "round": [Function],
                                                  "subtitle1": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "1rem",
                                                    "fontWeight": 400,
                                                    "letterSpacing": "0.00938em",
                                                    "lineHeight": 1.75,
                                                  },
                                                  "subtitle2": Object {
                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                    "fontSize": "0.875rem",
                                                    "fontWeight": 500,
                                                    "letterSpacing": "0.00714em",
                                                    "lineHeight": 1.57,
                                                  },
                                                },
                                                "zIndex": Object {
                                                  "appBar": 1100,
                                                  "drawer": 1200,
                                                  "mobileStepper": 1000,
                                                  "modal": 1300,
                                                  "snackbar": 1400,
                                                  "tooltip": 1500,
                                                },
                                              },
                                              "name": "PrivateTabScrollButton",
                                            },
                                            "propTypes": Object {
                                              "classes": [Function],
                                              "innerRef": [Function],
                                            },
                                            "render": [Function],
                                            "useStyles": [Function],
                                          }
                                        }
                                        centered={false}
                                        classes={
                                          Object {
                                            "centered": "MuiTabs-centered",
                                            "fixed": "MuiTabs-fixed",
                                            "flexContainer": "MuiTabs-flexContainer",
                                            "indicator": "MuiTabs-indicator CustomTabs-displayNone-273",
                                            "root": "MuiTabs-root CustomTabs-tabsRoot-274",
                                            "scrollButtons": "MuiTabs-scrollButtons CustomTabs-displayNone-273",
                                            "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                                            "scrollable": "MuiTabs-scrollable",
                                            "scroller": "MuiTabs-scroller",
                                          }
                                        }
                                        component="div"
                                        indicatorColor="secondary"
                                        innerRef={null}
                                        onChange={[Function]}
                                        scrollButtons="auto"
                                        textColor="inherit"
                                        theme={
                                          Object {
                                            "breakpoints": Object {
                                              "between": [Function],
                                              "down": [Function],
                                              "keys": Array [
                                                "xs",
                                                "sm",
                                                "md",
                                                "lg",
                                                "xl",
                                              ],
                                              "only": [Function],
                                              "up": [Function],
                                              "values": Object {
                                                "lg": 1280,
                                                "md": 960,
                                                "sm": 600,
                                                "xl": 1920,
                                                "xs": 0,
                                              },
                                              "width": [Function],
                                            },
                                            "direction": "ltr",
                                            "mixins": Object {
                                              "gutters": [Function],
                                              "toolbar": Object {
                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                  "minHeight": 48,
                                                },
                                                "@media (min-width:600px)": Object {
                                                  "minHeight": 64,
                                                },
                                                "minHeight": 56,
                                              },
                                            },
                                            "overrides": Object {},
                                            "palette": Object {
                                              "action": Object {
                                                "active": "rgba(0, 0, 0, 0.54)",
                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                "hover": "rgba(0, 0, 0, 0.08)",
                                                "hoverOpacity": 0.08,
                                                "selected": "rgba(0, 0, 0, 0.14)",
                                              },
                                              "augmentColor": [Function],
                                              "background": Object {
                                                "default": "#fafafa",
                                                "paper": "#fff",
                                              },
                                              "common": Object {
                                                "black": "#000",
                                                "white": "#fff",
                                              },
                                              "contrastThreshold": 3,
                                              "divider": "rgba(0, 0, 0, 0.12)",
                                              "error": Object {
                                                "contrastText": "#fff",
                                                "dark": "#d32f2f",
                                                "light": "#e57373",
                                                "main": "#f44336",
                                              },
                                              "getContrastText": [Function],
                                              "grey": Object {
                                                "100": "#f5f5f5",
                                                "200": "#eeeeee",
                                                "300": "#e0e0e0",
                                                "400": "#bdbdbd",
                                                "50": "#fafafa",
                                                "500": "#9e9e9e",
                                                "600": "#757575",
                                                "700": "#616161",
                                                "800": "#424242",
                                                "900": "#212121",
                                                "A100": "#d5d5d5",
                                                "A200": "#aaaaaa",
                                                "A400": "#303030",
                                                "A700": "#616161",
                                              },
                                              "primary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#303f9f",
                                                "light": "#7986cb",
                                                "main": "#3f51b5",
                                              },
                                              "secondary": Object {
                                                "contrastText": "#fff",
                                                "dark": "#c51162",
                                                "light": "#ff4081",
                                                "main": "#f50057",
                                              },
                                              "text": Object {
                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                              },
                                              "tonalOffset": 0.2,
                                              "type": "light",
                                            },
                                            "props": Object {},
                                            "shadows": Array [
                                              "none",
                                              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                            ],
                                            "shape": Object {
                                              "borderRadius": 4,
                                            },
                                            "spacing": [Function],
                                            "transitions": Object {
                                              "create": [Function],
                                              "duration": Object {
                                                "complex": 375,
                                                "enteringScreen": 225,
                                                "leavingScreen": 195,
                                                "short": 250,
                                                "shorter": 200,
                                                "shortest": 150,
                                                "standard": 300,
                                              },
                                              "easing": Object {
                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                              },
                                              "getAutoHeightDuration": [Function],
                                            },
                                            "typography": Object {
                                              "body1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.5,
                                              },
                                              "body2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.01071em",
                                                "lineHeight": 1.43,
                                              },
                                              "button": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.02857em",
                                                "lineHeight": 1.75,
                                                "textTransform": "uppercase",
                                              },
                                              "caption": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.03333em",
                                                "lineHeight": 1.66,
                                              },
                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                              "fontSize": 14,
                                              "fontWeightBold": 700,
                                              "fontWeightLight": 300,
                                              "fontWeightMedium": 500,
                                              "fontWeightRegular": 400,
                                              "h1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "6rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.01562em",
                                                "lineHeight": 1,
                                              },
                                              "h2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3.75rem",
                                                "fontWeight": 300,
                                                "letterSpacing": "-0.00833em",
                                                "lineHeight": 1,
                                              },
                                              "h3": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "3rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.04,
                                              },
                                              "h4": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "2.125rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00735em",
                                                "lineHeight": 1.17,
                                              },
                                              "h5": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.5rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0em",
                                                "lineHeight": 1.33,
                                              },
                                              "h6": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1.25rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.0075em",
                                                "lineHeight": 1.6,
                                              },
                                              "htmlFontSize": 16,
                                              "overline": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.75rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.08333em",
                                                "lineHeight": 2.66,
                                                "textTransform": "uppercase",
                                              },
                                              "pxToRem": [Function],
                                              "round": [Function],
                                              "subtitle1": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "1rem",
                                                "fontWeight": 400,
                                                "letterSpacing": "0.00938em",
                                                "lineHeight": 1.75,
                                              },
                                              "subtitle2": Object {
                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                "fontSize": "0.875rem",
                                                "fontWeight": 500,
                                                "letterSpacing": "0.00714em",
                                                "lineHeight": 1.57,
                                              },
                                            },
                                            "zIndex": Object {
                                              "appBar": 1100,
                                              "drawer": 1200,
                                              "mobileStepper": 1000,
                                              "modal": 1300,
                                              "snackbar": 1400,
                                              "tooltip": 1500,
                                            },
                                          }
                                        }
                                        value={0}
                                        variant="scrollable"
                                      >
                                        <div
                                          className="MuiTabs-root CustomTabs-tabsRoot-274"
                                        >
                                          <EventListener
                                            onResize={[Function]}
                                            target="window"
                                          />
                                          <div
                                            className="MuiTabs-flexContainer"
                                          >
                                            <ScrollbarSize
                                              className="MuiTabs-scrollable"
                                              onChange={[Function]}
                                            >
                                              <div
                                                className="MuiTabs-scrollable"
                                                style={
                                                  Object {
                                                    "height": 99,
                                                    "overflow": "scroll",
                                                    "position": "absolute",
                                                    "top": -9999,
                                                    "width": 99,
                                                  }
                                                }
                                              />
                                            </ScrollbarSize>
                                            <div
                                              className="MuiTabs-scroller MuiTabs-scrollable"
                                              onScroll={[Function]}
                                              role="tablist"
                                              style={
                                                Object {
                                                  "marginBottom": -0,
                                                  "overflow": null,
                                                }
                                              }
                                            >
                                              <div
                                                className="MuiTabs-flexContainer"
                                              >
                                                <WithStyles(ForwardRef(Tab))
                                                  classes={
                                                    Object {
                                                      "root": "CustomTabs-tabRootButton-275",
                                                      "selected": "CustomTabs-tabSelected-276",
                                                      "wrapper": "CustomTabs-tabWrapper-277",
                                                    }
                                                  }
                                                  fullWidth={false}
                                                  icon={<Memo />}
                                                  indicator={false}
                                                  key=".$0"
                                                  label="PUBLISHED"
                                                  onChange={[Function]}
                                                  selected={true}
                                                  textColor="inherit"
                                                  value={0}
                                                >
                                                  <ForwardRef(Tab)
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "fullWidth": "MuiTab-fullWidth",
                                                        "labelIcon": "MuiTab-labelIcon",
                                                        "root": "MuiTab-root CustomTabs-tabRootButton-275",
                                                        "selected": "Mui-selected CustomTabs-tabSelected-276",
                                                        "textColorInherit": "MuiTab-textColorInherit",
                                                        "textColorPrimary": "MuiTab-textColorPrimary",
                                                        "textColorSecondary": "MuiTab-textColorSecondary",
                                                        "wrapped": "MuiTab-wrapped",
                                                        "wrapper": "MuiTab-wrapper CustomTabs-tabWrapper-277",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    icon={<Memo />}
                                                    indicator={false}
                                                    label="PUBLISHED"
                                                    onChange={[Function]}
                                                    selected={true}
                                                    textColor="inherit"
                                                    value={0}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-selected={true}
                                                      className="MuiTab-root CustomTabs-tabRootButton-275 MuiTab-textColorInherit Mui-selected CustomTabs-tabSelected-276 MuiTab-labelIcon"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      role="tab"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-selected={true}
                                                        className="MuiTab-root CustomTabs-tabRootButton-275 MuiTab-textColorInherit Mui-selected CustomTabs-tabSelected-276 MuiTab-labelIcon"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onClick={[Function]}
                                                        role="tab"
                                                      >
                                                        <button
                                                          aria-selected={true}
                                                          className="MuiButtonBase-root MuiTab-root CustomTabs-tabRootButton-275 MuiTab-textColorInherit Mui-selected CustomTabs-tabSelected-276 MuiTab-labelIcon"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role="tab"
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiTab-wrapper CustomTabs-tabWrapper-277"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    role="presentation"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
                                                                    />
                                                                    <path
                                                                      d="M0 0h24v24H0z"
                                                                      fill="none"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                            PUBLISHED
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(TouchRipple)
                                                              center={false}
                                                            >
                                                              <TouchRipple
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    enter={true}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Tab)>
                                                </WithStyles(ForwardRef(Tab))>
                                                <WithStyles(ForwardRef(Tab))
                                                  classes={
                                                    Object {
                                                      "root": "CustomTabs-tabRootButton-275",
                                                      "selected": "CustomTabs-tabSelected-276",
                                                      "wrapper": "CustomTabs-tabWrapper-277",
                                                    }
                                                  }
                                                  fullWidth={false}
                                                  icon={<Memo />}
                                                  indicator={false}
                                                  key=".$1"
                                                  label="DRAFT"
                                                  onChange={[Function]}
                                                  selected={false}
                                                  textColor="inherit"
                                                  value={1}
                                                >
                                                  <ForwardRef(Tab)
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "fullWidth": "MuiTab-fullWidth",
                                                        "labelIcon": "MuiTab-labelIcon",
                                                        "root": "MuiTab-root CustomTabs-tabRootButton-275",
                                                        "selected": "Mui-selected CustomTabs-tabSelected-276",
                                                        "textColorInherit": "MuiTab-textColorInherit",
                                                        "textColorPrimary": "MuiTab-textColorPrimary",
                                                        "textColorSecondary": "MuiTab-textColorSecondary",
                                                        "wrapped": "MuiTab-wrapped",
                                                        "wrapper": "MuiTab-wrapper CustomTabs-tabWrapper-277",
                                                      }
                                                    }
                                                    fullWidth={false}
                                                    icon={<Memo />}
                                                    indicator={false}
                                                    label="DRAFT"
                                                    onChange={[Function]}
                                                    selected={false}
                                                    textColor="inherit"
                                                    value={1}
                                                  >
                                                    <WithStyles(ForwardRef(ButtonBase))
                                                      aria-selected={false}
                                                      className="MuiTab-root CustomTabs-tabRootButton-275 MuiTab-textColorInherit MuiTab-labelIcon"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onClick={[Function]}
                                                      role="tab"
                                                    >
                                                      <ForwardRef(ButtonBase)
                                                        aria-selected={false}
                                                        className="MuiTab-root CustomTabs-tabRootButton-275 MuiTab-textColorInherit MuiTab-labelIcon"
                                                        classes={
                                                          Object {
                                                            "disabled": "Mui-disabled",
                                                            "focusVisible": "Mui-focusVisible",
                                                            "root": "MuiButtonBase-root",
                                                          }
                                                        }
                                                        disabled={false}
                                                        focusRipple={true}
                                                        onClick={[Function]}
                                                        role="tab"
                                                      >
                                                        <button
                                                          aria-selected={false}
                                                          className="MuiButtonBase-root MuiTab-root CustomTabs-tabRootButton-275 MuiTab-textColorInherit MuiTab-labelIcon"
                                                          disabled={false}
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          role="tab"
                                                          tabIndex={0}
                                                          type="button"
                                                        >
                                                          <span
                                                            className="MuiTab-wrapper CustomTabs-tabWrapper-277"
                                                          >
                                                            <ForwardRef>
                                                              <WithStyles(ForwardRef(SvgIcon))>
                                                                <ForwardRef(SvgIcon)
                                                                  classes={
                                                                    Object {
                                                                      "colorAction": "MuiSvgIcon-colorAction",
                                                                      "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                      "colorError": "MuiSvgIcon-colorError",
                                                                      "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                      "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                      "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                      "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                      "root": "MuiSvgIcon-root",
                                                                    }
                                                                  }
                                                                >
                                                                  <svg
                                                                    aria-hidden="true"
                                                                    className="MuiSvgIcon-root"
                                                                    focusable="false"
                                                                    role="presentation"
                                                                    viewBox="0 0 24 24"
                                                                  >
                                                                    <path
                                                                      d="M0 0h24v24H0V0z"
                                                                      fill="none"
                                                                    />
                                                                    <path
                                                                      d="M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"
                                                                    />
                                                                  </svg>
                                                                </ForwardRef(SvgIcon)>
                                                              </WithStyles(ForwardRef(SvgIcon))>
                                                            </ForwardRef>
                                                            DRAFT
                                                          </span>
                                                          <NoSsr>
                                                            <WithStyles(TouchRipple)
                                                              center={false}
                                                            >
                                                              <TouchRipple
                                                                center={false}
                                                                classes={
                                                                  Object {
                                                                    "child": "MuiTouchRipple-child",
                                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                                    "ripple": "MuiTouchRipple-ripple",
                                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                    "root": "MuiTouchRipple-root",
                                                                  }
                                                                }
                                                              >
                                                                <span
                                                                  className="MuiTouchRipple-root"
                                                                >
                                                                  <TransitionGroup
                                                                    childFactory={[Function]}
                                                                    component={null}
                                                                    enter={true}
                                                                    exit={true}
                                                                  />
                                                                </span>
                                                              </TouchRipple>
                                                            </WithStyles(TouchRipple)>
                                                          </NoSsr>
                                                        </button>
                                                      </ForwardRef(ButtonBase)>
                                                    </WithStyles(ForwardRef(ButtonBase))>
                                                  </ForwardRef(Tab)>
                                                </WithStyles(ForwardRef(Tab))>
                                              </div>
                                              <WithStyles(ForwardRef(TabIndicator))
                                                className="MuiTabs-indicator CustomTabs-displayNone-273"
                                                color="secondary"
                                                style={
                                                  Object {
                                                    "left": 0,
                                                    "width": 0,
                                                  }
                                                }
                                              >
                                                <ForwardRef(TabIndicator)
                                                  className="MuiTabs-indicator CustomTabs-displayNone-273"
                                                  classes={
                                                    Object {
                                                      "colorPrimary": "PrivateTabIndicator-colorPrimary-307",
                                                      "colorSecondary": "PrivateTabIndicator-colorSecondary-308",
                                                      "root": "PrivateTabIndicator-root-306",
                                                    }
                                                  }
                                                  color="secondary"
                                                  style={
                                                    Object {
                                                      "left": 0,
                                                      "width": 0,
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="PrivateTabIndicator-root-306 PrivateTabIndicator-colorSecondary-308 MuiTabs-indicator CustomTabs-displayNone-273"
                                                    style={
                                                      Object {
                                                        "left": 0,
                                                        "width": 0,
                                                      }
                                                    }
                                                  />
                                                </ForwardRef(TabIndicator)>
                                              </WithStyles(ForwardRef(TabIndicator))>
                                            </div>
                                          </div>
                                        </div>
                                      </Tabs>
                                    </ForwardRef(Tabs)>
                                  </WithStyles(ForwardRef(Tabs))>
                                </div>
                              </CardHeader>
                            </WithStyles(CardHeader)>
                            <WithStyles(CardBody)>
                              <CardBody
                                classes={
                                  Object {
                                    "cardBody": "CardBody-cardBody-170",
                                    "cardBodyPlain": "CardBody-cardBodyPlain-171",
                                    "cardBodyProfile": "CardBody-cardBodyProfile-172",
                                  }
                                }
                              >
                                <div
                                  className="CardBody-cardBody-170"
                                >
                                  <div
                                    key="0"
                                  >
                                    <WithStyles(Tasks)
                                      checkedIndexes={Array []}
                                      onViewClicked={[Function]}
                                      tableHead={
                                        Array [
                                          "Name",
                                          "Description",
                                          "Status",
                                          "Modify",
                                        ]
                                      }
                                      tableHeaderColor="info"
                                      tasks={Array []}
                                    >
                                      <Tasks
                                        checkedIndexes={Array []}
                                        classes={
                                          Object {
                                            "checked": "Tasks-checked-312",
                                            "checkedIcon": "Tasks-checkedIcon-313",
                                            "close": "Tasks-close-334",
                                            "dangerTableHeader": "Tasks-dangerTableHeader-320",
                                            "edit": "Tasks-edit-333",
                                            "grayTableHeader": "Tasks-grayTableHeader-324",
                                            "infoTableHeader": "Tasks-infoTableHeader-322",
                                            "labelRoot": "Tasks-labelRoot-311",
                                            "primaryTableHeader": "Tasks-primaryTableHeader-319",
                                            "radio": "Tasks-radio-315",
                                            "radioChecked": "Tasks-radioChecked-316",
                                            "radioUnchecked": "Tasks-radioUnchecked-317",
                                            "root": "Tasks-root-310",
                                            "roseTableHeader": "Tasks-roseTableHeader-323",
                                            "successTableHeader": "Tasks-successTableHeader-321",
                                            "table": "Tasks-table-325",
                                            "tableActionButton": "Tasks-tableActionButton-331",
                                            "tableActionButtonIcon": "Tasks-tableActionButtonIcon-332",
                                            "tableActions": "Tasks-tableActions-328",
                                            "tableCell": "Tasks-tableCell-329",
                                            "tableCellRTL": "Tasks-tableCellRTL-330",
                                            "tableHeadCell": "Tasks-tableHeadCell-326",
                                            "tableRow": "Tasks-tableRow-327",
                                            "tooltip": "Tasks-tooltip-309",
                                            "uncheckedIcon": "Tasks-uncheckedIcon-314",
                                            "warningTableHeader": "Tasks-warningTableHeader-318",
                                          }
                                        }
                                        onViewClicked={[Function]}
                                        tableHead={
                                          Array [
                                            "Name",
                                            "Description",
                                            "Status",
                                            "Modify",
                                          ]
                                        }
                                        tableHeaderColor="info"
                                        tasks={Array []}
                                      >
                                        <WithStyles(ForwardRef(Table))
                                          className="Tasks-table-325"
                                        >
                                          <ForwardRef(Table)
                                            className="Tasks-table-325"
                                            classes={
                                              Object {
                                                "root": "MuiTable-root",
                                              }
                                            }
                                          >
                                            <table
                                              className="MuiTable-root Tasks-table-325"
                                            >
                                              <WithStyles(ForwardRef(TableHead))
                                                className="Tasks-infoTableHeader-322"
                                              >
                                                <ForwardRef(TableHead)
                                                  className="Tasks-infoTableHeader-322"
                                                  classes={
                                                    Object {
                                                      "root": "MuiTableHead-root",
                                                    }
                                                  }
                                                >
                                                  <thead
                                                    className="MuiTableHead-root Tasks-infoTableHeader-322"
                                                  >
                                                    <WithStyles(ForwardRef(TableRow))>
                                                      <ForwardRef(TableRow)
                                                        classes={
                                                          Object {
                                                            "footer": "MuiTableRow-footer",
                                                            "head": "MuiTableRow-head",
                                                            "hover": "MuiTableRow-hover",
                                                            "root": "MuiTableRow-root",
                                                            "selected": "Mui-selected",
                                                          }
                                                        }
                                                      >
                                                        <tr
                                                          className="MuiTableRow-root MuiTableRow-head"
                                                        >
                                                          <WithStyles(ForwardRef(TableCell))
                                                            className="Tasks-tableCell-329 Tasks-tableHeadCell-326"
                                                            key="0"
                                                          >
                                                            <ForwardRef(TableCell)
                                                              className="Tasks-tableCell-329 Tasks-tableHeadCell-326"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTableCell-alignCenter",
                                                                  "alignJustify": "MuiTableCell-alignJustify",
                                                                  "alignLeft": "MuiTableCell-alignLeft",
                                                                  "alignRight": "MuiTableCell-alignRight",
                                                                  "body": "MuiTableCell-body",
                                                                  "footer": "MuiTableCell-footer",
                                                                  "head": "MuiTableCell-head",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                  "paddingNone": "MuiTableCell-paddingNone",
                                                                  "root": "MuiTableCell-root",
                                                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                                                }
                                                              }
                                                            >
                                                              <th
                                                                aria-sort={null}
                                                                className="MuiTableCell-root Tasks-tableCell-329 Tasks-tableHeadCell-326 MuiTableCell-head"
                                                                scope="col"
                                                              >
                                                                Name
                                                              </th>
                                                            </ForwardRef(TableCell)>
                                                          </WithStyles(ForwardRef(TableCell))>
                                                          <WithStyles(ForwardRef(TableCell))
                                                            className="Tasks-tableCell-329 Tasks-tableHeadCell-326"
                                                            key="1"
                                                          >
                                                            <ForwardRef(TableCell)
                                                              className="Tasks-tableCell-329 Tasks-tableHeadCell-326"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTableCell-alignCenter",
                                                                  "alignJustify": "MuiTableCell-alignJustify",
                                                                  "alignLeft": "MuiTableCell-alignLeft",
                                                                  "alignRight": "MuiTableCell-alignRight",
                                                                  "body": "MuiTableCell-body",
                                                                  "footer": "MuiTableCell-footer",
                                                                  "head": "MuiTableCell-head",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                  "paddingNone": "MuiTableCell-paddingNone",
                                                                  "root": "MuiTableCell-root",
                                                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                                                }
                                                              }
                                                            >
                                                              <th
                                                                aria-sort={null}
                                                                className="MuiTableCell-root Tasks-tableCell-329 Tasks-tableHeadCell-326 MuiTableCell-head"
                                                                scope="col"
                                                              >
                                                                Description
                                                              </th>
                                                            </ForwardRef(TableCell)>
                                                          </WithStyles(ForwardRef(TableCell))>
                                                          <WithStyles(ForwardRef(TableCell))
                                                            className="Tasks-tableCell-329 Tasks-tableHeadCell-326"
                                                            key="2"
                                                          >
                                                            <ForwardRef(TableCell)
                                                              className="Tasks-tableCell-329 Tasks-tableHeadCell-326"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTableCell-alignCenter",
                                                                  "alignJustify": "MuiTableCell-alignJustify",
                                                                  "alignLeft": "MuiTableCell-alignLeft",
                                                                  "alignRight": "MuiTableCell-alignRight",
                                                                  "body": "MuiTableCell-body",
                                                                  "footer": "MuiTableCell-footer",
                                                                  "head": "MuiTableCell-head",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                  "paddingNone": "MuiTableCell-paddingNone",
                                                                  "root": "MuiTableCell-root",
                                                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                                                }
                                                              }
                                                            >
                                                              <th
                                                                aria-sort={null}
                                                                className="MuiTableCell-root Tasks-tableCell-329 Tasks-tableHeadCell-326 MuiTableCell-head"
                                                                scope="col"
                                                              >
                                                                Status
                                                              </th>
                                                            </ForwardRef(TableCell)>
                                                          </WithStyles(ForwardRef(TableCell))>
                                                          <WithStyles(ForwardRef(TableCell))
                                                            className="Tasks-tableCell-329 Tasks-tableHeadCell-326"
                                                            key="3"
                                                          >
                                                            <ForwardRef(TableCell)
                                                              className="Tasks-tableCell-329 Tasks-tableHeadCell-326"
                                                              classes={
                                                                Object {
                                                                  "alignCenter": "MuiTableCell-alignCenter",
                                                                  "alignJustify": "MuiTableCell-alignJustify",
                                                                  "alignLeft": "MuiTableCell-alignLeft",
                                                                  "alignRight": "MuiTableCell-alignRight",
                                                                  "body": "MuiTableCell-body",
                                                                  "footer": "MuiTableCell-footer",
                                                                  "head": "MuiTableCell-head",
                                                                  "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                  "paddingNone": "MuiTableCell-paddingNone",
                                                                  "root": "MuiTableCell-root",
                                                                  "sizeSmall": "MuiTableCell-sizeSmall",
                                                                }
                                                              }
                                                            >
                                                              <th
                                                                aria-sort={null}
                                                                className="MuiTableCell-root Tasks-tableCell-329 Tasks-tableHeadCell-326 MuiTableCell-head"
                                                                scope="col"
                                                              >
                                                                Modify
                                                              </th>
                                                            </ForwardRef(TableCell)>
                                                          </WithStyles(ForwardRef(TableCell))>
                                                        </tr>
                                                      </ForwardRef(TableRow)>
                                                    </WithStyles(ForwardRef(TableRow))>
                                                  </thead>
                                                </ForwardRef(TableHead)>
                                              </WithStyles(ForwardRef(TableHead))>
                                              <WithStyles(ForwardRef(TableBody))>
                                                <ForwardRef(TableBody)
                                                  classes={
                                                    Object {
                                                      "root": "MuiTableBody-root",
                                                    }
                                                  }
                                                >
                                                  <tbody
                                                    className="MuiTableBody-root"
                                                  />
                                                </ForwardRef(TableBody)>
                                              </WithStyles(ForwardRef(TableBody))>
                                            </table>
                                          </ForwardRef(Table)>
                                        </WithStyles(ForwardRef(Table))>
                                      </Tasks>
                                    </WithStyles(Tasks)>
                                  </div>
                                </div>
                              </CardBody>
                            </WithStyles(CardBody)>
                          </div>
                        </Card>
                      </WithStyles(Card)>
                    </CustomTabs>
                  </WithStyles(CustomTabs)>
                </div>
              </ForwardRef(Grid)>
            </WithStyles(ForwardRef(Grid))>
          </GridItem>
        </WithStyles(GridItem)>
      </Questionnaire>
    </WithStyles(Questionnaire)>
  </SideQuestion>
</WithStyles(SideQuestion)>
`;

exports[`Trust and Service Form should render correctly 1`] = `
<TrustAddForm
  hasDetails={true}
>
  <form
    class="trustform"
  >
    <label
      className="label-subtitle"
      for="label"
      id="mainlabel"
    >
      Please enter the details of the NHS Trust.
    </label>
    <div
      class="form-group"
    >
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="nameinput"
        name="email"
        onChange={[Function]}
        placeholder="Name"
        type="email"
      />
    </div>
    <div
      class="form-group"
    >
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="address1input"
        name="email"
        onChange={[Function]}
        placeholder="Address Line 1"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="address2input"
        name="email"
        onChange={[Function]}
        placeholder="Address Line 2"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="postcodeinput"
        name="email"
        onChange={[Function]}
        placeholder="Postcode"
        type="email"
      />
    </div>
    <div
      class="form-group"
    >
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="descriptioninput"
        name="email"
        onChange={[Function]}
        placeholder="Description"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="websiteinput"
        name="email"
        onChange={[Function]}
        placeholder="Website link"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="emailinput"
        name="email"
        onChange={[Function]}
        placeholder="email"
        type="email"
      />
      <br />
      <input
        aria-describedby="emailHelp"
        class="form-control"
        id="telephoneinput"
        name="email"
        onChange={[Function]}
        placeholder="Telephone"
        type="email"
      />
    </div>
    <WithStyles(RegularButton)
      color="primary"
      id="loginbutton"
      onClick={[Function]}
      type="button"
    >
      <RegularButton
        classes={
          Object {
            "block": "RegularButton-block-15",
            "button": "RegularButton-button-1",
            "danger": "RegularButton-danger-8",
            "disabled": "RegularButton-disabled-11",
            "info": "RegularButton-info-5",
            "justIcon": "RegularButton-justIcon-17",
            "lg": "RegularButton-lg-12",
            "link": "RegularButton-link-16",
            "primary": "RegularButton-primary-4",
            "rose": "RegularButton-rose-3",
            "round": "RegularButton-round-14",
            "simple": "RegularButton-simple-9",
            "sm": "RegularButton-sm-13",
            "success": "RegularButton-success-6",
            "transparent": "RegularButton-transparent-10",
            "warning": "RegularButton-warning-7",
            "white": "RegularButton-white-2",
          }
        }
        color="primary"
        id="loginbutton"
        onClick={[Function]}
        type="button"
      >
        <WithStyles(ForwardRef(Button))
          className="RegularButton-button-1 RegularButton-primary-4"
          id="loginbutton"
          onClick={[Function]}
          type="button"
        >
          <ForwardRef(Button)
            className="RegularButton-button-1 RegularButton-primary-4"
            classes={
              Object {
                "colorInherit": "MuiButton-colorInherit",
                "contained": "MuiButton-contained",
                "containedPrimary": "MuiButton-containedPrimary",
                "containedSecondary": "MuiButton-containedSecondary",
                "disabled": "Mui-disabled",
                "focusVisible": "Mui-focusVisible",
                "fullWidth": "MuiButton-fullWidth",
                "label": "MuiButton-label",
                "outlined": "MuiButton-outlined",
                "outlinedPrimary": "MuiButton-outlinedPrimary",
                "outlinedSecondary": "MuiButton-outlinedSecondary",
                "root": "MuiButton-root",
                "sizeLarge": "MuiButton-sizeLarge",
                "sizeSmall": "MuiButton-sizeSmall",
                "text": "MuiButton-text",
                "textPrimary": "MuiButton-textPrimary",
                "textSecondary": "MuiButton-textSecondary",
              }
            }
            id="loginbutton"
            onClick={[Function]}
            type="button"
          >
            <WithStyles(ForwardRef(ButtonBase))
              className="MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
              component="button"
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="Mui-focusVisible"
              id="loginbutton"
              onClick={[Function]}
              type="button"
            >
              <ForwardRef(ButtonBase)
                className="MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
                classes={
                  Object {
                    "disabled": "Mui-disabled",
                    "focusVisible": "Mui-focusVisible",
                    "root": "MuiButtonBase-root",
                  }
                }
                component="button"
                disabled={false}
                focusRipple={true}
                focusVisibleClassName="Mui-focusVisible"
                id="loginbutton"
                onClick={[Function]}
                type="button"
              >
                <button
                  className="MuiButtonBase-root MuiButton-root RegularButton-button-1 RegularButton-primary-4 MuiButton-text"
                  disabled={false}
                  id="loginbutton"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  onMouseDown={[Function]}
                  onMouseLeave={[Function]}
                  onMouseUp={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  tabIndex={0}
                  type="button"
                >
                  <span
                    className="MuiButton-label"
                  >
                    Submit
                  </span>
                  <NoSsr>
                    <WithStyles(TouchRipple)
                      center={false}
                    >
                      <TouchRipple
                        center={false}
                        classes={
                          Object {
                            "child": "MuiTouchRipple-child",
                            "childLeaving": "MuiTouchRipple-childLeaving",
                            "childPulsate": "MuiTouchRipple-childPulsate",
                            "ripple": "MuiTouchRipple-ripple",
                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                            "root": "MuiTouchRipple-root",
                          }
                        }
                      >
                        <span
                          className="MuiTouchRipple-root"
                        >
                          <TransitionGroup
                            childFactory={[Function]}
                            component={null}
                            enter={true}
                            exit={true}
                          />
                        </span>
                      </TouchRipple>
                    </WithStyles(TouchRipple)>
                  </NoSsr>
                </button>
              </ForwardRef(ButtonBase)>
            </WithStyles(ForwardRef(ButtonBase))>
          </ForwardRef(Button)>
        </WithStyles(ForwardRef(Button))>
      </RegularButton>
    </WithStyles(RegularButton)>
  </form>
</TrustAddForm>
`;

exports[`User details should render correctly 1`] = `
<WithStyles(UserDetail)>
  <UserDetail
    classes={
      Object {
        "cardCategoryWhite": "UserDetail-cardCategoryWhite-48",
        "cardTitleWhite": "UserDetail-cardTitleWhite-49",
      }
    }
  >
    <div>
      <WithStyles(GridContainer)>
        <GridContainer
          classes={
            Object {
              "grid": "GridContainer-grid-50",
            }
          }
        >
          <WithStyles(ForwardRef(Grid))
            className="GridContainer-grid-50"
            container={true}
          >
            <ForwardRef(Grid)
              className="GridContainer-grid-50"
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-xs-center": "MuiGrid-justify-xs-center",
                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              container={true}
            >
              <div
                className="MuiGrid-root GridContainer-grid-50 MuiGrid-container"
              >
                <WithStyles(GridItem)
                  md={10}
                  sm={12}
                  xs={12}
                >
                  <GridItem
                    classes={
                      Object {
                        "grid": "GridItem-grid-154",
                      }
                    }
                    md={10}
                    sm={12}
                    xs={12}
                  >
                    <WithStyles(ForwardRef(Grid))
                      className="GridItem-grid-154"
                      item={true}
                      md={10}
                      sm={12}
                      xs={12}
                    >
                      <ForwardRef(Grid)
                        className="GridItem-grid-154"
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        md={10}
                        sm={12}
                        xs={12}
                      >
                        <div
                          className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-10"
                        >
                          <WithStyles(Card)>
                            <Card
                              classes={
                                Object {
                                  "card": "Card-card-155",
                                  "cardChart": "Card-cardChart-158",
                                  "cardPlain": "Card-cardPlain-156",
                                  "cardProfile": "Card-cardProfile-157",
                                }
                              }
                            >
                              <div
                                className="Card-card-155"
                              >
                                <WithStyles(CardHeader)
                                  color="info"
                                >
                                  <CardHeader
                                    classes={
                                      Object {
                                        "blue": "CardHeader-blue-169",
                                        "cardHeader": "CardHeader-cardHeader-159",
                                        "cardHeaderIcon": "CardHeader-cardHeaderIcon-162",
                                        "cardHeaderPlain": "CardHeader-cardHeaderPlain-160",
                                        "cardHeaderStats": "CardHeader-cardHeaderStats-161",
                                        "dangerCardHeader": "CardHeader-dangerCardHeader-165",
                                        "infoCardHeader": "CardHeader-infoCardHeader-166",
                                        "primaryCardHeader": "CardHeader-primaryCardHeader-167",
                                        "roseCardHeader": "CardHeader-roseCardHeader-168",
                                        "successCardHeader": "CardHeader-successCardHeader-164",
                                        "warningCardHeader": "CardHeader-warningCardHeader-163",
                                      }
                                    }
                                    color="info"
                                  >
                                    <div
                                      className="CardHeader-cardHeader-159 CardHeader-infoCardHeader-166"
                                    >
                                      <h4
                                        className="UserDetail-cardTitleWhite-49"
                                      >
                                        Patient Profile
                                      </h4>
                                      <p
                                        className="UserDetail-cardCategoryWhite-48"
                                      >
                                        View the detail of Patient
                                      </p>
                                    </div>
                                  </CardHeader>
                                </WithStyles(CardHeader)>
                                <WithStyles(CardBody)>
                                  <CardBody
                                    classes={
                                      Object {
                                        "cardBody": "CardBody-cardBody-170",
                                        "cardBodyPlain": "CardBody-cardBodyPlain-171",
                                        "cardBodyProfile": "CardBody-cardBodyProfile-172",
                                      }
                                    }
                                  >
                                    <div
                                      className="CardBody-cardBody-170"
                                    >
                                      <WithStyles(GridContainer)>
                                        <GridContainer
                                          classes={
                                            Object {
                                              "grid": "GridContainer-grid-50",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(Grid))
                                            className="GridContainer-grid-50"
                                            container={true}
                                          >
                                            <ForwardRef(Grid)
                                              className="GridContainer-grid-50"
                                              classes={
                                                Object {
                                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                  "container": "MuiGrid-container",
                                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                                  "grid-md-1": "MuiGrid-grid-md-1",
                                                  "grid-md-10": "MuiGrid-grid-md-10",
                                                  "grid-md-11": "MuiGrid-grid-md-11",
                                                  "grid-md-12": "MuiGrid-grid-md-12",
                                                  "grid-md-2": "MuiGrid-grid-md-2",
                                                  "grid-md-3": "MuiGrid-grid-md-3",
                                                  "grid-md-4": "MuiGrid-grid-md-4",
                                                  "grid-md-5": "MuiGrid-grid-md-5",
                                                  "grid-md-6": "MuiGrid-grid-md-6",
                                                  "grid-md-7": "MuiGrid-grid-md-7",
                                                  "grid-md-8": "MuiGrid-grid-md-8",
                                                  "grid-md-9": "MuiGrid-grid-md-9",
                                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                                  "grid-md-true": "MuiGrid-grid-md-true",
                                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                                  "item": "MuiGrid-item",
                                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                  "root": "MuiGrid-root",
                                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                }
                                              }
                                              container={true}
                                            >
                                              <div
                                                className="MuiGrid-root GridContainer-grid-50 MuiGrid-container"
                                              >
                                                <WithStyles(GridItem)
                                                  md={6}
                                                  sm={12}
                                                  xs={12}
                                                >
                                                  <GridItem
                                                    classes={
                                                      Object {
                                                        "grid": "GridItem-grid-154",
                                                      }
                                                    }
                                                    md={6}
                                                    sm={12}
                                                    xs={12}
                                                  >
                                                    <WithStyles(ForwardRef(Grid))
                                                      className="GridItem-grid-154"
                                                      item={true}
                                                      md={6}
                                                      sm={12}
                                                      xs={12}
                                                    >
                                                      <ForwardRef(Grid)
                                                        className="GridItem-grid-154"
                                                        classes={
                                                          Object {
                                                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                            "container": "MuiGrid-container",
                                                            "direction-xs-column": "MuiGrid-direction-xs-column",
                                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                            "grid-lg-1": "MuiGrid-grid-lg-1",
                                                            "grid-lg-10": "MuiGrid-grid-lg-10",
                                                            "grid-lg-11": "MuiGrid-grid-lg-11",
                                                            "grid-lg-12": "MuiGrid-grid-lg-12",
                                                            "grid-lg-2": "MuiGrid-grid-lg-2",
                                                            "grid-lg-3": "MuiGrid-grid-lg-3",
                                                            "grid-lg-4": "MuiGrid-grid-lg-4",
                                                            "grid-lg-5": "MuiGrid-grid-lg-5",
                                                            "grid-lg-6": "MuiGrid-grid-lg-6",
                                                            "grid-lg-7": "MuiGrid-grid-lg-7",
                                                            "grid-lg-8": "MuiGrid-grid-lg-8",
                                                            "grid-lg-9": "MuiGrid-grid-lg-9",
                                                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                            "grid-lg-true": "MuiGrid-grid-lg-true",
                                                            "grid-md-1": "MuiGrid-grid-md-1",
                                                            "grid-md-10": "MuiGrid-grid-md-10",
                                                            "grid-md-11": "MuiGrid-grid-md-11",
                                                            "grid-md-12": "MuiGrid-grid-md-12",
                                                            "grid-md-2": "MuiGrid-grid-md-2",
                                                            "grid-md-3": "MuiGrid-grid-md-3",
                                                            "grid-md-4": "MuiGrid-grid-md-4",
                                                            "grid-md-5": "MuiGrid-grid-md-5",
                                                            "grid-md-6": "MuiGrid-grid-md-6",
                                                            "grid-md-7": "MuiGrid-grid-md-7",
                                                            "grid-md-8": "MuiGrid-grid-md-8",
                                                            "grid-md-9": "MuiGrid-grid-md-9",
                                                            "grid-md-auto": "MuiGrid-grid-md-auto",
                                                            "grid-md-true": "MuiGrid-grid-md-true",
                                                            "grid-sm-1": "MuiGrid-grid-sm-1",
                                                            "grid-sm-10": "MuiGrid-grid-sm-10",
                                                            "grid-sm-11": "MuiGrid-grid-sm-11",
                                                            "grid-sm-12": "MuiGrid-grid-sm-12",
                                                            "grid-sm-2": "MuiGrid-grid-sm-2",
                                                            "grid-sm-3": "MuiGrid-grid-sm-3",
                                                            "grid-sm-4": "MuiGrid-grid-sm-4",
                                                            "grid-sm-5": "MuiGrid-grid-sm-5",
                                                            "grid-sm-6": "MuiGrid-grid-sm-6",
                                                            "grid-sm-7": "MuiGrid-grid-sm-7",
                                                            "grid-sm-8": "MuiGrid-grid-sm-8",
                                                            "grid-sm-9": "MuiGrid-grid-sm-9",
                                                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                            "grid-sm-true": "MuiGrid-grid-sm-true",
                                                            "grid-xl-1": "MuiGrid-grid-xl-1",
                                                            "grid-xl-10": "MuiGrid-grid-xl-10",
                                                            "grid-xl-11": "MuiGrid-grid-xl-11",
                                                            "grid-xl-12": "MuiGrid-grid-xl-12",
                                                            "grid-xl-2": "MuiGrid-grid-xl-2",
                                                            "grid-xl-3": "MuiGrid-grid-xl-3",
                                                            "grid-xl-4": "MuiGrid-grid-xl-4",
                                                            "grid-xl-5": "MuiGrid-grid-xl-5",
                                                            "grid-xl-6": "MuiGrid-grid-xl-6",
                                                            "grid-xl-7": "MuiGrid-grid-xl-7",
                                                            "grid-xl-8": "MuiGrid-grid-xl-8",
                                                            "grid-xl-9": "MuiGrid-grid-xl-9",
                                                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                            "grid-xl-true": "MuiGrid-grid-xl-true",
                                                            "grid-xs-1": "MuiGrid-grid-xs-1",
                                                            "grid-xs-10": "MuiGrid-grid-xs-10",
                                                            "grid-xs-11": "MuiGrid-grid-xs-11",
                                                            "grid-xs-12": "MuiGrid-grid-xs-12",
                                                            "grid-xs-2": "MuiGrid-grid-xs-2",
                                                            "grid-xs-3": "MuiGrid-grid-xs-3",
                                                            "grid-xs-4": "MuiGrid-grid-xs-4",
                                                            "grid-xs-5": "MuiGrid-grid-xs-5",
                                                            "grid-xs-6": "MuiGrid-grid-xs-6",
                                                            "grid-xs-7": "MuiGrid-grid-xs-7",
                                                            "grid-xs-8": "MuiGrid-grid-xs-8",
                                                            "grid-xs-9": "MuiGrid-grid-xs-9",
                                                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                            "grid-xs-true": "MuiGrid-grid-xs-true",
                                                            "item": "MuiGrid-item",
                                                            "justify-xs-center": "MuiGrid-justify-xs-center",
                                                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                            "root": "MuiGrid-root",
                                                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                          }
                                                        }
                                                        item={true}
                                                        md={6}
                                                        sm={12}
                                                        xs={12}
                                                      >
                                                        <div
                                                          className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-6"
                                                        >
                                                          <WithStyles(ForwardRef(TextField))
                                                            InputProps={
                                                              Object {
                                                                "readOnly": true,
                                                              }
                                                            }
                                                            id="email"
                                                            label="Email"
                                                            margin="normal"
                                                            value={Array []}
                                                          >
                                                            <ForwardRef(TextField)
                                                              InputProps={
                                                                Object {
                                                                  "readOnly": true,
                                                                }
                                                              }
                                                              classes={
                                                                Object {
                                                                  "root": "MuiTextField-root",
                                                                }
                                                              }
                                                              id="email"
                                                              label="Email"
                                                              margin="normal"
                                                              value={Array []}
                                                            >
                                                              <WithStyles(ForwardRef(FormControl))
                                                                className="MuiTextField-root"
                                                                margin="normal"
                                                                required={false}
                                                                variant="standard"
                                                              >
                                                                <ForwardRef(FormControl)
                                                                  className="MuiTextField-root"
                                                                  classes={
                                                                    Object {
                                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                                      "marginDense": "MuiFormControl-marginDense",
                                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                                      "root": "MuiFormControl-root",
                                                                    }
                                                                  }
                                                                  margin="normal"
                                                                  required={false}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                                                                  >
                                                                    <WithStyles(WithFormControlContext(ForwardRef(InputLabel)))
                                                                      htmlFor="email"
                                                                    >
                                                                      <WithFormControlContext(ForwardRef(InputLabel))
                                                                        classes={
                                                                          Object {
                                                                            "animated": "MuiInputLabel-animated",
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "filled": "MuiInputLabel-filled",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInputLabel-formControl",
                                                                            "marginDense": "MuiInputLabel-marginDense",
                                                                            "outlined": "MuiInputLabel-outlined",
                                                                            "required": "Mui-required",
                                                                            "root": "MuiInputLabel-root",
                                                                            "shrink": "MuiInputLabel-shrink",
                                                                          }
                                                                        }
                                                                        htmlFor="email"
                                                                      >
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                          htmlFor="email"
                                                                          muiFormControl={
                                                                            Object {
                                                                              "adornedStart": false,
                                                                              "disabled": false,
                                                                              "error": false,
                                                                              "filled": false,
                                                                              "focused": false,
                                                                              "margin": "normal",
                                                                              "onBlur": [Function],
                                                                              "onEmpty": [Function],
                                                                              "onFilled": [Function],
                                                                              "onFocus": [Function],
                                                                              "required": false,
                                                                              "variant": "standard",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(WithFormControlContext(ForwardRef(FormLabel)))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={false}
                                                                            htmlFor="email"
                                                                          >
                                                                            <WithFormControlContext(ForwardRef(FormLabel))
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={false}
                                                                              htmlFor="email"
                                                                            >
                                                                              <ForwardRef(FormLabel)
                                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                classes={
                                                                                  Object {
                                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                                    "error": "Mui-error Mui-error",
                                                                                    "filled": "MuiFormLabel-filled",
                                                                                    "focused": "Mui-focused Mui-focused",
                                                                                    "required": "Mui-required Mui-required",
                                                                                    "root": "MuiFormLabel-root",
                                                                                  }
                                                                                }
                                                                                data-shrink={false}
                                                                                htmlFor="email"
                                                                                muiFormControl={
                                                                                  Object {
                                                                                    "adornedStart": false,
                                                                                    "disabled": false,
                                                                                    "error": false,
                                                                                    "filled": false,
                                                                                    "focused": false,
                                                                                    "margin": "normal",
                                                                                    "onBlur": [Function],
                                                                                    "onEmpty": [Function],
                                                                                    "onFilled": [Function],
                                                                                    "onFocus": [Function],
                                                                                    "required": false,
                                                                                    "variant": "standard",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <label
                                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                  data-shrink={false}
                                                                                  htmlFor="email"
                                                                                >
                                                                                  Email
                                                                                </label>
                                                                              </ForwardRef(FormLabel)>
                                                                            </WithFormControlContext(ForwardRef(FormLabel))>
                                                                          </WithStyles(WithFormControlContext(ForwardRef(FormLabel)))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithFormControlContext(ForwardRef(InputLabel))>
                                                                    </WithStyles(WithFormControlContext(ForwardRef(InputLabel)))>
                                                                    <WithStyles(ForwardRef(Input))
                                                                      id="email"
                                                                      readOnly={true}
                                                                      value={Array []}
                                                                    >
                                                                      <ForwardRef(Input)
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInput-formControl",
                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                            "input": "MuiInput-input",
                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                            "multiline": "MuiInput-multiline",
                                                                            "root": "MuiInput-root",
                                                                            "underline": "MuiInput-underline",
                                                                          }
                                                                        }
                                                                        id="email"
                                                                        readOnly={true}
                                                                        value={Array []}
                                                                      >
                                                                        <WithStyles(ForwardRef(InputBase))
                                                                          classes={
                                                                            Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root MuiInput-underline",
                                                                              "underline": null,
                                                                            }
                                                                          }
                                                                          fullWidth={false}
                                                                          id="email"
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          readOnly={true}
                                                                          type="text"
                                                                          value={Array []}
                                                                        >
                                                                          <ForwardRef(InputBase)
                                                                            classes={
                                                                              Object {
                                                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                "adornedStart": "MuiInputBase-adornedStart",
                                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                                "error": "Mui-error Mui-error",
                                                                                "focused": "Mui-focused Mui-focused",
                                                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                "input": "MuiInputBase-input MuiInput-input",
                                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInputBase-marginDense",
                                                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                              }
                                                                            }
                                                                            fullWidth={false}
                                                                            id="email"
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            readOnly={true}
                                                                            type="text"
                                                                            value={Array []}
                                                                          >
                                                                            <div
                                                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                              onClick={[Function]}
                                                                            >
                                                                              <input
                                                                                aria-invalid={false}
                                                                                className="MuiInputBase-input MuiInput-input"
                                                                                disabled={false}
                                                                                id="email"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                readOnly={true}
                                                                                required={false}
                                                                                type="text"
                                                                                value={Array []}
                                                                              />
                                                                            </div>
                                                                          </ForwardRef(InputBase)>
                                                                        </WithStyles(ForwardRef(InputBase))>
                                                                      </ForwardRef(Input)>
                                                                    </WithStyles(ForwardRef(Input))>
                                                                  </div>
                                                                </ForwardRef(FormControl)>
                                                              </WithStyles(ForwardRef(FormControl))>
                                                            </ForwardRef(TextField)>
                                                          </WithStyles(ForwardRef(TextField))>
                                                        </div>
                                                      </ForwardRef(Grid)>
                                                    </WithStyles(ForwardRef(Grid))>
                                                  </GridItem>
                                                </WithStyles(GridItem)>
                                              </div>
                                            </ForwardRef(Grid)>
                                          </WithStyles(ForwardRef(Grid))>
                                        </GridContainer>
                                      </WithStyles(GridContainer)>
                                      <WithStyles(GridContainer)>
                                        <GridContainer
                                          classes={
                                            Object {
                                              "grid": "GridContainer-grid-50",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(Grid))
                                            className="GridContainer-grid-50"
                                            container={true}
                                          >
                                            <ForwardRef(Grid)
                                              className="GridContainer-grid-50"
                                              classes={
                                                Object {
                                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                  "container": "MuiGrid-container",
                                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                                  "grid-md-1": "MuiGrid-grid-md-1",
                                                  "grid-md-10": "MuiGrid-grid-md-10",
                                                  "grid-md-11": "MuiGrid-grid-md-11",
                                                  "grid-md-12": "MuiGrid-grid-md-12",
                                                  "grid-md-2": "MuiGrid-grid-md-2",
                                                  "grid-md-3": "MuiGrid-grid-md-3",
                                                  "grid-md-4": "MuiGrid-grid-md-4",
                                                  "grid-md-5": "MuiGrid-grid-md-5",
                                                  "grid-md-6": "MuiGrid-grid-md-6",
                                                  "grid-md-7": "MuiGrid-grid-md-7",
                                                  "grid-md-8": "MuiGrid-grid-md-8",
                                                  "grid-md-9": "MuiGrid-grid-md-9",
                                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                                  "grid-md-true": "MuiGrid-grid-md-true",
                                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                                  "item": "MuiGrid-item",
                                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                  "root": "MuiGrid-root",
                                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                }
                                              }
                                              container={true}
                                            >
                                              <div
                                                className="MuiGrid-root GridContainer-grid-50 MuiGrid-container"
                                              >
                                                <WithStyles(GridItem)
                                                  md={4}
                                                  sm={12}
                                                  xs={12}
                                                >
                                                  <GridItem
                                                    classes={
                                                      Object {
                                                        "grid": "GridItem-grid-154",
                                                      }
                                                    }
                                                    md={4}
                                                    sm={12}
                                                    xs={12}
                                                  >
                                                    <WithStyles(ForwardRef(Grid))
                                                      className="GridItem-grid-154"
                                                      item={true}
                                                      md={4}
                                                      sm={12}
                                                      xs={12}
                                                    >
                                                      <ForwardRef(Grid)
                                                        className="GridItem-grid-154"
                                                        classes={
                                                          Object {
                                                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                            "container": "MuiGrid-container",
                                                            "direction-xs-column": "MuiGrid-direction-xs-column",
                                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                            "grid-lg-1": "MuiGrid-grid-lg-1",
                                                            "grid-lg-10": "MuiGrid-grid-lg-10",
                                                            "grid-lg-11": "MuiGrid-grid-lg-11",
                                                            "grid-lg-12": "MuiGrid-grid-lg-12",
                                                            "grid-lg-2": "MuiGrid-grid-lg-2",
                                                            "grid-lg-3": "MuiGrid-grid-lg-3",
                                                            "grid-lg-4": "MuiGrid-grid-lg-4",
                                                            "grid-lg-5": "MuiGrid-grid-lg-5",
                                                            "grid-lg-6": "MuiGrid-grid-lg-6",
                                                            "grid-lg-7": "MuiGrid-grid-lg-7",
                                                            "grid-lg-8": "MuiGrid-grid-lg-8",
                                                            "grid-lg-9": "MuiGrid-grid-lg-9",
                                                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                            "grid-lg-true": "MuiGrid-grid-lg-true",
                                                            "grid-md-1": "MuiGrid-grid-md-1",
                                                            "grid-md-10": "MuiGrid-grid-md-10",
                                                            "grid-md-11": "MuiGrid-grid-md-11",
                                                            "grid-md-12": "MuiGrid-grid-md-12",
                                                            "grid-md-2": "MuiGrid-grid-md-2",
                                                            "grid-md-3": "MuiGrid-grid-md-3",
                                                            "grid-md-4": "MuiGrid-grid-md-4",
                                                            "grid-md-5": "MuiGrid-grid-md-5",
                                                            "grid-md-6": "MuiGrid-grid-md-6",
                                                            "grid-md-7": "MuiGrid-grid-md-7",
                                                            "grid-md-8": "MuiGrid-grid-md-8",
                                                            "grid-md-9": "MuiGrid-grid-md-9",
                                                            "grid-md-auto": "MuiGrid-grid-md-auto",
                                                            "grid-md-true": "MuiGrid-grid-md-true",
                                                            "grid-sm-1": "MuiGrid-grid-sm-1",
                                                            "grid-sm-10": "MuiGrid-grid-sm-10",
                                                            "grid-sm-11": "MuiGrid-grid-sm-11",
                                                            "grid-sm-12": "MuiGrid-grid-sm-12",
                                                            "grid-sm-2": "MuiGrid-grid-sm-2",
                                                            "grid-sm-3": "MuiGrid-grid-sm-3",
                                                            "grid-sm-4": "MuiGrid-grid-sm-4",
                                                            "grid-sm-5": "MuiGrid-grid-sm-5",
                                                            "grid-sm-6": "MuiGrid-grid-sm-6",
                                                            "grid-sm-7": "MuiGrid-grid-sm-7",
                                                            "grid-sm-8": "MuiGrid-grid-sm-8",
                                                            "grid-sm-9": "MuiGrid-grid-sm-9",
                                                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                            "grid-sm-true": "MuiGrid-grid-sm-true",
                                                            "grid-xl-1": "MuiGrid-grid-xl-1",
                                                            "grid-xl-10": "MuiGrid-grid-xl-10",
                                                            "grid-xl-11": "MuiGrid-grid-xl-11",
                                                            "grid-xl-12": "MuiGrid-grid-xl-12",
                                                            "grid-xl-2": "MuiGrid-grid-xl-2",
                                                            "grid-xl-3": "MuiGrid-grid-xl-3",
                                                            "grid-xl-4": "MuiGrid-grid-xl-4",
                                                            "grid-xl-5": "MuiGrid-grid-xl-5",
                                                            "grid-xl-6": "MuiGrid-grid-xl-6",
                                                            "grid-xl-7": "MuiGrid-grid-xl-7",
                                                            "grid-xl-8": "MuiGrid-grid-xl-8",
                                                            "grid-xl-9": "MuiGrid-grid-xl-9",
                                                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                            "grid-xl-true": "MuiGrid-grid-xl-true",
                                                            "grid-xs-1": "MuiGrid-grid-xs-1",
                                                            "grid-xs-10": "MuiGrid-grid-xs-10",
                                                            "grid-xs-11": "MuiGrid-grid-xs-11",
                                                            "grid-xs-12": "MuiGrid-grid-xs-12",
                                                            "grid-xs-2": "MuiGrid-grid-xs-2",
                                                            "grid-xs-3": "MuiGrid-grid-xs-3",
                                                            "grid-xs-4": "MuiGrid-grid-xs-4",
                                                            "grid-xs-5": "MuiGrid-grid-xs-5",
                                                            "grid-xs-6": "MuiGrid-grid-xs-6",
                                                            "grid-xs-7": "MuiGrid-grid-xs-7",
                                                            "grid-xs-8": "MuiGrid-grid-xs-8",
                                                            "grid-xs-9": "MuiGrid-grid-xs-9",
                                                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                            "grid-xs-true": "MuiGrid-grid-xs-true",
                                                            "item": "MuiGrid-item",
                                                            "justify-xs-center": "MuiGrid-justify-xs-center",
                                                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                            "root": "MuiGrid-root",
                                                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                          }
                                                        }
                                                        item={true}
                                                        md={4}
                                                        sm={12}
                                                        xs={12}
                                                      >
                                                        <div
                                                          className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-4"
                                                        >
                                                          <WithStyles(ForwardRef(TextField))
                                                            InputProps={
                                                              Object {
                                                                "readOnly": true,
                                                              }
                                                            }
                                                            id="firstname"
                                                            label="First Name"
                                                            margin="normal"
                                                            value={Array []}
                                                          >
                                                            <ForwardRef(TextField)
                                                              InputProps={
                                                                Object {
                                                                  "readOnly": true,
                                                                }
                                                              }
                                                              classes={
                                                                Object {
                                                                  "root": "MuiTextField-root",
                                                                }
                                                              }
                                                              id="firstname"
                                                              label="First Name"
                                                              margin="normal"
                                                              value={Array []}
                                                            >
                                                              <WithStyles(ForwardRef(FormControl))
                                                                className="MuiTextField-root"
                                                                margin="normal"
                                                                required={false}
                                                                variant="standard"
                                                              >
                                                                <ForwardRef(FormControl)
                                                                  className="MuiTextField-root"
                                                                  classes={
                                                                    Object {
                                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                                      "marginDense": "MuiFormControl-marginDense",
                                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                                      "root": "MuiFormControl-root",
                                                                    }
                                                                  }
                                                                  margin="normal"
                                                                  required={false}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                                                                  >
                                                                    <WithStyles(WithFormControlContext(ForwardRef(InputLabel)))
                                                                      htmlFor="firstname"
                                                                    >
                                                                      <WithFormControlContext(ForwardRef(InputLabel))
                                                                        classes={
                                                                          Object {
                                                                            "animated": "MuiInputLabel-animated",
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "filled": "MuiInputLabel-filled",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInputLabel-formControl",
                                                                            "marginDense": "MuiInputLabel-marginDense",
                                                                            "outlined": "MuiInputLabel-outlined",
                                                                            "required": "Mui-required",
                                                                            "root": "MuiInputLabel-root",
                                                                            "shrink": "MuiInputLabel-shrink",
                                                                          }
                                                                        }
                                                                        htmlFor="firstname"
                                                                      >
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                          htmlFor="firstname"
                                                                          muiFormControl={
                                                                            Object {
                                                                              "adornedStart": false,
                                                                              "disabled": false,
                                                                              "error": false,
                                                                              "filled": false,
                                                                              "focused": false,
                                                                              "margin": "normal",
                                                                              "onBlur": [Function],
                                                                              "onEmpty": [Function],
                                                                              "onFilled": [Function],
                                                                              "onFocus": [Function],
                                                                              "required": false,
                                                                              "variant": "standard",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(WithFormControlContext(ForwardRef(FormLabel)))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={false}
                                                                            htmlFor="firstname"
                                                                          >
                                                                            <WithFormControlContext(ForwardRef(FormLabel))
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={false}
                                                                              htmlFor="firstname"
                                                                            >
                                                                              <ForwardRef(FormLabel)
                                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                classes={
                                                                                  Object {
                                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                                    "error": "Mui-error Mui-error",
                                                                                    "filled": "MuiFormLabel-filled",
                                                                                    "focused": "Mui-focused Mui-focused",
                                                                                    "required": "Mui-required Mui-required",
                                                                                    "root": "MuiFormLabel-root",
                                                                                  }
                                                                                }
                                                                                data-shrink={false}
                                                                                htmlFor="firstname"
                                                                                muiFormControl={
                                                                                  Object {
                                                                                    "adornedStart": false,
                                                                                    "disabled": false,
                                                                                    "error": false,
                                                                                    "filled": false,
                                                                                    "focused": false,
                                                                                    "margin": "normal",
                                                                                    "onBlur": [Function],
                                                                                    "onEmpty": [Function],
                                                                                    "onFilled": [Function],
                                                                                    "onFocus": [Function],
                                                                                    "required": false,
                                                                                    "variant": "standard",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <label
                                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                  data-shrink={false}
                                                                                  htmlFor="firstname"
                                                                                >
                                                                                  First Name
                                                                                </label>
                                                                              </ForwardRef(FormLabel)>
                                                                            </WithFormControlContext(ForwardRef(FormLabel))>
                                                                          </WithStyles(WithFormControlContext(ForwardRef(FormLabel)))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithFormControlContext(ForwardRef(InputLabel))>
                                                                    </WithStyles(WithFormControlContext(ForwardRef(InputLabel)))>
                                                                    <WithStyles(ForwardRef(Input))
                                                                      id="firstname"
                                                                      readOnly={true}
                                                                      value={Array []}
                                                                    >
                                                                      <ForwardRef(Input)
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInput-formControl",
                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                            "input": "MuiInput-input",
                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                            "multiline": "MuiInput-multiline",
                                                                            "root": "MuiInput-root",
                                                                            "underline": "MuiInput-underline",
                                                                          }
                                                                        }
                                                                        id="firstname"
                                                                        readOnly={true}
                                                                        value={Array []}
                                                                      >
                                                                        <WithStyles(ForwardRef(InputBase))
                                                                          classes={
                                                                            Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root MuiInput-underline",
                                                                              "underline": null,
                                                                            }
                                                                          }
                                                                          fullWidth={false}
                                                                          id="firstname"
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          readOnly={true}
                                                                          type="text"
                                                                          value={Array []}
                                                                        >
                                                                          <ForwardRef(InputBase)
                                                                            classes={
                                                                              Object {
                                                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                "adornedStart": "MuiInputBase-adornedStart",
                                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                                "error": "Mui-error Mui-error",
                                                                                "focused": "Mui-focused Mui-focused",
                                                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                "input": "MuiInputBase-input MuiInput-input",
                                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInputBase-marginDense",
                                                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                              }
                                                                            }
                                                                            fullWidth={false}
                                                                            id="firstname"
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            readOnly={true}
                                                                            type="text"
                                                                            value={Array []}
                                                                          >
                                                                            <div
                                                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                              onClick={[Function]}
                                                                            >
                                                                              <input
                                                                                aria-invalid={false}
                                                                                className="MuiInputBase-input MuiInput-input"
                                                                                disabled={false}
                                                                                id="firstname"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                readOnly={true}
                                                                                required={false}
                                                                                type="text"
                                                                                value={Array []}
                                                                              />
                                                                            </div>
                                                                          </ForwardRef(InputBase)>
                                                                        </WithStyles(ForwardRef(InputBase))>
                                                                      </ForwardRef(Input)>
                                                                    </WithStyles(ForwardRef(Input))>
                                                                  </div>
                                                                </ForwardRef(FormControl)>
                                                              </WithStyles(ForwardRef(FormControl))>
                                                            </ForwardRef(TextField)>
                                                          </WithStyles(ForwardRef(TextField))>
                                                        </div>
                                                      </ForwardRef(Grid)>
                                                    </WithStyles(ForwardRef(Grid))>
                                                  </GridItem>
                                                </WithStyles(GridItem)>
                                                <WithStyles(GridItem)
                                                  md={4}
                                                  sm={12}
                                                  xs={12}
                                                >
                                                  <GridItem
                                                    classes={
                                                      Object {
                                                        "grid": "GridItem-grid-154",
                                                      }
                                                    }
                                                    md={4}
                                                    sm={12}
                                                    xs={12}
                                                  >
                                                    <WithStyles(ForwardRef(Grid))
                                                      className="GridItem-grid-154"
                                                      item={true}
                                                      md={4}
                                                      sm={12}
                                                      xs={12}
                                                    >
                                                      <ForwardRef(Grid)
                                                        className="GridItem-grid-154"
                                                        classes={
                                                          Object {
                                                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                            "container": "MuiGrid-container",
                                                            "direction-xs-column": "MuiGrid-direction-xs-column",
                                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                            "grid-lg-1": "MuiGrid-grid-lg-1",
                                                            "grid-lg-10": "MuiGrid-grid-lg-10",
                                                            "grid-lg-11": "MuiGrid-grid-lg-11",
                                                            "grid-lg-12": "MuiGrid-grid-lg-12",
                                                            "grid-lg-2": "MuiGrid-grid-lg-2",
                                                            "grid-lg-3": "MuiGrid-grid-lg-3",
                                                            "grid-lg-4": "MuiGrid-grid-lg-4",
                                                            "grid-lg-5": "MuiGrid-grid-lg-5",
                                                            "grid-lg-6": "MuiGrid-grid-lg-6",
                                                            "grid-lg-7": "MuiGrid-grid-lg-7",
                                                            "grid-lg-8": "MuiGrid-grid-lg-8",
                                                            "grid-lg-9": "MuiGrid-grid-lg-9",
                                                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                            "grid-lg-true": "MuiGrid-grid-lg-true",
                                                            "grid-md-1": "MuiGrid-grid-md-1",
                                                            "grid-md-10": "MuiGrid-grid-md-10",
                                                            "grid-md-11": "MuiGrid-grid-md-11",
                                                            "grid-md-12": "MuiGrid-grid-md-12",
                                                            "grid-md-2": "MuiGrid-grid-md-2",
                                                            "grid-md-3": "MuiGrid-grid-md-3",
                                                            "grid-md-4": "MuiGrid-grid-md-4",
                                                            "grid-md-5": "MuiGrid-grid-md-5",
                                                            "grid-md-6": "MuiGrid-grid-md-6",
                                                            "grid-md-7": "MuiGrid-grid-md-7",
                                                            "grid-md-8": "MuiGrid-grid-md-8",
                                                            "grid-md-9": "MuiGrid-grid-md-9",
                                                            "grid-md-auto": "MuiGrid-grid-md-auto",
                                                            "grid-md-true": "MuiGrid-grid-md-true",
                                                            "grid-sm-1": "MuiGrid-grid-sm-1",
                                                            "grid-sm-10": "MuiGrid-grid-sm-10",
                                                            "grid-sm-11": "MuiGrid-grid-sm-11",
                                                            "grid-sm-12": "MuiGrid-grid-sm-12",
                                                            "grid-sm-2": "MuiGrid-grid-sm-2",
                                                            "grid-sm-3": "MuiGrid-grid-sm-3",
                                                            "grid-sm-4": "MuiGrid-grid-sm-4",
                                                            "grid-sm-5": "MuiGrid-grid-sm-5",
                                                            "grid-sm-6": "MuiGrid-grid-sm-6",
                                                            "grid-sm-7": "MuiGrid-grid-sm-7",
                                                            "grid-sm-8": "MuiGrid-grid-sm-8",
                                                            "grid-sm-9": "MuiGrid-grid-sm-9",
                                                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                            "grid-sm-true": "MuiGrid-grid-sm-true",
                                                            "grid-xl-1": "MuiGrid-grid-xl-1",
                                                            "grid-xl-10": "MuiGrid-grid-xl-10",
                                                            "grid-xl-11": "MuiGrid-grid-xl-11",
                                                            "grid-xl-12": "MuiGrid-grid-xl-12",
                                                            "grid-xl-2": "MuiGrid-grid-xl-2",
                                                            "grid-xl-3": "MuiGrid-grid-xl-3",
                                                            "grid-xl-4": "MuiGrid-grid-xl-4",
                                                            "grid-xl-5": "MuiGrid-grid-xl-5",
                                                            "grid-xl-6": "MuiGrid-grid-xl-6",
                                                            "grid-xl-7": "MuiGrid-grid-xl-7",
                                                            "grid-xl-8": "MuiGrid-grid-xl-8",
                                                            "grid-xl-9": "MuiGrid-grid-xl-9",
                                                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                            "grid-xl-true": "MuiGrid-grid-xl-true",
                                                            "grid-xs-1": "MuiGrid-grid-xs-1",
                                                            "grid-xs-10": "MuiGrid-grid-xs-10",
                                                            "grid-xs-11": "MuiGrid-grid-xs-11",
                                                            "grid-xs-12": "MuiGrid-grid-xs-12",
                                                            "grid-xs-2": "MuiGrid-grid-xs-2",
                                                            "grid-xs-3": "MuiGrid-grid-xs-3",
                                                            "grid-xs-4": "MuiGrid-grid-xs-4",
                                                            "grid-xs-5": "MuiGrid-grid-xs-5",
                                                            "grid-xs-6": "MuiGrid-grid-xs-6",
                                                            "grid-xs-7": "MuiGrid-grid-xs-7",
                                                            "grid-xs-8": "MuiGrid-grid-xs-8",
                                                            "grid-xs-9": "MuiGrid-grid-xs-9",
                                                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                            "grid-xs-true": "MuiGrid-grid-xs-true",
                                                            "item": "MuiGrid-item",
                                                            "justify-xs-center": "MuiGrid-justify-xs-center",
                                                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                            "root": "MuiGrid-root",
                                                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                          }
                                                        }
                                                        item={true}
                                                        md={4}
                                                        sm={12}
                                                        xs={12}
                                                      >
                                                        <div
                                                          className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-4"
                                                        >
                                                          <WithStyles(ForwardRef(TextField))
                                                            InputProps={
                                                              Object {
                                                                "readOnly": true,
                                                              }
                                                            }
                                                            id="lastname"
                                                            label="Last Name"
                                                            margin="normal"
                                                            value={Array []}
                                                          >
                                                            <ForwardRef(TextField)
                                                              InputProps={
                                                                Object {
                                                                  "readOnly": true,
                                                                }
                                                              }
                                                              classes={
                                                                Object {
                                                                  "root": "MuiTextField-root",
                                                                }
                                                              }
                                                              id="lastname"
                                                              label="Last Name"
                                                              margin="normal"
                                                              value={Array []}
                                                            >
                                                              <WithStyles(ForwardRef(FormControl))
                                                                className="MuiTextField-root"
                                                                margin="normal"
                                                                required={false}
                                                                variant="standard"
                                                              >
                                                                <ForwardRef(FormControl)
                                                                  className="MuiTextField-root"
                                                                  classes={
                                                                    Object {
                                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                                      "marginDense": "MuiFormControl-marginDense",
                                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                                      "root": "MuiFormControl-root",
                                                                    }
                                                                  }
                                                                  margin="normal"
                                                                  required={false}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                                                                  >
                                                                    <WithStyles(WithFormControlContext(ForwardRef(InputLabel)))
                                                                      htmlFor="lastname"
                                                                    >
                                                                      <WithFormControlContext(ForwardRef(InputLabel))
                                                                        classes={
                                                                          Object {
                                                                            "animated": "MuiInputLabel-animated",
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "filled": "MuiInputLabel-filled",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInputLabel-formControl",
                                                                            "marginDense": "MuiInputLabel-marginDense",
                                                                            "outlined": "MuiInputLabel-outlined",
                                                                            "required": "Mui-required",
                                                                            "root": "MuiInputLabel-root",
                                                                            "shrink": "MuiInputLabel-shrink",
                                                                          }
                                                                        }
                                                                        htmlFor="lastname"
                                                                      >
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                          htmlFor="lastname"
                                                                          muiFormControl={
                                                                            Object {
                                                                              "adornedStart": false,
                                                                              "disabled": false,
                                                                              "error": false,
                                                                              "filled": false,
                                                                              "focused": false,
                                                                              "margin": "normal",
                                                                              "onBlur": [Function],
                                                                              "onEmpty": [Function],
                                                                              "onFilled": [Function],
                                                                              "onFocus": [Function],
                                                                              "required": false,
                                                                              "variant": "standard",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(WithFormControlContext(ForwardRef(FormLabel)))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={false}
                                                                            htmlFor="lastname"
                                                                          >
                                                                            <WithFormControlContext(ForwardRef(FormLabel))
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={false}
                                                                              htmlFor="lastname"
                                                                            >
                                                                              <ForwardRef(FormLabel)
                                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                classes={
                                                                                  Object {
                                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                                    "error": "Mui-error Mui-error",
                                                                                    "filled": "MuiFormLabel-filled",
                                                                                    "focused": "Mui-focused Mui-focused",
                                                                                    "required": "Mui-required Mui-required",
                                                                                    "root": "MuiFormLabel-root",
                                                                                  }
                                                                                }
                                                                                data-shrink={false}
                                                                                htmlFor="lastname"
                                                                                muiFormControl={
                                                                                  Object {
                                                                                    "adornedStart": false,
                                                                                    "disabled": false,
                                                                                    "error": false,
                                                                                    "filled": false,
                                                                                    "focused": false,
                                                                                    "margin": "normal",
                                                                                    "onBlur": [Function],
                                                                                    "onEmpty": [Function],
                                                                                    "onFilled": [Function],
                                                                                    "onFocus": [Function],
                                                                                    "required": false,
                                                                                    "variant": "standard",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <label
                                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                  data-shrink={false}
                                                                                  htmlFor="lastname"
                                                                                >
                                                                                  Last Name
                                                                                </label>
                                                                              </ForwardRef(FormLabel)>
                                                                            </WithFormControlContext(ForwardRef(FormLabel))>
                                                                          </WithStyles(WithFormControlContext(ForwardRef(FormLabel)))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithFormControlContext(ForwardRef(InputLabel))>
                                                                    </WithStyles(WithFormControlContext(ForwardRef(InputLabel)))>
                                                                    <WithStyles(ForwardRef(Input))
                                                                      id="lastname"
                                                                      readOnly={true}
                                                                      value={Array []}
                                                                    >
                                                                      <ForwardRef(Input)
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInput-formControl",
                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                            "input": "MuiInput-input",
                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                            "multiline": "MuiInput-multiline",
                                                                            "root": "MuiInput-root",
                                                                            "underline": "MuiInput-underline",
                                                                          }
                                                                        }
                                                                        id="lastname"
                                                                        readOnly={true}
                                                                        value={Array []}
                                                                      >
                                                                        <WithStyles(ForwardRef(InputBase))
                                                                          classes={
                                                                            Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root MuiInput-underline",
                                                                              "underline": null,
                                                                            }
                                                                          }
                                                                          fullWidth={false}
                                                                          id="lastname"
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          readOnly={true}
                                                                          type="text"
                                                                          value={Array []}
                                                                        >
                                                                          <ForwardRef(InputBase)
                                                                            classes={
                                                                              Object {
                                                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                "adornedStart": "MuiInputBase-adornedStart",
                                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                                "error": "Mui-error Mui-error",
                                                                                "focused": "Mui-focused Mui-focused",
                                                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                "input": "MuiInputBase-input MuiInput-input",
                                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInputBase-marginDense",
                                                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                              }
                                                                            }
                                                                            fullWidth={false}
                                                                            id="lastname"
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            readOnly={true}
                                                                            type="text"
                                                                            value={Array []}
                                                                          >
                                                                            <div
                                                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                              onClick={[Function]}
                                                                            >
                                                                              <input
                                                                                aria-invalid={false}
                                                                                className="MuiInputBase-input MuiInput-input"
                                                                                disabled={false}
                                                                                id="lastname"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                readOnly={true}
                                                                                required={false}
                                                                                type="text"
                                                                                value={Array []}
                                                                              />
                                                                            </div>
                                                                          </ForwardRef(InputBase)>
                                                                        </WithStyles(ForwardRef(InputBase))>
                                                                      </ForwardRef(Input)>
                                                                    </WithStyles(ForwardRef(Input))>
                                                                  </div>
                                                                </ForwardRef(FormControl)>
                                                              </WithStyles(ForwardRef(FormControl))>
                                                            </ForwardRef(TextField)>
                                                          </WithStyles(ForwardRef(TextField))>
                                                        </div>
                                                      </ForwardRef(Grid)>
                                                    </WithStyles(ForwardRef(Grid))>
                                                  </GridItem>
                                                </WithStyles(GridItem)>
                                                <WithStyles(GridItem)
                                                  md={4}
                                                  sm={12}
                                                  xs={12}
                                                >
                                                  <GridItem
                                                    classes={
                                                      Object {
                                                        "grid": "GridItem-grid-154",
                                                      }
                                                    }
                                                    md={4}
                                                    sm={12}
                                                    xs={12}
                                                  >
                                                    <WithStyles(ForwardRef(Grid))
                                                      className="GridItem-grid-154"
                                                      item={true}
                                                      md={4}
                                                      sm={12}
                                                      xs={12}
                                                    >
                                                      <ForwardRef(Grid)
                                                        className="GridItem-grid-154"
                                                        classes={
                                                          Object {
                                                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                            "container": "MuiGrid-container",
                                                            "direction-xs-column": "MuiGrid-direction-xs-column",
                                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                            "grid-lg-1": "MuiGrid-grid-lg-1",
                                                            "grid-lg-10": "MuiGrid-grid-lg-10",
                                                            "grid-lg-11": "MuiGrid-grid-lg-11",
                                                            "grid-lg-12": "MuiGrid-grid-lg-12",
                                                            "grid-lg-2": "MuiGrid-grid-lg-2",
                                                            "grid-lg-3": "MuiGrid-grid-lg-3",
                                                            "grid-lg-4": "MuiGrid-grid-lg-4",
                                                            "grid-lg-5": "MuiGrid-grid-lg-5",
                                                            "grid-lg-6": "MuiGrid-grid-lg-6",
                                                            "grid-lg-7": "MuiGrid-grid-lg-7",
                                                            "grid-lg-8": "MuiGrid-grid-lg-8",
                                                            "grid-lg-9": "MuiGrid-grid-lg-9",
                                                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                            "grid-lg-true": "MuiGrid-grid-lg-true",
                                                            "grid-md-1": "MuiGrid-grid-md-1",
                                                            "grid-md-10": "MuiGrid-grid-md-10",
                                                            "grid-md-11": "MuiGrid-grid-md-11",
                                                            "grid-md-12": "MuiGrid-grid-md-12",
                                                            "grid-md-2": "MuiGrid-grid-md-2",
                                                            "grid-md-3": "MuiGrid-grid-md-3",
                                                            "grid-md-4": "MuiGrid-grid-md-4",
                                                            "grid-md-5": "MuiGrid-grid-md-5",
                                                            "grid-md-6": "MuiGrid-grid-md-6",
                                                            "grid-md-7": "MuiGrid-grid-md-7",
                                                            "grid-md-8": "MuiGrid-grid-md-8",
                                                            "grid-md-9": "MuiGrid-grid-md-9",
                                                            "grid-md-auto": "MuiGrid-grid-md-auto",
                                                            "grid-md-true": "MuiGrid-grid-md-true",
                                                            "grid-sm-1": "MuiGrid-grid-sm-1",
                                                            "grid-sm-10": "MuiGrid-grid-sm-10",
                                                            "grid-sm-11": "MuiGrid-grid-sm-11",
                                                            "grid-sm-12": "MuiGrid-grid-sm-12",
                                                            "grid-sm-2": "MuiGrid-grid-sm-2",
                                                            "grid-sm-3": "MuiGrid-grid-sm-3",
                                                            "grid-sm-4": "MuiGrid-grid-sm-4",
                                                            "grid-sm-5": "MuiGrid-grid-sm-5",
                                                            "grid-sm-6": "MuiGrid-grid-sm-6",
                                                            "grid-sm-7": "MuiGrid-grid-sm-7",
                                                            "grid-sm-8": "MuiGrid-grid-sm-8",
                                                            "grid-sm-9": "MuiGrid-grid-sm-9",
                                                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                            "grid-sm-true": "MuiGrid-grid-sm-true",
                                                            "grid-xl-1": "MuiGrid-grid-xl-1",
                                                            "grid-xl-10": "MuiGrid-grid-xl-10",
                                                            "grid-xl-11": "MuiGrid-grid-xl-11",
                                                            "grid-xl-12": "MuiGrid-grid-xl-12",
                                                            "grid-xl-2": "MuiGrid-grid-xl-2",
                                                            "grid-xl-3": "MuiGrid-grid-xl-3",
                                                            "grid-xl-4": "MuiGrid-grid-xl-4",
                                                            "grid-xl-5": "MuiGrid-grid-xl-5",
                                                            "grid-xl-6": "MuiGrid-grid-xl-6",
                                                            "grid-xl-7": "MuiGrid-grid-xl-7",
                                                            "grid-xl-8": "MuiGrid-grid-xl-8",
                                                            "grid-xl-9": "MuiGrid-grid-xl-9",
                                                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                            "grid-xl-true": "MuiGrid-grid-xl-true",
                                                            "grid-xs-1": "MuiGrid-grid-xs-1",
                                                            "grid-xs-10": "MuiGrid-grid-xs-10",
                                                            "grid-xs-11": "MuiGrid-grid-xs-11",
                                                            "grid-xs-12": "MuiGrid-grid-xs-12",
                                                            "grid-xs-2": "MuiGrid-grid-xs-2",
                                                            "grid-xs-3": "MuiGrid-grid-xs-3",
                                                            "grid-xs-4": "MuiGrid-grid-xs-4",
                                                            "grid-xs-5": "MuiGrid-grid-xs-5",
                                                            "grid-xs-6": "MuiGrid-grid-xs-6",
                                                            "grid-xs-7": "MuiGrid-grid-xs-7",
                                                            "grid-xs-8": "MuiGrid-grid-xs-8",
                                                            "grid-xs-9": "MuiGrid-grid-xs-9",
                                                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                            "grid-xs-true": "MuiGrid-grid-xs-true",
                                                            "item": "MuiGrid-item",
                                                            "justify-xs-center": "MuiGrid-justify-xs-center",
                                                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                            "root": "MuiGrid-root",
                                                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                          }
                                                        }
                                                        item={true}
                                                        md={4}
                                                        sm={12}
                                                        xs={12}
                                                      >
                                                        <div
                                                          className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-4"
                                                        >
                                                          <WithStyles(ForwardRef(TextField))
                                                            InputProps={
                                                              Object {
                                                                "readOnly": true,
                                                              }
                                                            }
                                                            id="post"
                                                            label="Post Code"
                                                            margin="normal"
                                                            value={Array []}
                                                          >
                                                            <ForwardRef(TextField)
                                                              InputProps={
                                                                Object {
                                                                  "readOnly": true,
                                                                }
                                                              }
                                                              classes={
                                                                Object {
                                                                  "root": "MuiTextField-root",
                                                                }
                                                              }
                                                              id="post"
                                                              label="Post Code"
                                                              margin="normal"
                                                              value={Array []}
                                                            >
                                                              <WithStyles(ForwardRef(FormControl))
                                                                className="MuiTextField-root"
                                                                margin="normal"
                                                                required={false}
                                                                variant="standard"
                                                              >
                                                                <ForwardRef(FormControl)
                                                                  className="MuiTextField-root"
                                                                  classes={
                                                                    Object {
                                                                      "fullWidth": "MuiFormControl-fullWidth",
                                                                      "marginDense": "MuiFormControl-marginDense",
                                                                      "marginNormal": "MuiFormControl-marginNormal",
                                                                      "root": "MuiFormControl-root",
                                                                    }
                                                                  }
                                                                  margin="normal"
                                                                  required={false}
                                                                  variant="standard"
                                                                >
                                                                  <div
                                                                    className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal"
                                                                  >
                                                                    <WithStyles(WithFormControlContext(ForwardRef(InputLabel)))
                                                                      htmlFor="post"
                                                                    >
                                                                      <WithFormControlContext(ForwardRef(InputLabel))
                                                                        classes={
                                                                          Object {
                                                                            "animated": "MuiInputLabel-animated",
                                                                            "asterisk": "MuiInputLabel-asterisk",
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "filled": "MuiInputLabel-filled",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInputLabel-formControl",
                                                                            "marginDense": "MuiInputLabel-marginDense",
                                                                            "outlined": "MuiInputLabel-outlined",
                                                                            "required": "Mui-required",
                                                                            "root": "MuiInputLabel-root",
                                                                            "shrink": "MuiInputLabel-shrink",
                                                                          }
                                                                        }
                                                                        htmlFor="post"
                                                                      >
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                          htmlFor="post"
                                                                          muiFormControl={
                                                                            Object {
                                                                              "adornedStart": false,
                                                                              "disabled": false,
                                                                              "error": false,
                                                                              "filled": false,
                                                                              "focused": false,
                                                                              "margin": "normal",
                                                                              "onBlur": [Function],
                                                                              "onEmpty": [Function],
                                                                              "onFilled": [Function],
                                                                              "onFocus": [Function],
                                                                              "required": false,
                                                                              "variant": "standard",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(WithFormControlContext(ForwardRef(FormLabel)))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={false}
                                                                            htmlFor="post"
                                                                          >
                                                                            <WithFormControlContext(ForwardRef(FormLabel))
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={false}
                                                                              htmlFor="post"
                                                                            >
                                                                              <ForwardRef(FormLabel)
                                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                classes={
                                                                                  Object {
                                                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                    "disabled": "Mui-disabled Mui-disabled",
                                                                                    "error": "Mui-error Mui-error",
                                                                                    "filled": "MuiFormLabel-filled",
                                                                                    "focused": "Mui-focused Mui-focused",
                                                                                    "required": "Mui-required Mui-required",
                                                                                    "root": "MuiFormLabel-root",
                                                                                  }
                                                                                }
                                                                                data-shrink={false}
                                                                                htmlFor="post"
                                                                                muiFormControl={
                                                                                  Object {
                                                                                    "adornedStart": false,
                                                                                    "disabled": false,
                                                                                    "error": false,
                                                                                    "filled": false,
                                                                                    "focused": false,
                                                                                    "margin": "normal",
                                                                                    "onBlur": [Function],
                                                                                    "onEmpty": [Function],
                                                                                    "onFilled": [Function],
                                                                                    "onFocus": [Function],
                                                                                    "required": false,
                                                                                    "variant": "standard",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <label
                                                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                                                                  data-shrink={false}
                                                                                  htmlFor="post"
                                                                                >
                                                                                  Post Code
                                                                                </label>
                                                                              </ForwardRef(FormLabel)>
                                                                            </WithFormControlContext(ForwardRef(FormLabel))>
                                                                          </WithStyles(WithFormControlContext(ForwardRef(FormLabel)))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithFormControlContext(ForwardRef(InputLabel))>
                                                                    </WithStyles(WithFormControlContext(ForwardRef(InputLabel)))>
                                                                    <WithStyles(ForwardRef(Input))
                                                                      id="post"
                                                                      readOnly={true}
                                                                      value={Array []}
                                                                    >
                                                                      <ForwardRef(Input)
                                                                        classes={
                                                                          Object {
                                                                            "disabled": "Mui-disabled",
                                                                            "error": "Mui-error",
                                                                            "focused": "Mui-focused",
                                                                            "formControl": "MuiInput-formControl",
                                                                            "fullWidth": "MuiInput-fullWidth",
                                                                            "input": "MuiInput-input",
                                                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                                                            "inputMultiline": "MuiInput-inputMultiline",
                                                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                            "multiline": "MuiInput-multiline",
                                                                            "root": "MuiInput-root",
                                                                            "underline": "MuiInput-underline",
                                                                          }
                                                                        }
                                                                        id="post"
                                                                        readOnly={true}
                                                                        value={Array []}
                                                                      >
                                                                        <WithStyles(ForwardRef(InputBase))
                                                                          classes={
                                                                            Object {
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInput-formControl",
                                                                              "fullWidth": "MuiInput-fullWidth",
                                                                              "input": "MuiInput-input",
                                                                              "inputMarginDense": "MuiInput-inputMarginDense",
                                                                              "inputMultiline": "MuiInput-inputMultiline",
                                                                              "inputTypeSearch": "MuiInput-inputTypeSearch",
                                                                              "multiline": "MuiInput-multiline",
                                                                              "root": "MuiInput-root MuiInput-underline",
                                                                              "underline": null,
                                                                            }
                                                                          }
                                                                          fullWidth={false}
                                                                          id="post"
                                                                          inputComponent="input"
                                                                          multiline={false}
                                                                          readOnly={true}
                                                                          type="text"
                                                                          value={Array []}
                                                                        >
                                                                          <ForwardRef(InputBase)
                                                                            classes={
                                                                              Object {
                                                                                "adornedEnd": "MuiInputBase-adornedEnd",
                                                                                "adornedStart": "MuiInputBase-adornedStart",
                                                                                "disabled": "Mui-disabled Mui-disabled",
                                                                                "error": "Mui-error Mui-error",
                                                                                "focused": "Mui-focused Mui-focused",
                                                                                "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                                                                "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                                                                "input": "MuiInputBase-input MuiInput-input",
                                                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                                                "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                                                                "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                                                                "marginDense": "MuiInputBase-marginDense",
                                                                                "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                                                                "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                                                              }
                                                                            }
                                                                            fullWidth={false}
                                                                            id="post"
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            readOnly={true}
                                                                            type="text"
                                                                            value={Array []}
                                                                          >
                                                                            <div
                                                                              className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                                                              onClick={[Function]}
                                                                            >
                                                                              <input
                                                                                aria-invalid={false}
                                                                                className="MuiInputBase-input MuiInput-input"
                                                                                disabled={false}
                                                                                id="post"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                readOnly={true}
                                                                                required={false}
                                                                                type="text"
                                                                                value={Array []}
                                                                              />
                                                                            </div>
                                                                          </ForwardRef(InputBase)>
                                                                        </WithStyles(ForwardRef(InputBase))>
                                                                      </ForwardRef(Input)>
                                                                    </WithStyles(ForwardRef(Input))>
                                                                  </div>
                                                                </ForwardRef(FormControl)>
                                                              </WithStyles(ForwardRef(FormControl))>
                                                            </ForwardRef(TextField)>
                                                          </WithStyles(ForwardRef(TextField))>
                                                        </div>
                                                      </ForwardRef(Grid)>
                                                    </WithStyles(ForwardRef(Grid))>
                                                  </GridItem>
                                                </WithStyles(GridItem)>
                                              </div>
                                            </ForwardRef(Grid)>
                                          </WithStyles(ForwardRef(Grid))>
                                        </GridContainer>
                                      </WithStyles(GridContainer)>
                                      <WithStyles(GridContainer)>
                                        <GridContainer
                                          classes={
                                            Object {
                                              "grid": "GridContainer-grid-50",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(Grid))
                                            className="GridContainer-grid-50"
                                            container={true}
                                          >
                                            <ForwardRef(Grid)
                                              className="GridContainer-grid-50"
                                              classes={
                                                Object {
                                                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                  "container": "MuiGrid-container",
                                                  "direction-xs-column": "MuiGrid-direction-xs-column",
                                                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                  "grid-lg-1": "MuiGrid-grid-lg-1",
                                                  "grid-lg-10": "MuiGrid-grid-lg-10",
                                                  "grid-lg-11": "MuiGrid-grid-lg-11",
                                                  "grid-lg-12": "MuiGrid-grid-lg-12",
                                                  "grid-lg-2": "MuiGrid-grid-lg-2",
                                                  "grid-lg-3": "MuiGrid-grid-lg-3",
                                                  "grid-lg-4": "MuiGrid-grid-lg-4",
                                                  "grid-lg-5": "MuiGrid-grid-lg-5",
                                                  "grid-lg-6": "MuiGrid-grid-lg-6",
                                                  "grid-lg-7": "MuiGrid-grid-lg-7",
                                                  "grid-lg-8": "MuiGrid-grid-lg-8",
                                                  "grid-lg-9": "MuiGrid-grid-lg-9",
                                                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                  "grid-lg-true": "MuiGrid-grid-lg-true",
                                                  "grid-md-1": "MuiGrid-grid-md-1",
                                                  "grid-md-10": "MuiGrid-grid-md-10",
                                                  "grid-md-11": "MuiGrid-grid-md-11",
                                                  "grid-md-12": "MuiGrid-grid-md-12",
                                                  "grid-md-2": "MuiGrid-grid-md-2",
                                                  "grid-md-3": "MuiGrid-grid-md-3",
                                                  "grid-md-4": "MuiGrid-grid-md-4",
                                                  "grid-md-5": "MuiGrid-grid-md-5",
                                                  "grid-md-6": "MuiGrid-grid-md-6",
                                                  "grid-md-7": "MuiGrid-grid-md-7",
                                                  "grid-md-8": "MuiGrid-grid-md-8",
                                                  "grid-md-9": "MuiGrid-grid-md-9",
                                                  "grid-md-auto": "MuiGrid-grid-md-auto",
                                                  "grid-md-true": "MuiGrid-grid-md-true",
                                                  "grid-sm-1": "MuiGrid-grid-sm-1",
                                                  "grid-sm-10": "MuiGrid-grid-sm-10",
                                                  "grid-sm-11": "MuiGrid-grid-sm-11",
                                                  "grid-sm-12": "MuiGrid-grid-sm-12",
                                                  "grid-sm-2": "MuiGrid-grid-sm-2",
                                                  "grid-sm-3": "MuiGrid-grid-sm-3",
                                                  "grid-sm-4": "MuiGrid-grid-sm-4",
                                                  "grid-sm-5": "MuiGrid-grid-sm-5",
                                                  "grid-sm-6": "MuiGrid-grid-sm-6",
                                                  "grid-sm-7": "MuiGrid-grid-sm-7",
                                                  "grid-sm-8": "MuiGrid-grid-sm-8",
                                                  "grid-sm-9": "MuiGrid-grid-sm-9",
                                                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                  "grid-sm-true": "MuiGrid-grid-sm-true",
                                                  "grid-xl-1": "MuiGrid-grid-xl-1",
                                                  "grid-xl-10": "MuiGrid-grid-xl-10",
                                                  "grid-xl-11": "MuiGrid-grid-xl-11",
                                                  "grid-xl-12": "MuiGrid-grid-xl-12",
                                                  "grid-xl-2": "MuiGrid-grid-xl-2",
                                                  "grid-xl-3": "MuiGrid-grid-xl-3",
                                                  "grid-xl-4": "MuiGrid-grid-xl-4",
                                                  "grid-xl-5": "MuiGrid-grid-xl-5",
                                                  "grid-xl-6": "MuiGrid-grid-xl-6",
                                                  "grid-xl-7": "MuiGrid-grid-xl-7",
                                                  "grid-xl-8": "MuiGrid-grid-xl-8",
                                                  "grid-xl-9": "MuiGrid-grid-xl-9",
                                                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                  "grid-xl-true": "MuiGrid-grid-xl-true",
                                                  "grid-xs-1": "MuiGrid-grid-xs-1",
                                                  "grid-xs-10": "MuiGrid-grid-xs-10",
                                                  "grid-xs-11": "MuiGrid-grid-xs-11",
                                                  "grid-xs-12": "MuiGrid-grid-xs-12",
                                                  "grid-xs-2": "MuiGrid-grid-xs-2",
                                                  "grid-xs-3": "MuiGrid-grid-xs-3",
                                                  "grid-xs-4": "MuiGrid-grid-xs-4",
                                                  "grid-xs-5": "MuiGrid-grid-xs-5",
                                                  "grid-xs-6": "MuiGrid-grid-xs-6",
                                                  "grid-xs-7": "MuiGrid-grid-xs-7",
                                                  "grid-xs-8": "MuiGrid-grid-xs-8",
                                                  "grid-xs-9": "MuiGrid-grid-xs-9",
                                                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                  "grid-xs-true": "MuiGrid-grid-xs-true",
                                                  "item": "MuiGrid-item",
                                                  "justify-xs-center": "MuiGrid-justify-xs-center",
                                                  "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                  "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                  "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                  "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                  "root": "MuiGrid-root",
                                                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                }
                                              }
                                              container={true}
                                            >
                                              <div
                                                className="MuiGrid-root GridContainer-grid-50 MuiGrid-container"
                                              >
                                                <WithStyles(GridItem)
                                                  md={12}
                                                  sm={12}
                                                  xs={12}
                                                >
                                                  <GridItem
                                                    classes={
                                                      Object {
                                                        "grid": "GridItem-grid-154",
                                                      }
                                                    }
                                                    md={12}
                                                    sm={12}
                                                    xs={12}
                                                  >
                                                    <WithStyles(ForwardRef(Grid))
                                                      className="GridItem-grid-154"
                                                      item={true}
                                                      md={12}
                                                      sm={12}
                                                      xs={12}
                                                    >
                                                      <ForwardRef(Grid)
                                                        className="GridItem-grid-154"
                                                        classes={
                                                          Object {
                                                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                            "container": "MuiGrid-container",
                                                            "direction-xs-column": "MuiGrid-direction-xs-column",
                                                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                            "grid-lg-1": "MuiGrid-grid-lg-1",
                                                            "grid-lg-10": "MuiGrid-grid-lg-10",
                                                            "grid-lg-11": "MuiGrid-grid-lg-11",
                                                            "grid-lg-12": "MuiGrid-grid-lg-12",
                                                            "grid-lg-2": "MuiGrid-grid-lg-2",
                                                            "grid-lg-3": "MuiGrid-grid-lg-3",
                                                            "grid-lg-4": "MuiGrid-grid-lg-4",
                                                            "grid-lg-5": "MuiGrid-grid-lg-5",
                                                            "grid-lg-6": "MuiGrid-grid-lg-6",
                                                            "grid-lg-7": "MuiGrid-grid-lg-7",
                                                            "grid-lg-8": "MuiGrid-grid-lg-8",
                                                            "grid-lg-9": "MuiGrid-grid-lg-9",
                                                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                            "grid-lg-true": "MuiGrid-grid-lg-true",
                                                            "grid-md-1": "MuiGrid-grid-md-1",
                                                            "grid-md-10": "MuiGrid-grid-md-10",
                                                            "grid-md-11": "MuiGrid-grid-md-11",
                                                            "grid-md-12": "MuiGrid-grid-md-12",
                                                            "grid-md-2": "MuiGrid-grid-md-2",
                                                            "grid-md-3": "MuiGrid-grid-md-3",
                                                            "grid-md-4": "MuiGrid-grid-md-4",
                                                            "grid-md-5": "MuiGrid-grid-md-5",
                                                            "grid-md-6": "MuiGrid-grid-md-6",
                                                            "grid-md-7": "MuiGrid-grid-md-7",
                                                            "grid-md-8": "MuiGrid-grid-md-8",
                                                            "grid-md-9": "MuiGrid-grid-md-9",
                                                            "grid-md-auto": "MuiGrid-grid-md-auto",
                                                            "grid-md-true": "MuiGrid-grid-md-true",
                                                            "grid-sm-1": "MuiGrid-grid-sm-1",
                                                            "grid-sm-10": "MuiGrid-grid-sm-10",
                                                            "grid-sm-11": "MuiGrid-grid-sm-11",
                                                            "grid-sm-12": "MuiGrid-grid-sm-12",
                                                            "grid-sm-2": "MuiGrid-grid-sm-2",
                                                            "grid-sm-3": "MuiGrid-grid-sm-3",
                                                            "grid-sm-4": "MuiGrid-grid-sm-4",
                                                            "grid-sm-5": "MuiGrid-grid-sm-5",
                                                            "grid-sm-6": "MuiGrid-grid-sm-6",
                                                            "grid-sm-7": "MuiGrid-grid-sm-7",
                                                            "grid-sm-8": "MuiGrid-grid-sm-8",
                                                            "grid-sm-9": "MuiGrid-grid-sm-9",
                                                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                            "grid-sm-true": "MuiGrid-grid-sm-true",
                                                            "grid-xl-1": "MuiGrid-grid-xl-1",
                                                            "grid-xl-10": "MuiGrid-grid-xl-10",
                                                            "grid-xl-11": "MuiGrid-grid-xl-11",
                                                            "grid-xl-12": "MuiGrid-grid-xl-12",
                                                            "grid-xl-2": "MuiGrid-grid-xl-2",
                                                            "grid-xl-3": "MuiGrid-grid-xl-3",
                                                            "grid-xl-4": "MuiGrid-grid-xl-4",
                                                            "grid-xl-5": "MuiGrid-grid-xl-5",
                                                            "grid-xl-6": "MuiGrid-grid-xl-6",
                                                            "grid-xl-7": "MuiGrid-grid-xl-7",
                                                            "grid-xl-8": "MuiGrid-grid-xl-8",
                                                            "grid-xl-9": "MuiGrid-grid-xl-9",
                                                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                            "grid-xl-true": "MuiGrid-grid-xl-true",
                                                            "grid-xs-1": "MuiGrid-grid-xs-1",
                                                            "grid-xs-10": "MuiGrid-grid-xs-10",
                                                            "grid-xs-11": "MuiGrid-grid-xs-11",
                                                            "grid-xs-12": "MuiGrid-grid-xs-12",
                                                            "grid-xs-2": "MuiGrid-grid-xs-2",
                                                            "grid-xs-3": "MuiGrid-grid-xs-3",
                                                            "grid-xs-4": "MuiGrid-grid-xs-4",
                                                            "grid-xs-5": "MuiGrid-grid-xs-5",
                                                            "grid-xs-6": "MuiGrid-grid-xs-6",
                                                            "grid-xs-7": "MuiGrid-grid-xs-7",
                                                            "grid-xs-8": "MuiGrid-grid-xs-8",
                                                            "grid-xs-9": "MuiGrid-grid-xs-9",
                                                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                            "grid-xs-true": "MuiGrid-grid-xs-true",
                                                            "item": "MuiGrid-item",
                                                            "justify-xs-center": "MuiGrid-justify-xs-center",
                                                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                            "root": "MuiGrid-root",
                                                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                          }
                                                        }
                                                        item={true}
                                                        md={12}
                                                        sm={12}
                                                        xs={12}
                                                      >
                                                        <div
                                                          className="MuiGrid-root GridItem-grid-154 MuiGrid-item MuiGrid-grid-xs-12 MuiGrid-grid-sm-12 MuiGrid-grid-md-12"
                                                        >
                                                          <WithStyles(CustomTable)
                                                            tableData={Array []}
                                                            tableHead={
                                                              Array [
                                                                "Questionnaire Name",
                                                                "Status",
                                                              ]
                                                            }
                                                            tableHeaderColor="info"
                                                          >
                                                            <CustomTable
                                                              classes={
                                                                Object {
                                                                  "dangerTableHeader": "CustomTable-dangerTableHeader-227",
                                                                  "grayTableHeader": "CustomTable-grayTableHeader-231",
                                                                  "infoTableHeader": "CustomTable-infoTableHeader-229",
                                                                  "primaryTableHeader": "CustomTable-primaryTableHeader-226",
                                                                  "roseTableHeader": "CustomTable-roseTableHeader-230",
                                                                  "successTableHeader": "CustomTable-successTableHeader-228",
                                                                  "table": "CustomTable-table-232",
                                                                  "tableBodyRow": "CustomTable-tableBodyRow-237",
                                                                  "tableCell": "CustomTable-tableCell-234",
                                                                  "tableHeadCell": "CustomTable-tableHeadCell-233",
                                                                  "tableHeadRow": "CustomTable-tableHeadRow-236",
                                                                  "tableResponsive": "CustomTable-tableResponsive-235",
                                                                  "warningTableHeader": "CustomTable-warningTableHeader-225",
                                                                }
                                                              }
                                                              tableData={Array []}
                                                              tableHead={
                                                                Array [
                                                                  "Questionnaire Name",
                                                                  "Status",
                                                                ]
                                                              }
                                                              tableHeaderColor="info"
                                                            >
                                                              <div
                                                                className="CustomTable-tableResponsive-235"
                                                              >
                                                                <WithStyles(ForwardRef(Table))
                                                                  className="CustomTable-table-232"
                                                                >
                                                                  <ForwardRef(Table)
                                                                    className="CustomTable-table-232"
                                                                    classes={
                                                                      Object {
                                                                        "root": "MuiTable-root",
                                                                      }
                                                                    }
                                                                  >
                                                                    <table
                                                                      className="MuiTable-root CustomTable-table-232"
                                                                    >
                                                                      <WithStyles(ForwardRef(TableHead))
                                                                        className="CustomTable-infoTableHeader-229"
                                                                      >
                                                                        <ForwardRef(TableHead)
                                                                          className="CustomTable-infoTableHeader-229"
                                                                          classes={
                                                                            Object {
                                                                              "root": "MuiTableHead-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <thead
                                                                            className="MuiTableHead-root CustomTable-infoTableHeader-229"
                                                                          >
                                                                            <WithStyles(ForwardRef(TableRow))
                                                                              className="CustomTable-tableHeadRow-236"
                                                                            >
                                                                              <ForwardRef(TableRow)
                                                                                className="CustomTable-tableHeadRow-236"
                                                                                classes={
                                                                                  Object {
                                                                                    "footer": "MuiTableRow-footer",
                                                                                    "head": "MuiTableRow-head",
                                                                                    "hover": "MuiTableRow-hover",
                                                                                    "root": "MuiTableRow-root",
                                                                                    "selected": "Mui-selected",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <tr
                                                                                  className="MuiTableRow-root CustomTable-tableHeadRow-236 MuiTableRow-head"
                                                                                >
                                                                                  <WithStyles(ForwardRef(TableCell))
                                                                                    className="CustomTable-tableCell-234 CustomTable-tableHeadCell-233"
                                                                                    key="0"
                                                                                  >
                                                                                    <ForwardRef(TableCell)
                                                                                      className="CustomTable-tableCell-234 CustomTable-tableHeadCell-233"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTableCell-alignCenter",
                                                                                          "alignJustify": "MuiTableCell-alignJustify",
                                                                                          "alignLeft": "MuiTableCell-alignLeft",
                                                                                          "alignRight": "MuiTableCell-alignRight",
                                                                                          "body": "MuiTableCell-body",
                                                                                          "footer": "MuiTableCell-footer",
                                                                                          "head": "MuiTableCell-head",
                                                                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                                          "paddingNone": "MuiTableCell-paddingNone",
                                                                                          "root": "MuiTableCell-root",
                                                                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <th
                                                                                        aria-sort={null}
                                                                                        className="MuiTableCell-root CustomTable-tableCell-234 CustomTable-tableHeadCell-233 MuiTableCell-head"
                                                                                        scope="col"
                                                                                      >
                                                                                        <h4>
                                                                                          Questionnaire Name
                                                                                        </h4>
                                                                                      </th>
                                                                                    </ForwardRef(TableCell)>
                                                                                  </WithStyles(ForwardRef(TableCell))>
                                                                                  <WithStyles(ForwardRef(TableCell))
                                                                                    className="CustomTable-tableCell-234 CustomTable-tableHeadCell-233"
                                                                                    key="1"
                                                                                  >
                                                                                    <ForwardRef(TableCell)
                                                                                      className="CustomTable-tableCell-234 CustomTable-tableHeadCell-233"
                                                                                      classes={
                                                                                        Object {
                                                                                          "alignCenter": "MuiTableCell-alignCenter",
                                                                                          "alignJustify": "MuiTableCell-alignJustify",
                                                                                          "alignLeft": "MuiTableCell-alignLeft",
                                                                                          "alignRight": "MuiTableCell-alignRight",
                                                                                          "body": "MuiTableCell-body",
                                                                                          "footer": "MuiTableCell-footer",
                                                                                          "head": "MuiTableCell-head",
                                                                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                                                          "paddingNone": "MuiTableCell-paddingNone",
                                                                                          "root": "MuiTableCell-root",
                                                                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <th
                                                                                        aria-sort={null}
                                                                                        className="MuiTableCell-root CustomTable-tableCell-234 CustomTable-tableHeadCell-233 MuiTableCell-head"
                                                                                        scope="col"
                                                                                      >
                                                                                        <h4>
                                                                                          Status
                                                                                        </h4>
                                                                                      </th>
                                                                                    </ForwardRef(TableCell)>
                                                                                  </WithStyles(ForwardRef(TableCell))>
                                                                                </tr>
                                                                              </ForwardRef(TableRow)>
                                                                            </WithStyles(ForwardRef(TableRow))>
                                                                          </thead>
                                                                        </ForwardRef(TableHead)>
                                                                      </WithStyles(ForwardRef(TableHead))>
                                                                      <WithStyles(ForwardRef(TableBody))>
                                                                        <ForwardRef(TableBody)
                                                                          classes={
                                                                            Object {
                                                                              "root": "MuiTableBody-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <tbody
                                                                            className="MuiTableBody-root"
                                                                          />
                                                                        </ForwardRef(TableBody)>
                                                                      </WithStyles(ForwardRef(TableBody))>
                                                                    </table>
                                                                  </ForwardRef(Table)>
                                                                </WithStyles(ForwardRef(Table))>
                                                              </div>
                                                            </CustomTable>
                                                          </WithStyles(CustomTable)>
                                                        </div>
                                                      </ForwardRef(Grid)>
                                                    </WithStyles(ForwardRef(Grid))>
                                                  </GridItem>
                                                </WithStyles(GridItem)>
                                              </div>
                                            </ForwardRef(Grid)>
                                          </WithStyles(ForwardRef(Grid))>
                                        </GridContainer>
                                      </WithStyles(GridContainer)>
                                    </div>
                                  </CardBody>
                                </WithStyles(CardBody)>
                              </div>
                            </Card>
                          </WithStyles(Card)>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                  </GridItem>
                </WithStyles(GridItem)>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
        </GridContainer>
      </WithStyles(GridContainer)>
    </div>
  </UserDetail>
</WithStyles(UserDetail)>
`;
